{"version":3,"file":"utils.js","sourceRoot":"../src","sources":["utils.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n *--------------------------------------------------------*/\n\nimport * as http from 'http';\nimport * as os from 'os';\nimport * as fs from 'fs';\nimport * as url from 'url';\nimport * as path from 'path';\n\nimport * as logger from './logger';\n\nconst DEFAULT_CHROME_PATH = {\n    OSX: '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome',\n    WIN: 'C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe',\n    WINx86: 'C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe',\n    LINUX: '/usr/bin/google-chrome'\n};\n\nexport function getBrowserPath(): string {\n    const platform = getPlatform();\n    if (platform === Platform.OSX) {\n        return existsSync(DEFAULT_CHROME_PATH.OSX) ? DEFAULT_CHROME_PATH.OSX : null;\n    } else if (platform === Platform.Windows) {\n        if (existsSync(DEFAULT_CHROME_PATH.WINx86)) {\n            return DEFAULT_CHROME_PATH.WINx86;\n        } else if (existsSync(DEFAULT_CHROME_PATH.WIN)) {\n            return DEFAULT_CHROME_PATH.WIN;\n        } else {\n            return null;\n        }\n    } else {\n        return existsSync(DEFAULT_CHROME_PATH.LINUX) ? DEFAULT_CHROME_PATH.LINUX : null;\n    }\n}\n\nexport const enum Platform {\n    Windows, OSX, Linux\n}\n\nexport function getPlatform(): Platform {\n    const platform = os.platform();\n    return platform === 'darwin' ? Platform.OSX :\n        platform === 'win32' ? Platform.Windows :\n            Platform.Linux;\n}\n\n/**\n * Node's fs.existsSync is deprecated, implement it in terms of statSync\n */\nexport function existsSync(path: string): boolean {\n    try {\n        fs.statSync(path);\n        return true;\n    } catch (e) {\n        // doesn't exist\n        return false;\n    }\n}\n\nexport class DebounceHelper {\n    private waitToken: NodeJS.Timer;\n\n    constructor(private timeoutMs: number) { }\n\n    /**\n     * If not waiting already, call fn after the timeout\n     */\n    public wait(fn: () => any): void {\n        if (!this.waitToken) {\n            this.waitToken = setTimeout(() => {\n                this.waitToken = null;\n                fn();\n            },\n                this.timeoutMs);\n        }\n    }\n\n    /**\n     * If waiting for something, cancel it and call fn immediately\n     */\n    public doAndCancel(fn: () => any): void {\n        if (this.waitToken) {\n            clearTimeout(this.waitToken);\n            this.waitToken = null;\n        }\n\n        fn();\n    }\n}\n\n/**\n * Returns a reversed version of arr. Doesn't modify the input.\n */\nexport function reversedArr(arr: any[]): any[] {\n    return arr.reduce((reversed: any[], x: any) => {\n        reversed.unshift(x);\n        return reversed;\n    }, []);\n}\n\nexport function promiseTimeout(p?: Promise<any>, timeoutMs = 1000, timeoutMsg?: string): Promise<any> {\n    if (timeoutMsg === undefined) {\n        timeoutMsg = `Promise timed out after ${timeoutMs}ms`;\n    }\n\n    return new Promise((resolve, reject) => {\n        if (p) {\n            p.then(resolve, reject);\n        }\n\n        setTimeout(() => {\n            if (p) {\n                reject(timeoutMsg);\n            } else {\n                resolve();\n            }\n        }, timeoutMs);\n    });\n}\n\nexport function retryAsync(fn: () => Promise<any>, timeoutMs: number): Promise<any> {\n    const startTime = Date.now();\n\n    function tryUntilTimeout(): Promise<any> {\n        return fn().catch(\n            e => {\n                if (Date.now() - startTime < timeoutMs) {\n                    return tryUntilTimeout();\n                } else {\n                    return errP(e);\n                }\n            });\n    }\n\n    return tryUntilTimeout();\n}\n\n/**\n * Modify a url/path either from the client or the target to a common format for comparing.\n * The client can handle urls in this format too.\n * file:///D:\\\\scripts\\\\code.js => d:/scripts/code.js\n * file:///Users/me/project/code.js => /Users/me/project/code.js\n * c:/scripts/code.js => c:\\\\scripts\\\\code.js\n * http://site.com/scripts/code.js => (no change)\n * http://site.com/ => http://site.com\n */\nexport function canonicalizeUrl(urlOrPath: string): string {\n    if (urlOrPath.startsWith('file:///')) {\n        urlOrPath = urlOrPath.replace('file:///', '');\n        urlOrPath = decodeURIComponent(urlOrPath);\n        if (urlOrPath[0] !== '/' && urlOrPath.indexOf(':') < 0) {\n            // Ensure unix-style path starts with /, it can be removed when file:/// was stripped.\n            // Don't add if the url still has a protocol\n            urlOrPath = '/' + urlOrPath;\n        }\n    }\n\n    // Remove query params\n    if (urlOrPath.indexOf('?') >= 0) {\n        urlOrPath = urlOrPath.split('?')[0];\n    }\n\n    urlOrPath = stripTrailingSlash(urlOrPath);\n    urlOrPath = fixDriveLetterAndSlashes(urlOrPath);\n\n    return urlOrPath;\n}\n\n/**\n * Replace any backslashes with forward slashes\n * blah\\something => blah/something\n */\nexport function forceForwardSlashes(aUrl: string): string {\n    return aUrl.replace(/\\\\/g, '/');\n}\n\n/**\n * Ensure lower case drive letter and \\ on Windows\n */\nexport function fixDriveLetterAndSlashes(aPath: string): string {\n    if (getPlatform() === Platform.Windows) {\n        if (aPath.match(/file:\\/\\/\\/[A-Za-z]:/)) {\n            const prefixLen = 'file:///'.length;\n            aPath =\n                'file:///' +\n                aPath[prefixLen].toLowerCase() +\n                aPath.substr(prefixLen + 1).replace(/\\//g, path.sep);\n        } else if (aPath.match(/^[A-Za-z]:/)) {\n            // If this is Windows and the path starts with a drive letter, ensure lowercase. VS Code uses a lowercase drive letter\n            aPath = aPath[0].toLowerCase() + aPath.substr(1);\n            aPath = aPath.replace(/\\//g, path.sep);\n        }\n    }\n\n    return aPath;\n}\n\n/**\n * Remove a slash of any flavor from the end of the path\n */\nexport function stripTrailingSlash(aPath: string): string {\n    return aPath\n        .replace(/\\/$/, '')\n        .replace(/\\\\$/, '');\n}\n\n/**\n * A helper for returning a rejected promise with an Error object. Avoids double-wrapping an Error, which could happen\n * when passing on a failure from a Promise error handler.\n * @param msg - Should be either a string or an Error\n */\nexport function errP(msg: any): Promise<any> {\n    let e: Error;\n    if (!msg) {\n        e = new Error('Unknown error');\n    } else if (msg.message) {\n        // msg is already an Error object\n        e = msg;\n    } else {\n        e = new Error(msg);\n    }\n\n    return Promise.reject(e);\n}\n\n/**\n * Helper function to GET the contents of a url\n */\nexport function getURL(aUrl: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n        http.get(aUrl, response => {\n            let responseData = '';\n            response.on('data', chunk => responseData += chunk);\n            response.on('end', () => {\n                // Sometimes the 'error' event is not fired. Double check here.\n                if (response.statusCode === 200) {\n                    resolve(responseData);\n                } else {\n                    logger.log('Http Get failed with: ' + response.statusCode.toString() + ' ' + response.statusMessage.toString());\n                    reject(responseData);\n                }\n            });\n        }).on('error', e => {\n            reject(e);\n        });\n    });\n}\n\n/**\n * Returns true if urlOrPath is like \"http://localhost\" and not like \"c:/code/file.js\" or \"/code/file.js\"\n */\nexport function isURL(urlOrPath: string): boolean {\n    return urlOrPath && !path.isAbsolute(urlOrPath) && !!url.parse(urlOrPath).protocol;\n}\n\n/**\n * Strip a string from the left side of a string\n */\nexport function lstrip(s: string, lStr: string): string {\n    return s.startsWith(lStr) ?\n        s.substr(lStr.length) :\n        s;\n}\n\n/**\n * Convert a local path to a file URL, like\n * C:/code/app.js => file:///C:/code/app.js\n * /code/app.js => file:///code/app.js\n */\nexport function pathToFileURL(absPath: string): string {\n    absPath = forceForwardSlashes(absPath);\n    absPath = (absPath.startsWith('/') ? 'file://' : 'file:///') +\n        absPath;\n    return encodeURI(absPath);\n}\n"]}