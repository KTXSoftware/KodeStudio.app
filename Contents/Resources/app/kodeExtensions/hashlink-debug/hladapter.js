// Generated by Haxe 4.0.0-preview.4+eec79c1e5
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.__name__ = true;
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
	,matched: function(n) {
		if(this.r.m != null && n >= 0 && n < this.r.m.length) {
			return this.r.m[n];
		} else {
			throw new js__$Boot_HaxeError("EReg::matched");
		}
	}
	,__class__: EReg
};
var VarValue = $hxEnums["VarValue"] = { __ename__ : true, __constructs__ : ["VScope","VValue","VUnkownFile","VObjFields","VMapPair","VStatics"]
	,VScope: ($_=function(k) { return {_hx_index:0,k:k,__enum__:"VarValue",toString:$estr}; },$_.__params__ = ["k"],$_)
	,VValue: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"VarValue",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VUnkownFile: ($_=function(file) { return {_hx_index:2,file:file,__enum__:"VarValue",toString:$estr}; },$_.__params__ = ["file"],$_)
	,VObjFields: ($_=function(v,o) { return {_hx_index:3,v:v,o:o,__enum__:"VarValue",toString:$estr}; },$_.__params__ = ["v","o"],$_)
	,VMapPair: ($_=function(key,value) { return {_hx_index:4,key:key,value:value,__enum__:"VarValue",toString:$estr}; },$_.__params__ = ["key","value"],$_)
	,VStatics: ($_=function(cl) { return {_hx_index:5,cl:cl,__enum__:"VarValue",toString:$estr}; },$_.__params__ = ["cl"],$_)
};
var adapter_DebugSession = require("vscode-debugadapter").DebugSession;
var Sys = function() { };
Sys.__name__ = true;
Sys.systemName = function() {
	var _g = process.platform;
	switch(_g) {
	case "darwin":
		return "Mac";
	case "freebsd":
		return "BSD";
	case "linux":
		return "Linux";
	case "win32":
		return "Windows";
	default:
		var other = _g;
		return other;
	}
};
Sys.sleep = function(seconds) {
	var end = Date.now() + seconds * 1000;
	while(Date.now() <= end) {
	}
};
var HLAdapter = function(obsolete_debuggerLinesAndColumnsStartAt1,obsolete_isServer) {
	this.r_call = new EReg("^Called from [^(]+\\(([A-Za-z0-9_./\\\\:]+) line ([0-9]+)\\)","");
	this.r_trace = new EReg("^([A-Za-z0-9_./]+):([0-9]+): ","");
	this.startTime = new Date().getTime() / 1000;
	this.doDebug = true;
	this.debugPort = 6112;
	adapter_DebugSession.call(this,obsolete_debuggerLinesAndColumnsStartAt1,obsolete_isServer);
};
HLAdapter.__name__ = true;
HLAdapter.main = function() {
	adapter_DebugSession.run(HLAdapter);
};
HLAdapter.__super__ = adapter_DebugSession;
HLAdapter.prototype = $extend(adapter_DebugSession.prototype,{
	initializeRequest: function(response,args) {
		var _gthis = this;
		haxe_Log.trace = function(v,p) {
			var str = haxe_Log.formatOutput(v,p);
			var tmp = ((new Date().getTime() / 1000 - _gthis.startTime) * 10 | 0) / 10 + "> " + str + "\n";
			_gthis.sendEvent(new adapter_OutputEvent(tmp));
		};
		this.debug("initialize",{ fileName : "src/HLAdapter.hx", lineNumber : 43, className : "HLAdapter", methodName : "initializeRequest"});
		response.body.supportsConfigurationDoneRequest = true;
		response.body.supportsFunctionBreakpoints = false;
		response.body.supportsConditionalBreakpoints = true;
		response.body.supportsEvaluateForHovers = true;
		response.body.supportsStepBack = false;
		response.body.supportsSetVariable = true;
		response.body.exceptionBreakpointFilters = [{ filter : "all", label : "Stop on all exceptions"}];
		this.sendResponse(response);
	}
	,debug: function(v,pos) {
		if(HLAdapter.DEBUG) {
			haxe_Log.trace(v,pos);
		}
	}
	,launchRequest: function(response,args) {
		this.debug("launch",{ fileName : "src/HLAdapter.hx", lineNumber : 62, className : "HLAdapter", methodName : "launchRequest"});
		this.workspaceDirectory = Reflect.field(args,"cwd");
		process.chdir(this.workspaceDirectory);
		var port = Reflect.field(args,"port");
		if(port == null) {
			port = this.debugPort;
		}
		try {
			var program = this.launch(args,response);
			if(this.doDebug && !this.startDebug(program,port)) {
				this.proc.kill();
				this.dbg = null;
				throw new js__$Boot_HaxeError("Could not initialize debugger");
			}
			this.sendEvent(new adapter_InitializedEvent());
		} catch( e ) {
			this.error(response,(e instanceof js__$Boot_HaxeError) ? e.val : e);
			this.sendEvent(new adapter_TerminatedEvent());
		}
		this.sendResponse(response);
	}
	,setExceptionBreakPointsRequest: function(response,args) {
		this.dbg.set_breakOnThrow(args.filters.indexOf("all") >= 0);
		this.sendResponse(response);
	}
	,attachRequest: function(response,args) {
		this.debug("attach",{ fileName : "src/HLAdapter.hx", lineNumber : 91, className : "HLAdapter", methodName : "attachRequest"});
		this.workspaceDirectory = Reflect.field(args,"cwd");
		process.chdir(this.workspaceDirectory);
		var program = this.readHXML(Reflect.field(args,"hxml"));
		try {
			if(!this.startDebug(program,Reflect.field(args,"port"))) {
				throw new js__$Boot_HaxeError("Failed to start debugging");
			}
			this.sendEvent(new adapter_InitializedEvent());
		} catch( e ) {
			this.error(response,(e instanceof js__$Boot_HaxeError) ? e.val : e);
			this.sendEvent(new adapter_TerminatedEvent());
		}
		this.sendResponse(response);
	}
	,error: function(response,message) {
		this.sendErrorResponse(response,3000,"" + Std.string(message));
		this.sendToOutput("ERROR : " + Std.string(message),"stderr");
	}
	,getFilePath: function(file) {
		var _g = 0;
		var _g1 = this.classPath;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(sys_FileSystem.exists(c + file)) {
				return c + file;
			}
		}
		return null;
	}
	,processLine: function(str,out) {
		var e = new adapter_OutputEvent(str + "\n",out);
		var reg = null;
		if(this.r_trace.match(str)) {
			reg = this.r_trace;
		} else if(this.r_call.match(str)) {
			reg = this.r_call;
		}
		if(reg != null) {
			var file = reg.matched(1);
			var path = this.getFilePath(file);
			if(path != null) {
				e.body.source = { name : file, path : path};
				var tmp = reg.matched(2);
				e.body.line = Std.parseInt(tmp);
				e.body.column = 0;
			}
		}
		this.sendEvent(e);
	}
	,readHXML: function(hxml) {
		var _gthis = this;
		this.classPath = [];
		var hxContent;
		try {
			hxContent = js_node_Fs.readFileSync(hxml,{ encoding : "utf8"});
		} catch( e ) {
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			throw new js__$Boot_HaxeError("Missing HXML file '" + hxml + "'");
		}
		var program = null;
		var libs = [];
		var hxArgs = hxContent.split("\n");
		var flushLibs = function() {
			if(libs.length == 0) {
				return;
			}
			var p = js_node_ChildProcess.spawnSync("haxelib",["path"].concat(libs));
			if(p.status != 0) {
				return;
			}
			var _g = 0;
			var _g1 = p.stdout.toString().split("\n");
			while(_g < _g1.length) {
				var line = _g1[_g];
				++_g;
				var line1 = StringTools.trim(line);
				if(line1 == "") {
					continue;
				}
				if(HxOverrides.cca(line1,0) == 45) {
					hxArgs.push(line1);
					continue;
				}
				_gthis.classPath.push(line1);
			}
		};
		while(hxArgs.length > 0) {
			var args = StringTools.trim(hxArgs.shift()).split(" ");
			if(args.length == 0) {
				continue;
			}
			var arg = args.shift();
			var value = args.join(" ");
			switch(arg) {
			case "-cp":
				flushLibs();
				this.classPath.push(value);
				break;
			case "-hl":
				program = value;
				break;
			case "-lib":
				libs.push(value);
				break;
			default:
				if(StringTools.endsWith(arg,".hxml") && value == "") {
					hxArgs = js_node_Fs.readFileSync(arg,{ encoding : "utf8"}).split("\n").concat(hxArgs);
				}
			}
		}
		flushLibs();
		this.classPath.reverse();
		this.classPath.push("./");
		var _g2 = 0;
		var _g11 = this.classPath.length;
		while(_g2 < _g11) {
			var i = _g2++;
			var relPath = this.classPath[i];
			var c;
			try {
				c = js_node_Fs.realpathSync(relPath);
			} catch( e2 ) {
				var e3 = (e2 instanceof js__$Boot_HaxeError) ? e2.val : e2;
				c = null;
			}
			c = c.split("\\").join("/");
			if(!StringTools.endsWith(c,"/")) {
				c += "/";
			}
			this.classPath[i] = c;
		}
		this.classPath.push("");
		return program;
	}
	,launch: function(args,response) {
		var _gthis = this;
		var program = this.readHXML(args.hxml);
		if(program == null) {
			throw new js__$Boot_HaxeError(args.hxml + " file does not contain -hl output");
		}
		var hlArgs = ["--debug","" + this.debugPort,program];
		if(this.doDebug) {
			hlArgs.unshift("--debug-wait");
		}
		this.debug("start process",{ fileName : "src/HLAdapter.hx", lineNumber : 215, className : "HLAdapter", methodName : "launch"});
		if(args.args != null) {
			hlArgs = hlArgs.concat(args.args);
		}
		if(args.argsFile != null) {
			var words = js_node_Fs.readFileSync(args.argsFile,{ encoding : "utf8"}).split(" ");
			while(words.length > 0) {
				var w = words.shift();
				if(w == "") {
					continue;
				}
				if(StringTools.startsWith(w,"\"")) {
					var buf = [HxOverrides.substr(w,1,null)];
					while(true) {
						var w1 = words.shift();
						if(w1 == null) {
							break;
						}
						if(StringTools.endsWith(w1,"\"")) {
							w1 = HxOverrides.substr(w1,0,-1);
							buf.push(w1);
							break;
						}
						buf.push(w1);
					}
					w = buf.join(" ");
				}
				hlArgs.push(w);
			}
		}
		this.proc = js_node_ChildProcess.spawn("hl",hlArgs,{ env : { }, cwd : args.cwd});
		this.proc.stdout.setEncoding("utf8");
		var prev = "";
		this.proc.stdout.on("data",function(buf1) {
			prev += buf1.toString().split("\r\n").join("\n");
			while(true) {
				var index = prev.indexOf("\n");
				if(index < 0) {
					break;
				}
				var str = HxOverrides.substr(prev,0,index);
				prev = HxOverrides.substr(prev,index + 1,null);
				_gthis.processLine(str,"stdout");
			}
			if(prev != "") {
				var cur = prev;
				var t = new haxe_Timer(200);
				t.run = function() {
					if(prev == cur) {
						_gthis.sendEvent(new adapter_OutputEvent(prev,"stdout"));
						prev = "";
					}
				};
			}
		});
		this.proc.stderr.setEncoding("utf8");
		this.proc.stderr.on("data",function(buf2) {
			var tmp = buf2.toString();
			_gthis.sendEvent(new adapter_OutputEvent(tmp,"stderr"));
		});
		this.proc.on("close",function(code) {
			var exitedEvent = { type : "event", event : "exited", seq : 0, body : { exitCode : code}};
			_gthis.debug("Exit code " + code,{ fileName : "src/HLAdapter.hx", lineNumber : 272, className : "HLAdapter", methodName : "launch"});
			_gthis.sendEvent(exitedEvent);
			_gthis.sendEvent(new adapter_TerminatedEvent());
			_gthis.stopDebug();
		});
		this.proc.on("error",function(err) {
			_gthis.error(response,"Failed to start hl process (" + err + ")");
		});
		return program;
	}
	,startDebug: function(program,port) {
		this.dbg = new hld_Debugger();
		this.debug("load module",{ fileName : "src/HLAdapter.hx", lineNumber : 289, className : "HLAdapter", methodName : "startDebug"});
		this.dbg.loadModule(js_node_buffer__$Buffer_Helper.bytesOfBuffer(js_node_Fs.readFileSync(program)));
		this.debug("connecting",{ fileName : "src/HLAdapter.hx", lineNumber : 292, className : "HLAdapter", methodName : "startDebug"});
		if(!this.dbg.connect("127.0.0.1",port)) {
			throw new js__$Boot_HaxeError("Failed to connect on debug port");
		}
		var pid = this.dbg.jit.pid;
		if(pid == 0) {
			if(this.proc == null) {
				throw new js__$Boot_HaxeError("Process attach requires HL 1.7+");
			}
			pid = this.proc.pid;
		}
		var api;
		if(HLAdapter.isWindow) {
			api = new hld_NodeDebugApi(pid,this.dbg.get_is64());
		} else {
			api = new hld_NodeDebugApiLinux(pid,this.dbg.get_is64());
		}
		if(!this.dbg.init(api)) {
			throw new js__$Boot_HaxeError("Failed to initialize debugger");
		}
		this.debug("connected",{ fileName : "src/HLAdapter.hx", lineNumber : 310, className : "HLAdapter", methodName : "startDebug"});
		return true;
	}
	,configurationDoneRequest: function(response,args) {
		var _gthis = this;
		this.run();
		this.debug("init done",{ fileName : "src/HLAdapter.hx", lineNumber : 316, className : "HLAdapter", methodName : "configurationDoneRequest"});
		this.timer = new haxe_Timer(16);
		this.timer.run = function() {
			if(_gthis.dbg.stoppedThread != null) {
				return;
			}
			_gthis.run();
		};
	}
	,stopDebug: function() {
		if(this.dbg == null) {
			return;
		}
		this.dbg.end();
		this.dbg = null;
		if(this.timer != null) {
			this.timer.stop();
			this.timer = null;
		}
	}
	,frameStr: function(f,debug) {
		return f.file + ":" + f.line + (debug ? " @" + hld__$Pointer_Pointer_$Impl_$.toString(f.ebp) : "");
	}
	,stackStr: function(f) {
		if(f.context != null) {
			var clName = f.context.obj.name.split(".");
			var field = f.context.field;
			var _g = 0;
			var _g1 = clName.length;
			while(_g < _g1) {
				var i = _g++;
				if(HxOverrides.cca(clName[i],0) == 36) {
					clName[i] = HxOverrides.substr(clName[i],1,null);
				}
			}
			if(field == "__constructor__") {
				field = "new";
			}
			return clName.join(".") + "." + field;
		}
		return "<local function>";
	}
	,run: function() {
		if(this.dbg == null) {
			return true;
		}
		this.dbg.customTimeout = 0;
		var ret = false;
		_hx_loop1: while(true) {
			var msg = this.dbg.run();
			this.handleMessage(msg);
			switch(msg) {
			case -1:
				break _hx_loop1;
			case 0:case 1:case 3:case 256:
				ret = true;
				break _hx_loop1;
			case 2:case 4:
				this.dbg.customTimeout = 0.1;
				break;
			}
		}
		if(this.dbg != null) {
			this.dbg.customTimeout = null;
		}
		return ret;
	}
	,handleMessage: function(msg) {
		switch(msg) {
		case 0:
			this.debug("Exit event",{ fileName : "src/HLAdapter.hx", lineNumber : 404, className : "HLAdapter", methodName : "handleMessage"});
			this.dbg.resume();
			this.stopDebug();
			this.sendEvent(new adapter_TerminatedEvent());
			break;
		case 1:
			var exc = this.dbg.getException();
			var str = null;
			if(exc != null) {
				var _g = exc.v;
				if(_g._hx_index == 6) {
					var str1 = _g.v;
					str = str1;
				} else {
					str = this.dbg["eval"].valueStr(exc);
				}
				this.debug("Exception: " + str,{ fileName : "src/HLAdapter.hx", lineNumber : 388, className : "HLAdapter", methodName : "handleMessage"});
			}
			this.beforeStop();
			var ev = new adapter_StoppedEvent(exc == null ? "breakpoint" : "exception",this.dbg.currentThread,str);
			ev.allThreadsStopped = true;
			this.sendEvent(ev);
			break;
		case 3:
			this.debug("*** ERROR ***",{ fileName : "src/HLAdapter.hx", lineNumber : 395, className : "HLAdapter", methodName : "handleMessage"});
			this.beforeStop();
			var ev1 = new adapter_StoppedEvent("error",this.dbg.stoppedThread);
			ev1.allThreadsStopped = true;
			this.sendEvent(ev1);
			break;
		case 256:
			this.debug("Watch " + hld__$Pointer_Pointer_$Impl_$.toString(this.dbg.watchBreak.ptr),{ fileName : "src/HLAdapter.hx", lineNumber : 409, className : "HLAdapter", methodName : "handleMessage"});
			break;
		default:
		}
	}
	,beforeStop: function() {
		this.varsValues = new haxe_ds_IntMap();
	}
	,getLocalFiles: function(file) {
		file = file.split("\\").join("/");
		var filePath = file.toLowerCase();
		var matches = [];
		var _g = 0;
		var _g1 = this.classPath;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			if(StringTools.startsWith(filePath,c.toLowerCase())) {
				matches.push(HxOverrides.substr(file,c.length,null));
			}
		}
		return matches;
	}
	,setBreakPointsRequest: function(response,args) {
		var files = this.getLocalFiles(args.source.path);
		if(files.length == 0) {
			var _g = [];
			var _g1 = 0;
			var _g2 = args.breakpoints;
			while(_g1 < _g2.length) {
				var a = _g2[_g1];
				++_g1;
				_g.push({ line : a.line, verified : false, message : "Could not resolve file " + args.source.path});
			}
			response.body = { breakpoints : _g};
			this.sendResponse(response);
			return;
		}
		var _g3 = 0;
		while(_g3 < files.length) {
			var f = files[_g3];
			++_g3;
			this.dbg.clearBreakpoints(f);
		}
		var bps = [];
		response.body = { breakpoints : bps};
		var _g11 = 0;
		var _g21 = args.breakpoints;
		while(_g11 < _g21.length) {
			var bp = _g21[_g11];
			++_g11;
			var line = -1;
			var _g12 = 0;
			while(_g12 < files.length) {
				var f1 = files[_g12];
				++_g12;
				line = this.dbg.addBreakpoint(f1,bp.line);
				if(line >= 0) {
					break;
				}
			}
			if(line >= 0) {
				bps.push({ line : line, verified : true, message : null});
			} else {
				bps.push({ line : bp.line, verified : false, message : "No code found here"});
			}
		}
		this.sendResponse(response);
	}
	,threadsRequest: function(response) {
		var threads = [];
		if(this.dbg != null) {
			var _g = 0;
			var _g1 = this.dbg.getThreads();
			while(_g < _g1.length) {
				var t = _g1[_g];
				++_g;
				threads.push({ name : threads.length == 0 ? "Main thread" : "Thread " + t, id : t});
			}
		}
		response.body = { threads : threads};
		this.sendResponse(response);
	}
	,stackTraceRequest: function(response,args) {
		var bt = this.dbg.getBackTrace();
		var start = args.startFrame;
		var count = args.levels + start > bt.length ? bt.length - start : args.levels;
		var _g = [];
		var _g1 = 0;
		var _g2 = count;
		while(_g1 < _g2) {
			var i = _g1++;
			var f = bt[start + i];
			var file = this.getFilePath(f.file);
			_g.push({ id : start + i, name : this.stackStr(f), source : { name : f.file.split("/").pop(), path : file == null ? null : HLAdapter.isWindow ? file.split("/").join("\\") : file, sourceReference : file == null ? this.allocValue(VarValue.VUnkownFile(f.file)) : 0}, line : f.line, column : 1});
		}
		response.body = { stackFrames : _g, totalFrames : bt.length};
		this.sendResponse(response);
	}
	,allocValue: function(v) {
		var id = ++HLAdapter.UID;
		this.varsValues.h[id] = v;
		return id;
	}
	,scopesRequest: function(response,args) {
		this.dbg.currentStackFrame = args.frameId;
		var args1 = this.dbg.getCurrentVars(true);
		var locals = this.dbg.getCurrentVars(false);
		var hasThis = args1.indexOf("this") >= 0 || locals.indexOf("this") >= 0;
		response.body = { scopes : [{ name : "Locals", variablesReference : this.allocValue(VarValue.VScope(this.dbg.currentStackFrame)), expensive : false, namedVariables : args1.length + locals.length}]};
		if(hasThis) {
			try {
				var vthis = this.dbg.getValue("this");
				response.body.scopes.push({ name : "Members", variablesReference : this.allocValue(VarValue.VValue(vthis)), expensive : false, namedVariables : this.dbg["eval"].getFields(vthis).length});
			} catch( e ) {
				haxe_Log.trace((e instanceof js__$Boot_HaxeError) ? e.val : e,{ fileName : "src/HLAdapter.hx", lineNumber : 526, className : "HLAdapter", methodName : "scopesRequest"});
			}
		}
		var cl = this.dbg.getCurrentClass();
		if(cl != null) {
			try {
				var fields = this.dbg.getClassStatics(cl);
				var _g = 0;
				var _g1 = fields.slice();
				while(_g < _g1.length) {
					var f = _g1[_g];
					++_g;
					var v = this.dbg.getValue(cl + "." + f);
					if(v == null || v.t._hx_index == 10) {
						HxOverrides.remove(fields,f);
					}
				}
				if(fields.length > 0) {
					response.body.scopes.push({ name : "Statics", variablesReference : this.allocValue(VarValue.VStatics(cl)), expensive : false, namedVariables : fields.length});
				}
			} catch( e1 ) {
				haxe_Log.trace((e1 instanceof js__$Boot_HaxeError) ? e1.val : e1,{ fileName : "src/HLAdapter.hx", lineNumber : 546, className : "HLAdapter", methodName : "scopesRequest"});
			}
		}
		this.sendResponse(response);
	}
	,makeVar: function(name,value) {
		if(value == null) {
			return { name : name, value : "Unknown variable", variablesReference : 0};
		}
		var tstr = this.dbg["eval"].typeStr(value.t);
		var _g = value.v;
		switch(_g._hx_index) {
		case 5:case 12:
			var fields = this.dbg["eval"].getFields(value);
			if(fields != null && fields.length > 0) {
				return { name : name, type : tstr, value : tstr, variablesReference : this.allocValue(VarValue.VValue(value)), namedVariables : fields.length};
			}
			break;
		case 9:
			var len = _g.length;
			return { name : name, type : tstr, value : this.dbg["eval"].valueStr(value), variablesReference : this.allocValue(VarValue.VValue(value)), indexedVariables : len};
		case 10:
			var len1 = _g.nkeys;
			return { name : name, type : tstr, value : this.dbg["eval"].valueStr(value), variablesReference : this.allocValue(VarValue.VValue(value)), indexedVariables : len1};
		case 13:
			var len2 = _g.length;
			return { name : name, type : tstr, value : tstr + ":" + len2, variablesReference : this.allocValue(VarValue.VValue(value)), indexedVariables : len2 + 15 >> 4};
		default:
		}
		return { name : name, type : tstr, value : this.dbg["eval"].valueStr(value), variablesReference : 0};
	}
	,variablesRequest: function(response,args) {
		var vref = this.varsValues.h[args.variablesReference];
		var vars = [];
		response.body = { variables : vars};
		switch(vref._hx_index) {
		case 0:
			var k = vref.k;
			this.dbg.currentStackFrame = k;
			var vnames = this.dbg.getCurrentVars(true).concat(this.dbg.getCurrentVars(false));
			var _g = 0;
			while(_g < vnames.length) {
				var v = vnames[_g];
				++_g;
				try {
					var value = this.dbg.getValue(v);
					vars.push(this.makeVar(v,value));
				} catch( e ) {
					vars.push({ name : v, value : Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e), variablesReference : 0});
				}
			}
			break;
		case 1:
			var v1 = vref.v;
			var _g1 = v1.v;
			switch(_g1._hx_index) {
			case 5:
				var fields;
				var _g2 = v1.t;
				if(vref._hx_index == 3) {
					var p = vref.o;
					var _g3 = [];
					var _g11 = 0;
					var _g21 = p.fields;
					while(_g11 < _g21.length) {
						var f = _g21[_g11];
						++_g11;
						if(f.name != "") {
							_g3.push(f.name);
						}
					}
					fields = _g3;
				} else if(_g2._hx_index == 11) {
					var o = _g2.proto;
					var p1 = o.tsuper;
					while(p1 != null) if(p1._hx_index == 11) {
						var o1 = p1.proto;
						if(o1.fields.length > 0) {
							vars.unshift({ name : o1.name, type : "", value : "", variablesReference : this.allocValue(VarValue.VObjFields(v1,o1))});
						}
						p1 = o1.tsuper;
					}
					var _g4 = [];
					var _g12 = 0;
					var _g22 = o.fields;
					while(_g12 < _g22.length) {
						var f1 = _g22[_g12];
						++_g12;
						if(f1.name != "") {
							_g4.push(f1.name);
						}
					}
					fields = _g4;
				} else {
					fields = this.dbg["eval"].getFields(v1);
				}
				var _g13 = 0;
				while(_g13 < fields.length) {
					var f2 = fields[_g13];
					++_g13;
					try {
						var value1 = this.dbg["eval"].readField(v1,f2);
						vars.push(this.makeVar(f2,value1));
					} catch( e1 ) {
						vars.push({ name : f2, value : Std.string((e1 instanceof js__$Boot_HaxeError) ? e1.val : e1), variablesReference : 0});
					}
				}
				break;
			case 9:
				var get = _g1.read;
				var len = _g1.length;
				var _g5 = 0;
				var _g14 = len;
				while(_g5 < _g14) {
					var i = _g5++;
					try {
						var value2 = get(i);
						vars.push(this.makeVar("" + i,value2));
					} catch( e2 ) {
						vars.push({ name : "" + i, value : Std.string((e2 instanceof js__$Boot_HaxeError) ? e2.val : e2), variablesReference : 0});
					}
				}
				break;
			case 10:
				var getValue = _g1.readValue;
				var getKey = _g1.readKey;
				var len1 = _g1.nkeys;
				var tkey = _g1.tkey;
				if(len1 > 0) {
					getKey(len1 - 1);
				}
				var _g6 = 0;
				var _g15 = len1;
				while(_g6 < _g15) {
					var i1 = _g6++;
					try {
						var key = getKey(i1);
						var value3 = getValue(i1);
						if(tkey == format_hl_HLType.HDyn) {
							vars.push({ name : "" + i1, value : "", variablesReference : this.allocValue(VarValue.VMapPair(key,value3))});
						} else {
							vars.push(this.makeVar(this.dbg["eval"].valueStr(key),value3));
						}
					} catch( e3 ) {
						vars.push({ name : "" + i1, value : Std.string((e3 instanceof js__$Boot_HaxeError) ? e3.val : e3), variablesReference : 0});
					}
				}
				break;
			case 12:
				var values = _g1.values;
				var _g7 = 0;
				var _g16 = values.length;
				while(_g7 < _g16) {
					var i2 = _g7++;
					try {
						var value4 = values[i2];
						vars.push(this.makeVar("" + i2,value4));
					} catch( e4 ) {
						vars.push({ name : "" + i2, value : Std.string((e4 instanceof js__$Boot_HaxeError) ? e4.val : e4), variablesReference : 0});
					}
				}
				break;
			case 13:
				var read = _g1.read;
				var len2 = _g1.length;
				var count = len2 + 15 >> 4;
				var _g8 = 0;
				var _g17 = count;
				while(_g8 < _g17) {
					var i3 = _g8++;
					var p2 = i3 * 16;
					var size = p2 + 16 > len2 ? len2 - p2 : 16;
					var b = new haxe_io_Bytes(new ArrayBuffer(size));
					var _g9 = 0;
					var _g18 = size;
					while(_g9 < _g18) {
						var k1 = _g9++;
						var v2 = read(p2 + k1);
						b.b[k1] = v2 & 255;
					}
					vars.push({ name : "" + p2, value : "0x" + b.toHex().toUpperCase(), variablesReference : 0});
				}
				break;
			default:
				vars.push({ name : "TODO", value : this.dbg["eval"].typeStr(v1.t), variablesReference : 0});
			}
			break;
		case 2:
			throw new js__$Boot_HaxeError("assert");
		case 3:
			var v3 = vref.v;
			var _g10 = v3.v;
			switch(_g10._hx_index) {
			case 5:
				var fields1;
				var _g19 = v3.t;
				if(vref._hx_index == 3) {
					var p3 = vref.o;
					var _g20 = [];
					var _g110 = 0;
					var _g23 = p3.fields;
					while(_g110 < _g23.length) {
						var f3 = _g23[_g110];
						++_g110;
						if(f3.name != "") {
							_g20.push(f3.name);
						}
					}
					fields1 = _g20;
				} else if(_g19._hx_index == 11) {
					var o2 = _g19.proto;
					var p4 = o2.tsuper;
					while(p4 != null) if(p4._hx_index == 11) {
						var o3 = p4.proto;
						if(o3.fields.length > 0) {
							vars.unshift({ name : o3.name, type : "", value : "", variablesReference : this.allocValue(VarValue.VObjFields(v3,o3))});
						}
						p4 = o3.tsuper;
					}
					var _g24 = [];
					var _g111 = 0;
					var _g25 = o2.fields;
					while(_g111 < _g25.length) {
						var f4 = _g25[_g111];
						++_g111;
						if(f4.name != "") {
							_g24.push(f4.name);
						}
					}
					fields1 = _g24;
				} else {
					fields1 = this.dbg["eval"].getFields(v3);
				}
				var _g112 = 0;
				while(_g112 < fields1.length) {
					var f5 = fields1[_g112];
					++_g112;
					try {
						var value5 = this.dbg["eval"].readField(v3,f5);
						vars.push(this.makeVar(f5,value5));
					} catch( e5 ) {
						vars.push({ name : f5, value : Std.string((e5 instanceof js__$Boot_HaxeError) ? e5.val : e5), variablesReference : 0});
					}
				}
				break;
			case 9:
				var get1 = _g10.read;
				var len3 = _g10.length;
				var _g26 = 0;
				var _g113 = len3;
				while(_g26 < _g113) {
					var i4 = _g26++;
					try {
						var value6 = get1(i4);
						vars.push(this.makeVar("" + i4,value6));
					} catch( e6 ) {
						vars.push({ name : "" + i4, value : Std.string((e6 instanceof js__$Boot_HaxeError) ? e6.val : e6), variablesReference : 0});
					}
				}
				break;
			case 10:
				var getValue1 = _g10.readValue;
				var getKey1 = _g10.readKey;
				var len4 = _g10.nkeys;
				var tkey1 = _g10.tkey;
				if(len4 > 0) {
					getKey1(len4 - 1);
				}
				var _g27 = 0;
				var _g114 = len4;
				while(_g27 < _g114) {
					var i5 = _g27++;
					try {
						var key1 = getKey1(i5);
						var value7 = getValue1(i5);
						if(tkey1 == format_hl_HLType.HDyn) {
							vars.push({ name : "" + i5, value : "", variablesReference : this.allocValue(VarValue.VMapPair(key1,value7))});
						} else {
							vars.push(this.makeVar(this.dbg["eval"].valueStr(key1),value7));
						}
					} catch( e7 ) {
						vars.push({ name : "" + i5, value : Std.string((e7 instanceof js__$Boot_HaxeError) ? e7.val : e7), variablesReference : 0});
					}
				}
				break;
			case 12:
				var values1 = _g10.values;
				var _g28 = 0;
				var _g115 = values1.length;
				while(_g28 < _g115) {
					var i6 = _g28++;
					try {
						var value8 = values1[i6];
						vars.push(this.makeVar("" + i6,value8));
					} catch( e8 ) {
						vars.push({ name : "" + i6, value : Std.string((e8 instanceof js__$Boot_HaxeError) ? e8.val : e8), variablesReference : 0});
					}
				}
				break;
			case 13:
				var read1 = _g10.read;
				var len5 = _g10.length;
				var count1 = len5 + 15 >> 4;
				var _g29 = 0;
				var _g116 = count1;
				while(_g29 < _g116) {
					var i7 = _g29++;
					var p5 = i7 * 16;
					var size1 = p5 + 16 > len5 ? len5 - p5 : 16;
					var b1 = new haxe_io_Bytes(new ArrayBuffer(size1));
					var _g30 = 0;
					var _g117 = size1;
					while(_g30 < _g117) {
						var k2 = _g30++;
						var v4 = read1(p5 + k2);
						b1.b[k2] = v4 & 255;
					}
					vars.push({ name : "" + p5, value : "0x" + b1.toHex().toUpperCase(), variablesReference : 0});
				}
				break;
			default:
				vars.push({ name : "TODO", value : this.dbg["eval"].typeStr(v3.t), variablesReference : 0});
			}
			break;
		case 4:
			var value9 = vref.value;
			var key2 = vref.key;
			vars.push(this.makeVar("key",key2));
			vars.push(this.makeVar("value",value9));
			break;
		case 5:
			var cl = vref.cl;
			var _g31 = 0;
			var _g118 = this.dbg.getClassStatics(cl);
			while(_g31 < _g118.length) {
				var f6 = _g118[_g31];
				++_g31;
				var v5 = this.dbg.getValue(cl + "." + f6);
				if(v5.t._hx_index == 10) {
					continue;
				}
				vars.push(this.makeVar(f6,v5));
			}
			break;
		}
		this.sendResponse(response);
	}
	,pauseRequest: function(response,args) {
		this.debug("Pause Request",{ fileName : "src/HLAdapter.hx", lineNumber : 706, className : "HLAdapter", methodName : "pauseRequest"});
		this.handleMessage(this.dbg.pause());
		this.sendResponse(response);
	}
	,disconnectRequest: function(response,args) {
		if(this.proc != null) {
			this.proc.kill("SIGINT");
		}
		this.sendResponse(response);
		this.stopDebug();
	}
	,nextRequest: function(response,args) {
		this.handleMessage(this.dbg.step(hld_StepMode.Next));
		this.sendResponse(response);
	}
	,stepInRequest: function(response,args) {
		this.handleMessage(this.dbg.step(hld_StepMode.Into));
		this.sendResponse(response);
	}
	,stepOutRequest: function(response,args) {
		this.handleMessage(this.dbg.step(hld_StepMode.Out));
		this.sendResponse(response);
	}
	,continueRequest: function(response,args) {
		this.dbg.resume();
		this.sendResponse(response);
	}
	,sourceRequest: function(response,args) {
		var _g = this.varsValues.h[args.sourceReference];
		if(_g == null) {
			throw new js__$Boot_HaxeError("assert");
		} else if(_g._hx_index == 2) {
			var file = _g.file;
			response.body = { content : "Unknown file " + file};
			this.sendResponse(response);
		} else {
			throw new js__$Boot_HaxeError("assert");
		}
	}
	,evaluateRequest: function(response,args) {
		this.dbg.currentStackFrame = args.frameId;
		try {
			if(new EReg("^\\?[A-Za-z0-9_]+$","").match(args.expression)) {
				args.expression = HxOverrides.substr(args.expression,1,null);
			}
			var value = this.dbg.getValue(args.expression);
			var v = this.makeVar("",value);
			response.body = { result : v.value, type : v.type, variablesReference : v.variablesReference, namedVariables : v.namedVariables, indexedVariables : v.indexedVariables};
		} catch( e ) {
			response.body = { result : Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e), variablesReference : 0};
		}
		this.sendResponse(response);
	}
	,setVariableRequest: function(response,args) {
		try {
			var v = this.dbg.setValue(args.name,args.value);
			if(v == null) {
				throw new js__$Boot_HaxeError("Can't set " + args.name + " to " + args.value);
			}
			response.body = this.makeVar(args.name,v);
		} catch( e ) {
			this.errorMessage("" + Std.string((e instanceof js__$Boot_HaxeError) ? e.val : e));
		}
		this.sendResponse(response);
	}
	,setFunctionBreakPointsRequest: function(response,args) {
		this.debug("Unhandled request",{ fileName : "src/HLAdapter.hx", lineNumber : 785, className : "HLAdapter", methodName : "setFunctionBreakPointsRequest"});
		this.sendResponse(response);
	}
	,stepBackRequest: function(response,args) {
		this.debug("Unhandled request",{ fileName : "src/HLAdapter.hx", lineNumber : 789, className : "HLAdapter", methodName : "stepBackRequest"});
	}
	,restartFrameRequest: function(response,args) {
		this.debug("Unhandled request",{ fileName : "src/HLAdapter.hx", lineNumber : 790, className : "HLAdapter", methodName : "restartFrameRequest"});
	}
	,gotoRequest: function(response,args) {
		this.debug("Unhandled request",{ fileName : "src/HLAdapter.hx", lineNumber : 791, className : "HLAdapter", methodName : "gotoRequest"});
	}
	,stepInTargetsRequest: function(response,args) {
		this.debug("Unhandled request",{ fileName : "src/HLAdapter.hx", lineNumber : 792, className : "HLAdapter", methodName : "stepInTargetsRequest"});
	}
	,gotoTargetsRequest: function(responses,args) {
		this.debug("Unhandled request",{ fileName : "src/HLAdapter.hx", lineNumber : 793, className : "HLAdapter", methodName : "gotoTargetsRequest"});
	}
	,completionsRequest: function(response,args) {
		this.debug("Unhandled request",{ fileName : "src/HLAdapter.hx", lineNumber : 794, className : "HLAdapter", methodName : "completionsRequest"});
	}
	,sendToOutput: function(output,category) {
		if(category == null) {
			category = "console";
		}
		this.sendEvent(new adapter_OutputEvent(output + "\n",category));
	}
	,errorMessage: function(msg) {
		this.sendEvent(new adapter_OutputEvent(msg + "\n","stderr"));
	}
	,__class__: HLAdapter
});
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.strDate = function(s) {
	switch(s.length) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d["setTime"](0);
		d["setUTCHours"](k[0]);
		d["setUTCMinutes"](k[1]);
		d["setUTCSeconds"](k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var IntIterator = function(min,max) {
	this.min = min;
	this.max = max;
};
IntIterator.__name__ = true;
IntIterator.prototype = {
	hasNext: function() {
		return this.min < this.max;
	}
	,next: function() {
		return this.min++;
	}
	,__class__: IntIterator
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
		return null;
	}
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.compare = function(a,b) {
	if(a == b) {
		return 0;
	} else if(a > b) {
		return 1;
	} else {
		return -1;
	}
};
Reflect.makeVarArgs = function(f) {
	return function() {
		var a = Array.prototype.slice.call(arguments);
		return f(a);
	};
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = true;
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.startsWith = function(s,start) {
	if(s.length >= start.length) {
		return HxOverrides.substr(s,0,start.length) == start;
	} else {
		return false;
	}
};
StringTools.endsWith = function(s,end) {
	var elen = end.length;
	var slen = s.length;
	if(slen >= elen) {
		return HxOverrides.substr(s,slen - elen,elen) == end;
	} else {
		return false;
	}
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	if(!(c > 8 && c < 14)) {
		return c == 32;
	} else {
		return true;
	}
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,r,l - r);
	} else {
		return s;
	}
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) ++r;
	if(r > 0) {
		return HxOverrides.substr(s,0,l - r);
	} else {
		return s;
	}
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var haxe_io_Output = function() { };
haxe_io_Output.__name__ = true;
var _$Sys_FileOutput = function(fd) {
	this.fd = fd;
};
_$Sys_FileOutput.__name__ = true;
_$Sys_FileOutput.__super__ = haxe_io_Output;
_$Sys_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		js_node_Fs.writeSync(this.fd,String.fromCodePoint(c));
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		return js_node_Fs.writeSync(this.fd,new js_node_buffer_Buffer(data.buffer,data.byteOffset,s.length),pos,len);
	}
	,writeString: function(s,encoding) {
		js_node_Fs.writeSync(this.fd,s);
	}
	,flush: function() {
		js_node_Fs.fsyncSync(this.fd);
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,__class__: _$Sys_FileOutput
});
var haxe_io_Input = function() { };
haxe_io_Input.__name__ = true;
haxe_io_Input.prototype = {
	readByte: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,readBytes: function(s,pos,len) {
		var k = len;
		var b = s.b;
		if(pos < 0 || len < 0 || pos + len > s.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		try {
			while(k > 0) {
				b[pos] = this.readByte();
				++pos;
				--k;
			}
		} catch( eof ) {
			var eof1 = (eof instanceof js__$Boot_HaxeError) ? eof.val : eof;
			if((eof1 instanceof haxe_io_Eof)) {
				var eof2 = eof1;
			} else {
				throw eof;
			}
		}
		return len - k;
	}
	,readFullBytes: function(s,pos,len) {
		while(len > 0) {
			var k = this.readBytes(s,pos,len);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			pos += k;
			len -= k;
		}
	}
	,read: function(nbytes) {
		var s = new haxe_io_Bytes(new ArrayBuffer(nbytes));
		var p = 0;
		while(nbytes > 0) {
			var k = this.readBytes(s,p,nbytes);
			if(k == 0) {
				throw new js__$Boot_HaxeError(haxe_io_Error.Blocked);
			}
			p += k;
			nbytes -= k;
		}
		return s;
	}
	,readDouble: function() {
		var i1 = this.readInt32();
		var i2 = this.readInt32();
		if(this.bigEndian) {
			return haxe_io_FPHelper.i64ToDouble(i2,i1);
		} else {
			return haxe_io_FPHelper.i64ToDouble(i1,i2);
		}
	}
	,readInt32: function() {
		var ch1 = this.readByte();
		var ch2 = this.readByte();
		var ch3 = this.readByte();
		var ch4 = this.readByte();
		if(this.bigEndian) {
			return ch4 | ch3 << 8 | ch2 << 16 | ch1 << 24;
		} else {
			return ch1 | ch2 << 8 | ch3 << 16 | ch4 << 24;
		}
	}
	,readString: function(len,encoding) {
		var b = new haxe_io_Bytes(new ArrayBuffer(len));
		this.readFullBytes(b,0,len);
		return b.getString(0,len,encoding);
	}
	,__class__: haxe_io_Input
};
var _$Sys_FileInput = function(fd) {
	this.fd = fd;
};
_$Sys_FileInput.__name__ = true;
_$Sys_FileInput.__super__ = haxe_io_Input;
_$Sys_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		var buf = new js_node_buffer_Buffer(1);
		try {
			js_node_Fs.readSync(this.fd,buf,0,1,null);
		} catch( e ) {
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			if(e1.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e1));
			}
		}
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = new js_node_buffer_Buffer(data.buffer,data.byteOffset,s.length);
		try {
			return js_node_Fs.readSync(this.fd,buf,pos,len,null);
		} catch( e ) {
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			if(e1.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e1));
			}
		}
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,__class__: _$Sys_FileInput
});
var Type = function() { };
Type.__name__ = true;
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) {
		throw new js__$Boot_HaxeError("No such constructor " + constr);
	}
	if(Reflect.isFunction(f)) {
		if(params == null) {
			throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		}
		return f.apply(e,params);
	}
	if(params != null && params.length != 0) {
		throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	}
	return f;
};
Type.createEnumIndex = function(e,index,params) {
	var c = e.__constructs__[index];
	if(c == null) {
		throw new js__$Boot_HaxeError(index + " is not a valid enum constructor index");
	}
	return Type.createEnum(e,c,params);
};
Type.enumEq = function(a,b) {
	if(a == b) {
		return true;
	}
	try {
		var e = a.__enum__;
		if(e == null || e != b.__enum__) {
			return false;
		}
		if(a._hx_index != b._hx_index) {
			return false;
		}
		var enm = $hxEnums[e];
		var ctorName = enm.__constructs__[a._hx_index];
		var params = enm[ctorName].__params__;
		var _g = 0;
		while(_g < params.length) {
			var f = params[_g];
			++_g;
			if(!Type.enumEq(a[f],b[f])) {
				return false;
			}
		}
	} catch( e1 ) {
		var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
		return false;
	}
	return true;
};
var adapter_StoppedEvent = require("vscode-debugadapter").StoppedEvent;
var adapter_InitializedEvent = require("vscode-debugadapter").InitializedEvent;
var adapter_TerminatedEvent = require("vscode-debugadapter").TerminatedEvent;
var adapter_OutputEvent = require("vscode-debugadapter").OutputEvent;
var format_hl_CodeFlag = $hxEnums["format.hl.CodeFlag"] = { __ename__ : true, __constructs__ : ["HasDebug"]
	,HasDebug: {_hx_index:0,__enum__:"format.hl.CodeFlag",toString:$estr}
};
var format_hl_HLType = $hxEnums["format.hl.HLType"] = { __ename__ : true, __constructs__ : ["HVoid","HUi8","HUi16","HI32","HI64","HF32","HF64","HBool","HBytes","HDyn","HFun","HObj","HArray","HType","HRef","HVirtual","HDynObj","HAbstract","HEnum","HNull","HAt"]
	,HVoid: {_hx_index:0,__enum__:"format.hl.HLType",toString:$estr}
	,HUi8: {_hx_index:1,__enum__:"format.hl.HLType",toString:$estr}
	,HUi16: {_hx_index:2,__enum__:"format.hl.HLType",toString:$estr}
	,HI32: {_hx_index:3,__enum__:"format.hl.HLType",toString:$estr}
	,HI64: {_hx_index:4,__enum__:"format.hl.HLType",toString:$estr}
	,HF32: {_hx_index:5,__enum__:"format.hl.HLType",toString:$estr}
	,HF64: {_hx_index:6,__enum__:"format.hl.HLType",toString:$estr}
	,HBool: {_hx_index:7,__enum__:"format.hl.HLType",toString:$estr}
	,HBytes: {_hx_index:8,__enum__:"format.hl.HLType",toString:$estr}
	,HDyn: {_hx_index:9,__enum__:"format.hl.HLType",toString:$estr}
	,HFun: ($_=function(fun) { return {_hx_index:10,fun:fun,__enum__:"format.hl.HLType",toString:$estr}; },$_.__params__ = ["fun"],$_)
	,HObj: ($_=function(proto) { return {_hx_index:11,proto:proto,__enum__:"format.hl.HLType",toString:$estr}; },$_.__params__ = ["proto"],$_)
	,HArray: {_hx_index:12,__enum__:"format.hl.HLType",toString:$estr}
	,HType: {_hx_index:13,__enum__:"format.hl.HLType",toString:$estr}
	,HRef: ($_=function(t) { return {_hx_index:14,t:t,__enum__:"format.hl.HLType",toString:$estr}; },$_.__params__ = ["t"],$_)
	,HVirtual: ($_=function(fields) { return {_hx_index:15,fields:fields,__enum__:"format.hl.HLType",toString:$estr}; },$_.__params__ = ["fields"],$_)
	,HDynObj: {_hx_index:16,__enum__:"format.hl.HLType",toString:$estr}
	,HAbstract: ($_=function(name) { return {_hx_index:17,name:name,__enum__:"format.hl.HLType",toString:$estr}; },$_.__params__ = ["name"],$_)
	,HEnum: ($_=function(proto) { return {_hx_index:18,proto:proto,__enum__:"format.hl.HLType",toString:$estr}; },$_.__params__ = ["proto"],$_)
	,HNull: ($_=function(t) { return {_hx_index:19,t:t,__enum__:"format.hl.HLType",toString:$estr}; },$_.__params__ = ["t"],$_)
	,HAt: ($_=function(i) { return {_hx_index:20,i:i,__enum__:"format.hl.HLType",toString:$estr}; },$_.__params__ = ["i"],$_)
};
var format_hl_AnyFunction = $hxEnums["format.hl.AnyFunction"] = { __ename__ : true, __constructs__ : ["FHL","FNative"]
	,FHL: ($_=function(f) { return {_hx_index:0,f:f,__enum__:"format.hl.AnyFunction",toString:$estr}; },$_.__params__ = ["f"],$_)
	,FNative: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"format.hl.AnyFunction",toString:$estr}; },$_.__params__ = ["f"],$_)
};
var format_hl_Opcode = $hxEnums["format.hl.Opcode"] = { __ename__ : true, __constructs__ : ["OMov","OInt","OFloat","OBool","OBytes","OString","ONull","OAdd","OSub","OMul","OSDiv","OUDiv","OSMod","OUMod","OShl","OSShr","OUShr","OAnd","OOr","OXor","ONeg","ONot","OIncr","ODecr","OCall0","OCall1","OCall2","OCall3","OCall4","OCallN","OCallMethod","OCallThis","OCallClosure","OStaticClosure","OInstanceClosure","OVirtualClosure","OGetGlobal","OSetGlobal","OField","OSetField","OGetThis","OSetThis","ODynGet","ODynSet","OJTrue","OJFalse","OJNull","OJNotNull","OJSLt","OJSGte","OJSGt","OJSLte","OJULt","OJUGte","OJNotLt","OJNotGte","OJEq","OJNotEq","OJAlways","OToDyn","OToSFloat","OToUFloat","OToInt","OSafeCast","OUnsafeCast","OToVirtual","OLabel","ORet","OThrow","ORethrow","OSwitch","ONullCheck","OTrap","OEndTrap","OGetUI8","OGetUI16","OGetMem","OGetArray","OSetUI8","OSetUI16","OSetMem","OSetArray","ONew","OArraySize","OType","OGetType","OGetTID","ORef","OUnref","OSetref","OMakeEnum","OEnumAlloc","OEnumIndex","OEnumField","OSetEnumField","OAssert","ORefData","ORefOffset","ONop"]
	,OMov: ($_=function(dst,a) { return {_hx_index:0,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OInt: ($_=function(dst,i) { return {_hx_index:1,dst:dst,i:i,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i"],$_)
	,OFloat: ($_=function(dst,i) { return {_hx_index:2,dst:dst,i:i,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i"],$_)
	,OBool: ($_=function(dst,b) { return {_hx_index:3,dst:dst,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","b"],$_)
	,OBytes: ($_=function(dst,i) { return {_hx_index:4,dst:dst,i:i,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i"],$_)
	,OString: ($_=function(dst,i) { return {_hx_index:5,dst:dst,i:i,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i"],$_)
	,ONull: ($_=function(dst) { return {_hx_index:6,dst:dst,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst"],$_)
	,OAdd: ($_=function(dst,a,b) { return {_hx_index:7,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OSub: ($_=function(dst,a,b) { return {_hx_index:8,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OMul: ($_=function(dst,a,b) { return {_hx_index:9,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OSDiv: ($_=function(dst,a,b) { return {_hx_index:10,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OUDiv: ($_=function(dst,a,b) { return {_hx_index:11,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OSMod: ($_=function(dst,a,b) { return {_hx_index:12,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OUMod: ($_=function(dst,a,b) { return {_hx_index:13,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OShl: ($_=function(dst,a,b) { return {_hx_index:14,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OSShr: ($_=function(dst,a,b) { return {_hx_index:15,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OUShr: ($_=function(dst,a,b) { return {_hx_index:16,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OAnd: ($_=function(dst,a,b) { return {_hx_index:17,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OOr: ($_=function(dst,a,b) { return {_hx_index:18,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OXor: ($_=function(dst,a,b) { return {_hx_index:19,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,ONeg: ($_=function(dst,a) { return {_hx_index:20,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,ONot: ($_=function(dst,a) { return {_hx_index:21,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OIncr: ($_=function(dst) { return {_hx_index:22,dst:dst,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst"],$_)
	,ODecr: ($_=function(dst) { return {_hx_index:23,dst:dst,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst"],$_)
	,OCall0: ($_=function(dst,i) { return {_hx_index:24,dst:dst,i:i,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i"],$_)
	,OCall1: ($_=function(dst,i,a) { return {_hx_index:25,dst:dst,i:i,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i","a"],$_)
	,OCall2: ($_=function(dst,i,a,b) { return {_hx_index:26,dst:dst,i:i,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i","a","b"],$_)
	,OCall3: ($_=function(dst,i,a,b,c) { return {_hx_index:27,dst:dst,i:i,a:a,b:b,c:c,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i","a","b","c"],$_)
	,OCall4: ($_=function(dst,i,a,b,c,d) { return {_hx_index:28,dst:dst,i:i,a:a,b:b,c:c,d:d,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i","a","b","c","d"],$_)
	,OCallN: ($_=function(dst,i,args) { return {_hx_index:29,dst:dst,i:i,args:args,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i","args"],$_)
	,OCallMethod: ($_=function(dst,i,args) { return {_hx_index:30,dst:dst,i:i,args:args,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i","args"],$_)
	,OCallThis: ($_=function(dst,i,args) { return {_hx_index:31,dst:dst,i:i,args:args,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i","args"],$_)
	,OCallClosure: ($_=function(dst,obj,args) { return {_hx_index:32,dst:dst,obj:obj,args:args,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","obj","args"],$_)
	,OStaticClosure: ($_=function(dst,i) { return {_hx_index:33,dst:dst,i:i,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i"],$_)
	,OInstanceClosure: ($_=function(dst,i,a) { return {_hx_index:34,dst:dst,i:i,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i","a"],$_)
	,OVirtualClosure: ($_=function(dst,a,i) { return {_hx_index:35,dst:dst,a:a,i:i,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","i"],$_)
	,OGetGlobal: ($_=function(dst,i) { return {_hx_index:36,dst:dst,i:i,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i"],$_)
	,OSetGlobal: ($_=function(i,a) { return {_hx_index:37,i:i,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["i","a"],$_)
	,OField: ($_=function(dst,a,i) { return {_hx_index:38,dst:dst,a:a,i:i,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","i"],$_)
	,OSetField: ($_=function(dst,i,a) { return {_hx_index:39,dst:dst,i:i,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i","a"],$_)
	,OGetThis: ($_=function(dst,i) { return {_hx_index:40,dst:dst,i:i,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i"],$_)
	,OSetThis: ($_=function(i,a) { return {_hx_index:41,i:i,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["i","a"],$_)
	,ODynGet: ($_=function(dst,a,i) { return {_hx_index:42,dst:dst,a:a,i:i,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","i"],$_)
	,ODynSet: ($_=function(dst,i,a) { return {_hx_index:43,dst:dst,i:i,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i","a"],$_)
	,OJTrue: ($_=function(dst,offset) { return {_hx_index:44,dst:dst,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","offset"],$_)
	,OJFalse: ($_=function(dst,offset) { return {_hx_index:45,dst:dst,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","offset"],$_)
	,OJNull: ($_=function(dst,offset) { return {_hx_index:46,dst:dst,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","offset"],$_)
	,OJNotNull: ($_=function(dst,offset) { return {_hx_index:47,dst:dst,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","offset"],$_)
	,OJSLt: ($_=function(dst,a,offset) { return {_hx_index:48,dst:dst,a:a,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","offset"],$_)
	,OJSGte: ($_=function(dst,a,offset) { return {_hx_index:49,dst:dst,a:a,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","offset"],$_)
	,OJSGt: ($_=function(dst,a,offset) { return {_hx_index:50,dst:dst,a:a,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","offset"],$_)
	,OJSLte: ($_=function(dst,a,offset) { return {_hx_index:51,dst:dst,a:a,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","offset"],$_)
	,OJULt: ($_=function(dst,a,offset) { return {_hx_index:52,dst:dst,a:a,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","offset"],$_)
	,OJUGte: ($_=function(dst,a,offset) { return {_hx_index:53,dst:dst,a:a,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","offset"],$_)
	,OJNotLt: ($_=function(dst,a,offset) { return {_hx_index:54,dst:dst,a:a,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","offset"],$_)
	,OJNotGte: ($_=function(dst,a,offset) { return {_hx_index:55,dst:dst,a:a,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","offset"],$_)
	,OJEq: ($_=function(dst,a,offset) { return {_hx_index:56,dst:dst,a:a,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","offset"],$_)
	,OJNotEq: ($_=function(dst,a,offset) { return {_hx_index:57,dst:dst,a:a,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","offset"],$_)
	,OJAlways: ($_=function(offset) { return {_hx_index:58,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["offset"],$_)
	,OToDyn: ($_=function(dst,a) { return {_hx_index:59,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OToSFloat: ($_=function(dst,a) { return {_hx_index:60,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OToUFloat: ($_=function(dst,a) { return {_hx_index:61,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OToInt: ($_=function(dst,a) { return {_hx_index:62,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OSafeCast: ($_=function(dst,a) { return {_hx_index:63,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OUnsafeCast: ($_=function(dst,a) { return {_hx_index:64,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OToVirtual: ($_=function(dst,a) { return {_hx_index:65,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OLabel: {_hx_index:66,__enum__:"format.hl.Opcode",toString:$estr}
	,ORet: ($_=function(dst) { return {_hx_index:67,dst:dst,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst"],$_)
	,OThrow: ($_=function(dst) { return {_hx_index:68,dst:dst,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst"],$_)
	,ORethrow: ($_=function(dst) { return {_hx_index:69,dst:dst,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst"],$_)
	,OSwitch: ($_=function(dst,cases,end) { return {_hx_index:70,dst:dst,cases:cases,end:end,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","cases","end"],$_)
	,ONullCheck: ($_=function(dst) { return {_hx_index:71,dst:dst,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst"],$_)
	,OTrap: ($_=function(dst,end) { return {_hx_index:72,dst:dst,end:end,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","end"],$_)
	,OEndTrap: ($_=function(last) { return {_hx_index:73,last:last,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["last"],$_)
	,OGetUI8: ($_=function(dst,a,b) { return {_hx_index:74,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OGetUI16: ($_=function(dst,a,b) { return {_hx_index:75,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OGetMem: ($_=function(dst,a,b) { return {_hx_index:76,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OGetArray: ($_=function(dst,a,b) { return {_hx_index:77,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OSetUI8: ($_=function(dst,a,b) { return {_hx_index:78,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OSetUI16: ($_=function(dst,a,b) { return {_hx_index:79,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OSetMem: ($_=function(dst,a,b) { return {_hx_index:80,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,OSetArray: ($_=function(dst,a,b) { return {_hx_index:81,dst:dst,a:a,b:b,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","b"],$_)
	,ONew: ($_=function(dst) { return {_hx_index:82,dst:dst,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst"],$_)
	,OArraySize: ($_=function(dst,a) { return {_hx_index:83,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OType: ($_=function(dst,t) { return {_hx_index:84,dst:dst,t:t,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","t"],$_)
	,OGetType: ($_=function(dst,a) { return {_hx_index:85,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OGetTID: ($_=function(dst,a) { return {_hx_index:86,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,ORef: ($_=function(dst,a) { return {_hx_index:87,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OUnref: ($_=function(dst,a) { return {_hx_index:88,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OSetref: ($_=function(dst,a) { return {_hx_index:89,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OMakeEnum: ($_=function(dst,i,a) { return {_hx_index:90,dst:dst,i:i,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i","a"],$_)
	,OEnumAlloc: ($_=function(dst,i) { return {_hx_index:91,dst:dst,i:i,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","i"],$_)
	,OEnumIndex: ($_=function(dst,a) { return {_hx_index:92,dst:dst,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a"],$_)
	,OEnumField: ($_=function(dst,a,i,param) { return {_hx_index:93,dst:dst,a:a,i:i,param:param,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","a","i","param"],$_)
	,OSetEnumField: ($_=function(dst,param,a) { return {_hx_index:94,dst:dst,param:param,a:a,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","param","a"],$_)
	,OAssert: {_hx_index:95,__enum__:"format.hl.Opcode",toString:$estr}
	,ORefData: ($_=function(dst,src) { return {_hx_index:96,dst:dst,src:src,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","src"],$_)
	,ORefOffset: ($_=function(dst,src,offset) { return {_hx_index:97,dst:dst,src:src,offset:offset,__enum__:"format.hl.Opcode",toString:$estr}; },$_.__params__ = ["dst","src","offset"],$_)
	,ONop: {_hx_index:98,__enum__:"format.hl.Opcode",toString:$estr}
};
var format_hl_Reader = function(readCode) {
	if(readCode == null) {
		readCode = true;
	}
	this.readCode = readCode;
	this.args1 = [0];
	this.args2 = [0,0];
	this.args3 = [0,0,0];
	this.args4 = [0,0,0,0];
};
format_hl_Reader.__name__ = true;
format_hl_Reader.prototype = {
	_read: function() {
		return this.i.readByte();
	}
	,index: function() {
		var b = this.i.readByte();
		if((b & 128) == 0) {
			return b & 127;
		}
		if((b & 64) == 0) {
			var v = this.i.readByte() | (b & 31) << 8;
			if((b & 32) == 0) {
				return v;
			} else {
				return -v;
			}
		}
		var c = this.i.readByte();
		var d = this.i.readByte();
		var e = this.i.readByte();
		var v1 = (b & 31) << 24 | c << 16 | d << 8 | e;
		if((b & 32) == 0) {
			return v1;
		} else {
			return -v1;
		}
	}
	,uindex: function() {
		var v = this.index();
		if(v < 0) {
			throw new js__$Boot_HaxeError("Expected uindex but got " + v);
		}
		return v;
	}
	,readStrings: function(n) {
		var size = this.i.readInt32();
		var data = this.i.read(size);
		var out = [];
		var pos = 0;
		var _g = 0;
		var _g1 = n;
		while(_g < _g1) {
			var _ = _g++;
			var sz = this.uindex();
			var str = data.getString(pos,sz);
			pos += sz + 1;
			out.push(str);
		}
		return out;
	}
	,getString: function() {
		var i = this.index();
		var s = this.strings[i];
		if(s == null) {
			throw new js__$Boot_HaxeError("No string @" + i);
		}
		return s;
	}
	,getType: function() {
		var i = this.index();
		var t = this.types[i];
		if(t == null) {
			throw new js__$Boot_HaxeError("No type @" + i);
		}
		return t;
	}
	,readType: function() {
		var _g = this.i.readByte();
		switch(_g) {
		case 0:
			return format_hl_HLType.HVoid;
		case 1:
			return format_hl_HLType.HUi8;
		case 2:
			return format_hl_HLType.HUi16;
		case 3:
			return format_hl_HLType.HI32;
		case 4:
			return format_hl_HLType.HI64;
		case 5:
			return format_hl_HLType.HF32;
		case 6:
			return format_hl_HLType.HF64;
		case 7:
			return format_hl_HLType.HBool;
		case 8:
			return format_hl_HLType.HBytes;
		case 9:
			return format_hl_HLType.HDyn;
		case 10:
			var _g1 = [];
			var _g11 = 0;
			var _g2 = this.i.readByte();
			while(_g11 < _g2) {
				var i = _g11++;
				_g1.push(format_hl_HLType.HAt(this.uindex()));
			}
			return format_hl_HLType.HFun({ args : _g1, ret : format_hl_HLType.HAt(this.uindex())});
		case 11:
			var p = { name : this.getString(), tsuper : null, fields : null, proto : null, bindings : null, globalValue : null};
			var sup = this.index();
			if(sup >= 0) {
				p.tsuper = this.types[sup];
				if(p.tsuper == null) {
					throw new js__$Boot_HaxeError("assert");
				}
			}
			p.globalValue = this.uindex() - 1;
			if(p.globalValue < 0) {
				p.globalValue = null;
			}
			var nfields = this.uindex();
			var nproto = this.uindex();
			var nbindings = this.uindex();
			var _g3 = [];
			var _g12 = 0;
			var _g21 = nfields;
			while(_g12 < _g21) {
				var i1 = _g12++;
				_g3.push({ name : this.getString(), t : format_hl_HLType.HAt(this.uindex())});
			}
			p.fields = _g3;
			var _g31 = [];
			var _g4 = 0;
			var _g5 = nproto;
			while(_g4 < _g5) {
				var i2 = _g4++;
				_g31.push({ name : this.getString(), findex : this.uindex(), pindex : this.index()});
			}
			p.proto = _g31;
			var _g6 = [];
			var _g7 = 0;
			var _g8 = nbindings;
			while(_g7 < _g8) {
				var i3 = _g7++;
				_g6.push({ fid : this.uindex(), mid : this.uindex()});
			}
			p.bindings = _g6;
			return format_hl_HLType.HObj(p);
		case 12:
			return format_hl_HLType.HArray;
		case 13:
			return format_hl_HLType.HType;
		case 14:
			return format_hl_HLType.HRef(this.getType());
		case 15:
			var _g9 = [];
			var _g13 = 0;
			var _g22 = this.uindex();
			while(_g13 < _g22) {
				var i4 = _g13++;
				_g9.push({ name : this.getString(), t : format_hl_HLType.HAt(this.uindex())});
			}
			return format_hl_HLType.HVirtual(_g9);
		case 16:
			return format_hl_HLType.HDynObj;
		case 17:
			return format_hl_HLType.HAbstract(this.getString());
		case 18:
			var name = this.getString();
			var global1 = this.uindex() - 1;
			var tmp = global1 < 0 ? null : global1;
			var _g10 = [];
			var _g14 = 0;
			var _g23 = this.uindex();
			while(_g14 < _g23) {
				var i5 = _g14++;
				var tmp1 = this.getString();
				var _g15 = [];
				var _g24 = 0;
				var _g32 = this.uindex();
				while(_g24 < _g32) {
					var i6 = _g24++;
					_g15.push(format_hl_HLType.HAt(this.uindex()));
				}
				_g10.push({ name : tmp1, params : _g15});
			}
			return format_hl_HLType.HEnum({ name : name, globalValue : tmp, constructs : _g10});
		case 19:
			return format_hl_HLType.HNull(this.getType());
		default:
			var x = _g;
			throw new js__$Boot_HaxeError("Unsupported type value " + x);
		}
	}
	,fixType: function(t) {
		if(t._hx_index == 20) {
			var i = t.i;
			return this.types[i];
		} else {
			return t;
		}
	}
	,readFunction: function() {
		var t = this.getType();
		var idx = this.uindex();
		var nregs = this.uindex();
		var nops = this.uindex();
		var _g = [];
		var _g1 = 0;
		var _g2 = nregs;
		while(_g1 < _g2) {
			var i = _g1++;
			_g.push(this.getType());
		}
		var tmp = _g;
		var tmp1;
		if(this.readCode) {
			var _g3 = [];
			var _g4 = 0;
			var _g5 = nops;
			while(_g4 < _g5) {
				var i1 = _g4++;
				_g3.push(this.readOp());
			}
			tmp1 = _g3;
		} else {
			tmp1 = this.skipOps(nops);
		}
		var tmp2 = this.readDebug(nops);
		var tmp3;
		if((this.flags & 1 << format_hl_CodeFlag.HasDebug._hx_index) != 0 && this.version >= 3) {
			var _g31 = [];
			var _g41 = 0;
			var _g51 = this.uindex();
			while(_g41 < _g51) {
				var i2 = _g41++;
				_g31.push({ varName : this.uindex(), position : this.index() - 1});
			}
			tmp3 = _g31;
		} else {
			tmp3 = [];
		}
		return { t : t, findex : idx, regs : tmp, ops : tmp1, debug : tmp2, assigns : tmp3};
	}
	,skipOps: function(nops) {
		var _g = 0;
		var _g1 = nops;
		while(_g < _g1) {
			var i = _g++;
			var op = this.i.readByte();
			var args = format_hl_Reader.OP_ARGS[op];
			if(args < 0) {
				switch(op) {
				case 70:
					this.uindex();
					var _g2 = 0;
					var _g11 = this.uindex();
					while(_g2 < _g11) {
						var i1 = _g2++;
						this.uindex();
					}
					this.uindex();
					break;
				case 29:case 30:case 31:case 32:case 90:
					this.index();
					this.index();
					var _g3 = 0;
					var _g12 = this.uindex();
					while(_g3 < _g12) {
						var i2 = _g3++;
						this.index();
					}
					break;
				default:
					throw new js__$Boot_HaxeError("Don't know how to handle opcode " + op + "(" + format_hl_Opcode.__constructs__.slice()[op] + ")");
				}
			} else {
				var _g4 = 0;
				var _g13 = args;
				while(_g4 < _g13) {
					var i3 = _g4++;
					this.index();
				}
			}
		}
		return null;
	}
	,readOp: function() {
		var op = this.i.readByte();
		var args = format_hl_Reader.OP_ARGS[op];
		switch(args) {
		case -1:
			switch(op) {
			case 70:
				this.args3[0] = this.uindex();
				var tmp = this.args3;
				var _g = [];
				var _g1 = 0;
				var _g2 = this.uindex();
				while(_g1 < _g2) {
					var i = _g1++;
					_g.push(this.uindex());
				}
				tmp[1] = _g;
				this.args3[2] = this.uindex();
				return Type.createEnumIndex(format_hl_Opcode,op,this.args3);
			case 29:case 30:case 31:case 32:case 90:
				this.args3[0] = this.index();
				this.args3[1] = this.index();
				var tmp1 = this.args3;
				var _g3 = [];
				var _g11 = 0;
				var _g21 = this.uindex();
				while(_g11 < _g21) {
					var i1 = _g11++;
					_g3.push(this.index());
				}
				tmp1[2] = _g3;
				return Type.createEnumIndex(format_hl_Opcode,op,this.args3);
			default:
				throw new js__$Boot_HaxeError("Don't know how to handle opcode " + op + "(" + format_hl_Opcode.__constructs__.slice()[op] + ")");
			}
			break;
		case 1:
			this.args1[0] = this.index();
			return Type.createEnumIndex(format_hl_Opcode,op,this.args1);
		case 2:
			this.args2[0] = this.index();
			this.args2[1] = this.index();
			return Type.createEnumIndex(format_hl_Opcode,op,this.args2);
		case 3:
			this.args3[0] = this.index();
			this.args3[1] = this.index();
			this.args3[2] = this.index();
			return Type.createEnumIndex(format_hl_Opcode,op,this.args3);
		case 4:
			this.args4[0] = this.index();
			this.args4[1] = this.index();
			this.args4[2] = this.index();
			this.args4[3] = this.index();
			return Type.createEnumIndex(format_hl_Opcode,op,this.args4);
		default:
			var _g4 = [];
			var _g12 = 0;
			var _g22 = args;
			while(_g12 < _g22) {
				var i2 = _g12++;
				_g4.push(this.index());
			}
			return Type.createEnumIndex(format_hl_Opcode,op,_g4);
		}
	}
	,readDebug: function(nops) {
		if((this.flags & 1 << format_hl_CodeFlag.HasDebug._hx_index) == 0) {
			return null;
		}
		var curfile = -1;
		var curline = 0;
		var debug = [];
		var i = 0;
		while(i < nops) {
			var c = this.i.readByte();
			if((c & 1) != 0) {
				c >>= 1;
				curfile = c << 8 | this.i.readByte();
				if(curfile >= this.debugFiles.length) {
					throw new js__$Boot_HaxeError("Invalid debug file");
				}
			} else if((c & 2) != 0) {
				var delta = c >> 6;
				var count = c >> 2 & 15;
				if(i + count > nops) {
					throw new js__$Boot_HaxeError("Outside range");
				}
				while(count-- > 0) {
					debug[i << 1] = curfile;
					debug[i << 1 | 1] = curline;
					++i;
				}
				curline += delta;
			} else if((c & 4) != 0) {
				curline += c >> 3;
				debug[i << 1] = curfile;
				debug[i << 1 | 1] = curline;
				++i;
			} else {
				var b2 = this.i.readByte();
				var b3 = this.i.readByte();
				curline = c >> 3 | b2 << 5 | b3 << 13;
				debug[i << 1] = curfile;
				debug[i << 1 | 1] = curline;
				++i;
			}
		}
		return debug;
	}
	,read: function(i) {
		this.i = i;
		if(i.readString(3) != "HLB") {
			throw new js__$Boot_HaxeError("Invalid HL file");
		}
		this.version = this.i.readByte();
		if(this.version <= 1 || this.version > 4) {
			throw new js__$Boot_HaxeError("HL Version " + this.version + " is not supported");
		}
		var this1 = this.uindex();
		this.flags = this1;
		var nints = this.uindex();
		var nfloats = this.uindex();
		var nstrings = this.uindex();
		var ntypes = this.uindex();
		var nglobals = this.uindex();
		var nnatives = this.uindex();
		var nfunctions = this.uindex();
		var nconstants = this.version >= 4 ? this.uindex() : 0;
		var entryPoint = this.uindex();
		var _g = [];
		var _g1 = 0;
		var _g2 = nints;
		while(_g1 < _g2) {
			var _ = _g1++;
			_g.push(i.readInt32());
		}
		var ints = _g;
		var _g3 = [];
		var _g4 = 0;
		var _g5 = nfloats;
		while(_g4 < _g5) {
			var _1 = _g4++;
			_g3.push(i.readDouble());
		}
		var floats = _g3;
		this.strings = this.readStrings(nstrings);
		this.debugFiles = null;
		if((this.flags & 1 << format_hl_CodeFlag.HasDebug._hx_index) != 0) {
			this.debugFiles = this.readStrings(this.uindex());
		}
		this.types = [];
		var _g6 = 0;
		var _g7 = ntypes;
		while(_g6 < _g7) {
			var i1 = _g6++;
			this.types[i1] = this.readType();
		}
		var _g8 = 0;
		var _g9 = ntypes;
		while(_g8 < _g9) {
			var i2 = _g8++;
			var _g81 = this.types[i2];
			switch(_g81._hx_index) {
			case 10:
				var f = _g81.fun;
				var _g82 = 0;
				var _g91 = f.args.length;
				while(_g82 < _g91) {
					var i3 = _g82++;
					f.args[i3] = this.fixType(f.args[i3]);
				}
				f.ret = this.fixType(f.ret);
				break;
			case 11:
				var p = _g81.proto;
				var _g83 = 0;
				var _g92 = p.fields;
				while(_g83 < _g92.length) {
					var f1 = _g92[_g83];
					++_g83;
					f1.t = this.fixType(f1.t);
				}
				break;
			case 15:
				var fl = _g81.fields;
				var _g84 = 0;
				while(_g84 < fl.length) {
					var f2 = fl[_g84];
					++_g84;
					f2.t = this.fixType(f2.t);
				}
				break;
			case 18:
				var e = _g81.proto;
				var _g85 = 0;
				var _g93 = e.constructs;
				while(_g85 < _g93.length) {
					var c = _g93[_g85];
					++_g85;
					var _g86 = 0;
					var _g94 = c.params.length;
					while(_g86 < _g94) {
						var i4 = _g86++;
						c.params[i4] = this.fixType(c.params[i4]);
					}
				}
				break;
			default:
			}
		}
		var tmp = this.version;
		var tmp1 = this.flags;
		var tmp2 = this.strings;
		var tmp3 = this.debugFiles;
		var tmp4 = this.types;
		var _g10 = [];
		var _g11 = 0;
		var _g12 = nglobals;
		while(_g11 < _g12) {
			var i5 = _g11++;
			_g10.push(this.getType());
		}
		var tmp5 = _g10;
		var _g13 = [];
		var _g14 = 0;
		var _g15 = nnatives;
		while(_g14 < _g15) {
			var i6 = _g14++;
			_g13.push({ lib : this.getString(), name : this.getString(), t : this.getType(), findex : this.uindex()});
		}
		var tmp6 = _g13;
		var _g16 = [];
		var _g17 = 0;
		var _g18 = nfunctions;
		while(_g17 < _g18) {
			var i7 = _g17++;
			_g16.push(this.readFunction());
		}
		var tmp7 = _g16;
		var _g19 = [];
		var _g20 = 0;
		var _g21 = nconstants;
		while(_g20 < _g21) {
			var i8 = _g20++;
			var tmp8 = this.uindex();
			var _g201 = [];
			var _g211 = 0;
			var _g22 = this.uindex();
			while(_g211 < _g22) {
				var i9 = _g211++;
				_g201.push(this.uindex());
			}
			_g19.push({ global : tmp8, fields : _g201});
		}
		return { version : tmp, flags : tmp1, ints : ints, floats : floats, strings : tmp2, debugFiles : tmp3, types : tmp4, entryPoint : entryPoint, globals : tmp5, natives : tmp6, functions : tmp7, constants : _g19};
	}
	,__class__: format_hl_Reader
};
var format_hl_Tools = function() { };
format_hl_Tools.__name__ = true;
format_hl_Tools.isDynamic = function(t) {
	switch(t._hx_index) {
	case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 20:
		return false;
	case 9:case 10:case 11:case 12:case 15:case 16:case 18:case 19:
		return true;
	case 8:case 13:case 14:case 17:
		return false;
	}
};
format_hl_Tools.isPtr = function(t) {
	switch(t._hx_index) {
	case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 20:
		return false;
	case 9:case 10:case 11:case 12:case 15:case 16:case 19:
		return true;
	case 8:case 13:case 14:case 17:case 18:
		return true;
	}
};
format_hl_Tools.containsPointer = function(t) {
	switch(t._hx_index) {
	case 9:case 10:case 12:case 15:case 16:case 17:
		return true;
	case 11:
		var p = t.proto;
		var _g = 0;
		var _g1 = p.fields;
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			if(format_hl_Tools.isPtr(f.t)) {
				return true;
			}
		}
		if(p.tsuper == null) {
			return false;
		}
		return format_hl_Tools.containsPointer(p.tsuper);
	case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 13:case 14:case 20:
		return false;
	case 18:
		var e = t.proto;
		var _g2 = 0;
		var _g11 = e.constructs;
		while(_g2 < _g11.length) {
			var c = _g11[_g2];
			++_g2;
			var _g3 = 0;
			var _g12 = c.params;
			while(_g3 < _g12.length) {
				var t1 = _g12[_g3];
				++_g3;
				if(format_hl_Tools.isPtr(t1)) {
					return true;
				}
			}
		}
		return false;
	case 19:
		var t2 = t.t;
		return format_hl_Tools.isPtr(t2);
	}
};
format_hl_Tools.hash = function(name) {
	var h = 0;
	var _g = 0;
	var _g1 = name.length;
	while(_g < _g1) {
		var i = _g++;
		h = 223 * h + name.charCodeAt(i) | 0;
	}
	h %= 536870779;
	return h;
};
format_hl_Tools.toString = function(t) {
	if(t == null) {
		return "<null>";
	}
	switch(t._hx_index) {
	case 0:
		return "Void";
	case 1:
		return "hl.UI8";
	case 2:
		return "hl.UI16";
	case 3:
		return "Int";
	case 4:
		return "hl.I64";
	case 5:
		return "Single";
	case 6:
		return "Float";
	case 7:
		return "Bool";
	case 8:
		return "hl.Bytes";
	case 9:
		return "Dynamic";
	case 10:
		var f = t.fun;
		if(f.args.length == 0) {
			var t1 = f.ret;
			return "Void -> " + (t1._hx_index == 10 ? "(" + format_hl_Tools.toString(t1) + ")" : format_hl_Tools.toString(t1));
		} else {
			var _g = [];
			var _g1 = 0;
			var _g2 = f.args;
			while(_g1 < _g2.length) {
				var a = _g2[_g1];
				++_g1;
				_g.push(a._hx_index == 10 ? "(" + format_hl_Tools.toString(a) + ")" : format_hl_Tools.toString(a));
			}
			var tmp = _g.join(" -> ") + " -> ";
			var t2 = f.ret;
			return tmp + (t2._hx_index == 10 ? "(" + format_hl_Tools.toString(t2) + ")" : format_hl_Tools.toString(t2));
		}
		break;
	case 11:
		var o = t.proto;
		switch(o.name) {
		case "haxe.ds.IntMap":
			return "Map<Int,Dynamic>";
		case "haxe.ds.ObjectMap":
			return "Map<{},Dynamic>";
		case "haxe.ds.StringMap":
			return "Map<String,Dynamic>";
		case "hl.types.ArrayBytes_Float":
			return "Array<Float>";
		case "hl.types.ArrayBytes_Int":
			return "Array<Int>";
		case "hl.types.ArrayBytes_Single":
			return "Array<Single>";
		case "hl.types.ArrayBytes_hl_UI16":
			return "Array<hl.UI16>";
		case "hl.types.ArrayDyn":
			return "Array<Dynamic>";
		case "hl.types.ArrayObj":
			return "Array<T>";
		default:
			return o.name;
		}
		break;
	case 12:
		return "hl.NativeArray";
	case 13:
		return "hl.Type";
	case 14:
		var t3 = t.t;
		return "hl.Ref<" + format_hl_Tools.toString(t3) + ">";
	case 15:
		var fl = t.fields;
		var _g3 = [];
		var _g11 = 0;
		while(_g11 < fl.length) {
			var f1 = fl[_g11];
			++_g11;
			_g3.push({ name : f1.name, t : f1.t});
		}
		var fields = _g3;
		var _g21 = 0;
		while(_g21 < fl.length) {
			var f2 = fl[_g21];
			++_g21;
			f2.t = format_hl_HLType.HAt(0);
		}
		var _g31 = [];
		var _g4 = 0;
		while(_g4 < fields.length) {
			var f3 = fields[_g4];
			++_g4;
			_g31.push(f3.name + " : " + format_hl_Tools.toString(f3.t));
		}
		var str = "{ " + _g31.join(", ") + " }";
		var _g5 = 0;
		var _g6 = fields.length;
		while(_g5 < _g6) {
			var i = _g5++;
			fl[i].t = fields[i].t;
		}
		return str;
	case 16:
		return "hl.DynObj";
	case 17:
		var name = t.name;
		return "hl.NativeAbstract<" + name + ">";
	case 18:
		var e = t.proto;
		return e.name;
	case 19:
		var t4 = t.t;
		return "Null<" + format_hl_Tools.toString(t4) + ">";
	case 20:
		return "<...>";
	}
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe__$Int32_Int32_$Impl_$ = {};
haxe__$Int32_Int32_$Impl_$.__name__ = true;
haxe__$Int32_Int32_$Impl_$.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
var haxe__$Int64_Int64_$Impl_$ = {};
haxe__$Int64_Int64_$Impl_$.__name__ = true;
haxe__$Int64_Int64_$Impl_$.toString = function(this1) {
	var i = this1;
	var b_high = 0;
	var b_low = 0;
	if(i.high == b_high && i.low == b_low) {
		return "0";
	}
	var str = "";
	var neg = false;
	if(i.high < 0) {
		neg = true;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(0,10);
	var ten = this2;
	while(true) {
		var b_high1 = 0;
		var b_low1 = 0;
		if(!(i.high != b_high1 || i.low != b_low1)) {
			break;
		}
		var r = haxe__$Int64_Int64_$Impl_$.divMod(i,ten);
		if(r.modulus.high < 0) {
			var x = r.modulus;
			var high = ~x.high;
			var low = -x.low;
			if(low == 0) {
				var ret = high++;
				high = high | 0;
			}
			var this_high = high;
			var this_low = low;
			str = this_low + str;
			var x1 = r.quotient;
			var high1 = ~x1.high;
			var low1 = -x1.low;
			if(low1 == 0) {
				var ret1 = high1++;
				high1 = high1 | 0;
			}
			var this3 = new haxe__$Int64__$_$_$Int64(high1,low1);
			i = this3;
		} else {
			str = r.modulus.low + str;
			i = r.quotient;
		}
	}
	if(neg) {
		str = "-" + str;
	}
	return str;
};
haxe__$Int64_Int64_$Impl_$.divMod = function(dividend,divisor) {
	if(divisor.high == 0) {
		switch(divisor.low) {
		case 0:
			throw new js__$Boot_HaxeError("divide by zero");
		case 1:
			var this1 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
			var this2 = new haxe__$Int64__$_$_$Int64(0,0);
			return { quotient : this1, modulus : this2};
		}
	}
	var divSign = dividend.high < 0 != divisor.high < 0;
	var modulus;
	if(dividend.high < 0) {
		var high = ~dividend.high;
		var low = -dividend.low;
		if(low == 0) {
			var ret = high++;
			high = high | 0;
		}
		var this3 = new haxe__$Int64__$_$_$Int64(high,low);
		modulus = this3;
	} else {
		var this4 = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
		modulus = this4;
	}
	if(divisor.high < 0) {
		var high1 = ~divisor.high;
		var low1 = -divisor.low;
		if(low1 == 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this5 = new haxe__$Int64__$_$_$Int64(high1,low1);
		divisor = this5;
	} else {
		divisor = divisor;
	}
	var this6 = new haxe__$Int64__$_$_$Int64(0,0);
	var quotient = this6;
	var this7 = new haxe__$Int64__$_$_$Int64(0,1);
	var mask = this7;
	while(!(divisor.high < 0)) {
		var v = haxe__$Int32_Int32_$Impl_$.ucompare(divisor.high,modulus.high);
		var cmp = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(divisor.low,modulus.low);
		var b = 1;
		b &= 63;
		if(b == 0) {
			var this8 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this8;
		} else if(b < 32) {
			var this9 = new haxe__$Int64__$_$_$Int64(divisor.high << b | divisor.low >>> 32 - b,divisor.low << b);
			divisor = this9;
		} else {
			var this10 = new haxe__$Int64__$_$_$Int64(divisor.low << b - 32,0);
			divisor = this10;
		}
		var b1 = 1;
		b1 &= 63;
		if(b1 == 0) {
			var this11 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this11;
		} else if(b1 < 32) {
			var this12 = new haxe__$Int64__$_$_$Int64(mask.high << b1 | mask.low >>> 32 - b1,mask.low << b1);
			mask = this12;
		} else {
			var this13 = new haxe__$Int64__$_$_$Int64(mask.low << b1 - 32,0);
			mask = this13;
		}
		if(cmp >= 0) {
			break;
		}
	}
	while(true) {
		var b_high = 0;
		var b_low = 0;
		if(!(mask.high != b_high || mask.low != b_low)) {
			break;
		}
		var v1 = haxe__$Int32_Int32_$Impl_$.ucompare(modulus.high,divisor.high);
		if((v1 != 0 ? v1 : haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low)) >= 0) {
			var this14 = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high,quotient.low | mask.low);
			quotient = this14;
			var high2 = modulus.high - divisor.high | 0;
			var low2 = modulus.low - divisor.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low) < 0) {
				var ret2 = high2--;
				high2 = high2 | 0;
			}
			var this15 = new haxe__$Int64__$_$_$Int64(high2,low2);
			modulus = this15;
		}
		var b2 = 1;
		b2 &= 63;
		if(b2 == 0) {
			var this16 = new haxe__$Int64__$_$_$Int64(mask.high,mask.low);
			mask = this16;
		} else if(b2 < 32) {
			var this17 = new haxe__$Int64__$_$_$Int64(mask.high >>> b2,mask.high << 32 - b2 | mask.low >>> b2);
			mask = this17;
		} else {
			var this18 = new haxe__$Int64__$_$_$Int64(0,mask.high >>> b2 - 32);
			mask = this18;
		}
		var b3 = 1;
		b3 &= 63;
		if(b3 == 0) {
			var this19 = new haxe__$Int64__$_$_$Int64(divisor.high,divisor.low);
			divisor = this19;
		} else if(b3 < 32) {
			var this20 = new haxe__$Int64__$_$_$Int64(divisor.high >>> b3,divisor.high << 32 - b3 | divisor.low >>> b3);
			divisor = this20;
		} else {
			var this21 = new haxe__$Int64__$_$_$Int64(0,divisor.high >>> b3 - 32);
			divisor = this21;
		}
	}
	if(divSign) {
		var high3 = ~quotient.high;
		var low3 = -quotient.low;
		if(low3 == 0) {
			var ret3 = high3++;
			high3 = high3 | 0;
		}
		var this22 = new haxe__$Int64__$_$_$Int64(high3,low3);
		quotient = this22;
	}
	if(dividend.high < 0) {
		var high4 = ~modulus.high;
		var low4 = -modulus.low;
		if(low4 == 0) {
			var ret4 = high4++;
			high4 = high4 | 0;
		}
		var this23 = new haxe__$Int64__$_$_$Int64(high4,low4);
		modulus = this23;
	}
	return { quotient : quotient, modulus : modulus};
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
haxe__$Int64__$_$_$Int64.__name__ = true;
haxe__$Int64__$_$_$Int64.prototype = {
	toString: function() {
		return haxe__$Int64_Int64_$Impl_$.toString(this);
	}
	,__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Log = function() { };
haxe_Log.__name__ = true;
haxe_Log.formatOutput = function(v,infos) {
	var str = Std.string(v);
	if(infos == null) {
		return str;
	}
	var pstr = infos.fileName + ":" + infos.lineNumber;
	if(infos != null && infos.customParams != null) {
		var _g = 0;
		var _g1 = infos.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			str += ", " + Std.string(v1);
		}
	}
	return pstr + ": " + str;
};
haxe_Log.trace = function(v,infos) {
	var str = haxe_Log.formatOutput(v,infos);
	if(typeof(console) != "undefined" && console.log != null) {
		console.log(str);
	}
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = true;
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_GenericCell = function(elt,next) {
	this.elt = elt;
	this.next = next;
};
haxe_ds_GenericCell.__name__ = true;
haxe_ds_GenericCell.prototype = {
	__class__: haxe_ds_GenericCell
};
var haxe_ds_GenericStack = function() {
};
haxe_ds_GenericStack.__name__ = true;
haxe_ds_GenericStack.prototype = {
	__class__: haxe_ds_GenericStack
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = true;
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	keys: function() {
		var a = [];
		for( var key in this.h ) if(this.h.hasOwnProperty(key)) {
			a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,iterator: function() {
		return { ref : this.h, it : this.keys(), hasNext : function() {
			return this.it.hasNext();
		}, next : function() {
			var i = this.it.next();
			return this.ref[i];
		}};
	}
	,__class__: haxe_ds_IntMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,existsReserved: function(key) {
		if(this.rh == null) {
			return false;
		}
		return this.rh.hasOwnProperty("$" + key);
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
haxe_io_Bytes.__name__ = true;
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s,encoding) {
	if(encoding == haxe_io_Encoding.RawNative) {
		var buf = new Uint8Array(s.length << 1);
		var _g = 0;
		var _g1 = s.length;
		while(_g < _g1) {
			var i = _g++;
			var c = s.charCodeAt(i);
			buf[i << 1] = c & 255;
			buf[i << 1 | 1] = c >> 8;
		}
		return new haxe_io_Bytes(buf.buffer);
	}
	var a = [];
	var i1 = 0;
	while(i1 < s.length) {
		var c1 = s.charCodeAt(i1++);
		if(55296 <= c1 && c1 <= 56319) {
			c1 = c1 - 55232 << 10 | s.charCodeAt(i1++) & 1023;
		}
		if(c1 <= 127) {
			a.push(c1);
		} else if(c1 <= 2047) {
			a.push(192 | c1 >> 6);
			a.push(128 | c1 & 63);
		} else if(c1 <= 65535) {
			a.push(224 | c1 >> 12);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		} else {
			a.push(240 | c1 >> 18);
			a.push(128 | c1 >> 12 & 63);
			a.push(128 | c1 >> 6 & 63);
			a.push(128 | c1 & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.ofData = function(b) {
	var hb = b.hxBytes;
	if(hb != null) {
		return hb;
	}
	return new haxe_io_Bytes(b);
};
haxe_io_Bytes.ofHex = function(s) {
	if((s.length & 1) != 0) {
		throw new js__$Boot_HaxeError("Not a hex string (odd number of digits)");
	}
	var a = [];
	var i = 0;
	var len = s.length >> 1;
	while(i < len) {
		var high = s.charCodeAt(i * 2);
		var low = s.charCodeAt(i * 2 + 1);
		high = (high & 15) + ((high & 64) >> 6) * 9;
		low = (low & 15) + ((low & 64) >> 6) * 9;
		a.push((high << 4 | low) & 255);
		++i;
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.fastGet = function(b,pos) {
	return b.bytes[pos];
};
haxe_io_Bytes.prototype = {
	getUInt16: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getUint16(pos,true);
	}
	,getInt32: function(pos) {
		if(this.data == null) {
			this.data = new DataView(this.b.buffer,this.b.byteOffset,this.b.byteLength);
		}
		return this.data.getInt32(pos,true);
	}
	,getString: function(pos,len,encoding) {
		if(pos < 0 || len < 0 || pos + len > this.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(encoding == null) {
			encoding = haxe_io_Encoding.UTF8;
		}
		var s = "";
		var b = this.b;
		var i = pos;
		var max = pos + len;
		switch(encoding._hx_index) {
		case 0:
			var debug = pos > 0;
			while(i < max) {
				var c = b[i++];
				if(c < 128) {
					if(c == 0) {
						break;
					}
					s += String.fromCodePoint(c);
				} else if(c < 224) {
					s += String.fromCodePoint((c & 63) << 6 | b[i++] & 127);
				} else if(c < 240) {
					var c2 = b[i++];
					s += String.fromCodePoint((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
				} else {
					var c21 = b[i++];
					var c3 = b[i++];
					var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
					s += String.fromCodePoint(u);
				}
			}
			break;
		case 1:
			while(i < max) {
				var c1 = b[i++] | b[i++] << 8;
				s += String.fromCodePoint(c1);
			}
			break;
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,toHex: function() {
		var s_b = "";
		var chars = [];
		var str = "0123456789abcdef";
		var _g = 0;
		var _g1 = str.length;
		while(_g < _g1) {
			var i = _g++;
			chars.push(HxOverrides.cca(str,i));
		}
		var _g2 = 0;
		var _g3 = this.length;
		while(_g2 < _g3) {
			var i1 = _g2++;
			var c = this.b[i1];
			s_b += String.fromCodePoint(chars[c >> 4]);
			s_b += String.fromCodePoint(chars[c & 15]);
		}
		return s_b;
	}
	,__class__: haxe_io_Bytes
};
var haxe_io_BytesBuffer = function() {
	this.pos = 0;
	this.size = 0;
};
haxe_io_BytesBuffer.__name__ = true;
haxe_io_BytesBuffer.prototype = {
	addByte: function(byte) {
		if(this.pos == this.size) {
			this.grow(1);
		}
		this.view.setUint8(this.pos++,byte);
	}
	,grow: function(delta) {
		var req = this.pos + delta;
		var nsize = this.size == 0 ? 16 : this.size;
		while(nsize < req) nsize = nsize * 3 >> 1;
		var nbuf = new ArrayBuffer(nsize);
		var nu8 = new Uint8Array(nbuf);
		if(this.size > 0) {
			nu8.set(this.u8);
		}
		this.size = nsize;
		this.buffer = nbuf;
		this.u8 = nu8;
		this.view = new DataView(this.buffer);
	}
	,getBytes: function() {
		if(this.size == 0) {
			return new haxe_io_Bytes(new ArrayBuffer(0));
		}
		var b = new haxe_io_Bytes(this.buffer);
		b.length = this.pos;
		return b;
	}
	,__class__: haxe_io_BytesBuffer
};
var haxe_io_BytesInput = function(b,pos,len) {
	if(pos == null) {
		pos = 0;
	}
	if(len == null) {
		len = b.length - pos;
	}
	if(pos < 0 || len < 0 || pos + len > b.length) {
		throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
	}
	this.b = b.b;
	this.pos = pos;
	this.len = len;
	this.totlen = len;
};
haxe_io_BytesInput.__name__ = true;
haxe_io_BytesInput.__super__ = haxe_io_Input;
haxe_io_BytesInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		if(this.len == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.len--;
		return this.b[this.pos++];
	}
	,readBytes: function(buf,pos,len) {
		if(pos < 0 || len < 0 || pos + len > buf.length) {
			throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		}
		if(this.len == 0 && len > 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		if(this.len < len) {
			len = this.len;
		}
		var b1 = this.b;
		var b2 = buf.b;
		var _g = 0;
		var _g1 = len;
		while(_g < _g1) {
			var i = _g++;
			b2[pos + i] = b1[this.pos + i];
		}
		this.pos += len;
		this.len -= len;
		return len;
	}
	,__class__: haxe_io_BytesInput
});
var haxe_io_BytesOutput = function() {
	this.b = new haxe_io_BytesBuffer();
};
haxe_io_BytesOutput.__name__ = true;
haxe_io_BytesOutput.__super__ = haxe_io_Output;
haxe_io_BytesOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(c) {
		this.b.addByte(c);
	}
	,getBytes: function() {
		return this.b.getBytes();
	}
	,__class__: haxe_io_BytesOutput
});
var haxe_io_Encoding = $hxEnums["haxe.io.Encoding"] = { __ename__ : true, __constructs__ : ["UTF8","RawNative"]
	,UTF8: {_hx_index:0,__enum__:"haxe.io.Encoding",toString:$estr}
	,RawNative: {_hx_index:1,__enum__:"haxe.io.Encoding",toString:$estr}
};
var haxe_io_Eof = function() {
};
haxe_io_Eof.__name__ = true;
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxEnums["haxe.io.Error"] = { __ename__ : true, __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"]
	,Blocked: {_hx_index:0,__enum__:"haxe.io.Error",toString:$estr}
	,Overflow: {_hx_index:1,__enum__:"haxe.io.Error",toString:$estr}
	,OutsideBounds: {_hx_index:2,__enum__:"haxe.io.Error",toString:$estr}
	,Custom: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"haxe.io.Error",toString:$estr}; },$_.__params__ = ["e"],$_)
};
var haxe_io_FPHelper = function() { };
haxe_io_FPHelper.__name__ = true;
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	haxe_io_FPHelper.helper.setInt32(0,low,true);
	haxe_io_FPHelper.helper.setInt32(4,high,true);
	return haxe_io_FPHelper.helper.getFloat64(0,true);
};
var haxe_io_Path = function(path) {
	switch(path) {
	case ".":case "..":
		this.dir = path;
		this.file = "";
		return;
	}
	var c1 = path.lastIndexOf("/");
	var c2 = path.lastIndexOf("\\");
	if(c1 < c2) {
		this.dir = HxOverrides.substr(path,0,c2);
		path = HxOverrides.substr(path,c2 + 1,null);
		this.backslash = true;
	} else if(c2 < c1) {
		this.dir = HxOverrides.substr(path,0,c1);
		path = HxOverrides.substr(path,c1 + 1,null);
	} else {
		this.dir = null;
	}
	var cp = path.lastIndexOf(".");
	if(cp != -1) {
		this.ext = HxOverrides.substr(path,cp + 1,null);
		this.file = HxOverrides.substr(path,0,cp);
	} else {
		this.ext = null;
		this.file = path;
	}
};
haxe_io_Path.__name__ = true;
haxe_io_Path.prototype = {
	__class__: haxe_io_Path
};
var haxe_io_StringInput = function(s) {
	haxe_io_BytesInput.call(this,haxe_io_Bytes.ofString(s));
};
haxe_io_StringInput.__name__ = true;
haxe_io_StringInput.__super__ = haxe_io_BytesInput;
haxe_io_StringInput.prototype = $extend(haxe_io_BytesInput.prototype,{
	__class__: haxe_io_StringInput
});
var hld_Align = function(is64,boolSize) {
	this.is64 = is64;
	this.ptrSize = is64 ? 8 : 4;
	this.boolSize = boolSize;
};
hld_Align.__name__ = true;
hld_Align.prototype = {
	get_ptr: function() {
		return this.ptrSize;
	}
	,typeSize: function(t) {
		switch(t._hx_index) {
		case 0:
			return 0;
		case 1:
			return 1;
		case 2:
			return 2;
		case 3:case 5:
			return 4;
		case 4:case 6:
			return 8;
		case 7:
			return this.boolSize;
		default:
			return this.ptrSize;
		}
	}
	,stackSize: function(t) {
		switch(t._hx_index) {
		case 1:case 2:case 7:
			return this.ptrSize;
		case 3:case 5:
			if(this.is64) {
				return this.ptrSize;
			} else {
				return this.typeSize(t);
			}
			break;
		default:
			return this.typeSize(t);
		}
	}
	,rest: function(v,size) {
		return -v & size - 1;
	}
	,padSize: function(v,t) {
		if(t == format_hl_HLType.HVoid) {
			return 0;
		} else {
			return -v & this.typeSize(t) - 1;
		}
	}
	,padStruct: function(v,t) {
		return -v & this.structSize(t) - 1;
	}
	,structSize: function(t) {
		if(format_hl_Tools.isPtr(t)) {
			return this.structSizes[this.structSizes.length - 1];
		}
		return this.structSizes[t._hx_index];
	}
	,__class__: hld_Align
};
var hld__$Api_Register_$Impl_$ = {};
hld__$Api_Register_$Impl_$.__name__ = true;
hld__$Api_Register_$Impl_$.toInt = function(this1) {
	return this1;
};
var hld_Api = function() { };
hld_Api.__name__ = true;
hld_Api.prototype = {
	__class__: hld_Api
};
var hld__$Buffer_Buffer_$Impl_$ = {};
hld__$Buffer_Buffer_$Impl_$.__name__ = true;
hld__$Buffer_Buffer_$Impl_$._new = function(size) {
	var this1 = js_node_buffer_Buffer.alloc(size);
	return this1;
};
hld__$Buffer_Buffer_$Impl_$.getPointer = function(this1,pos,align) {
	if(align.is64) {
		return hld__$Pointer_Pointer_$Impl_$.make(this1.readInt32LE(pos),this1.readInt32LE(pos + 4));
	}
	return hld__$Pointer_Pointer_$Impl_$.make(this1.readInt32LE(pos),0);
};
hld__$Buffer_Buffer_$Impl_$.setPointer = function(this1,pos,v,align) {
	if(align.is64) {
		var a = v;
		this1.writeInt32LE(a.low,pos);
		this1.writeInt32LE(a.high,pos + 4);
	} else {
		this1.writeInt32LE(hld__$Pointer_Pointer_$Impl_$.toInt(v),pos);
	}
};
hld__$Buffer_Buffer_$Impl_$.getI32 = function(this1,pos) {
	return this1.readInt32LE(pos);
};
hld__$Buffer_Buffer_$Impl_$.getUI8 = function(this1,pos) {
	return this1.readUInt8(pos);
};
hld__$Buffer_Buffer_$Impl_$.getUI16 = function(this1,pos) {
	return this1.readUInt16LE(pos);
};
hld__$Buffer_Buffer_$Impl_$.getF32 = function(this1,pos) {
	return this1.readFloatLE(pos);
};
hld__$Buffer_Buffer_$Impl_$.getF64 = function(this1,pos) {
	return this1.readDoubleLE(pos);
};
hld__$Buffer_Buffer_$Impl_$.setI32 = function(this1,pos,value) {
	this1.writeInt32LE(value,pos);
};
hld__$Buffer_Buffer_$Impl_$.setUI16 = function(this1,pos,value) {
	this1.writeUInt16LE(value,pos);
};
hld__$Buffer_Buffer_$Impl_$.setUI8 = function(this1,pos,value) {
	this1.writeUInt8(value,pos);
};
hld__$Buffer_Buffer_$Impl_$.readStringUCS2 = function(this1,pos,length) {
	var str = "";
	var _g = 0;
	var _g1 = length;
	while(_g < _g1) {
		var i = _g++;
		var c = this1.readUInt16LE(pos);
		str += String.fromCodePoint(c);
		pos += 2;
	}
	return str;
};
var hld__$CodeGraph_Control = $hxEnums["hld._CodeGraph.Control"] = { __ename__ : true, __constructs__ : ["CNo","CJCond","CJAlways","CTry","CSwitch","CRet","CThrow","CLabel"]
	,CNo: {_hx_index:0,__enum__:"hld._CodeGraph.Control",toString:$estr}
	,CJCond: ($_=function(d) { return {_hx_index:1,d:d,__enum__:"hld._CodeGraph.Control",toString:$estr}; },$_.__params__ = ["d"],$_)
	,CJAlways: ($_=function(d) { return {_hx_index:2,d:d,__enum__:"hld._CodeGraph.Control",toString:$estr}; },$_.__params__ = ["d"],$_)
	,CTry: ($_=function(d) { return {_hx_index:3,d:d,__enum__:"hld._CodeGraph.Control",toString:$estr}; },$_.__params__ = ["d"],$_)
	,CSwitch: ($_=function(arr) { return {_hx_index:4,arr:arr,__enum__:"hld._CodeGraph.Control",toString:$estr}; },$_.__params__ = ["arr"],$_)
	,CRet: {_hx_index:5,__enum__:"hld._CodeGraph.Control",toString:$estr}
	,CThrow: {_hx_index:6,__enum__:"hld._CodeGraph.Control",toString:$estr}
	,CLabel: {_hx_index:7,__enum__:"hld._CodeGraph.Control",toString:$estr}
};
var hld_CodeBlock = function(pos) {
	this.visitTag = 0;
	this.start = pos;
	this.prev = [];
	this.next = [];
	this.writtenRegs = new haxe_ds_IntMap();
	this.writtenVars = new haxe_ds_StringMap();
};
hld_CodeBlock.__name__ = true;
hld_CodeBlock.prototype = {
	__class__: hld_CodeBlock
};
var hld_CodeGraph = function(md,f) {
	this.currentTag = 0;
	this.module = md;
	this.fun = f;
	this.blockPos = new haxe_ds_IntMap();
	this.allBlocks = new haxe_ds_IntMap();
	var _g = this.fun.t;
	var tmp;
	if(_g._hx_index == 10) {
		var f1 = _g.fun;
		tmp = f1.args.length;
	} else {
		throw new js__$Boot_HaxeError("assert");
	}
	this.nargs = tmp;
	var _g1 = 0;
	var _g2 = f.ops.length;
	while(_g1 < _g2) {
		var i = _g1++;
		var _g11 = this.control(i);
		switch(_g11._hx_index) {
		case 1:
			var d = _g11.d;
			this.allBlocks.h[i + 1 + d] = true;
			break;
		case 2:
			var d1 = _g11.d;
			this.allBlocks.h[i + 1 + d1] = true;
			break;
		default:
		}
	}
	this.makeBlock(0);
	this.args = [];
	var reg = -1;
	var _g3 = 0;
	var _g4 = this.fun.assigns;
	while(_g3 < _g4.length) {
		var a = _g4[_g3];
		++_g3;
		if(a.position >= 0) {
			break;
		}
		var vname = this.module.strings[a.varName];
		if(a.position == -1) {
			this.args.push({ hasIndex : false, vars : [vname]});
			continue;
		}
		var r = -a.position - 2;
		var vars;
		if(r != reg) {
			reg = r;
			vars = [];
			this.args.unshift({ hasIndex : true, vars : vars});
		} else {
			vars = this.args[0].vars;
		}
		vars.push(vname);
	}
	var tmp1;
	if(this.args.length >= 1 && this.args[0].hasIndex && this.args[0].vars.length == 1) {
		var _g5 = f.regs[0];
		tmp1 = !(_g5._hx_index == 18 && _g5.proto.name == "");
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		this.args[0].hasIndex = false;
	}
	if(this.args.length == this.nargs - 1) {
		this.args.unshift({ hasIndex : false, vars : ["this"]});
	}
	if(this.args.length != this.nargs) {
		throw new js__$Boot_HaxeError("assert");
	}
	this.assigns = new haxe_ds_IntMap();
	var _g6 = 0;
	var _g7 = this.fun.assigns;
	while(_g6 < _g7.length) {
		var a1 = _g7[_g6];
		++_g6;
		if(a1.position < 0) {
			continue;
		}
		var vname1 = this.module.strings[a1.varName];
		var vl = this.assigns.h[a1.position];
		if(vl == null) {
			vl = [];
			this.assigns.h[a1.position] = vl;
		}
		vl.push(vname1);
	}
	var b = this.blockPos.iterator();
	while(b.hasNext()) {
		var b1 = b.next();
		this.checkWrites(b1);
	}
	while(true) {
		var changed = false;
		var b2 = this.blockPos.iterator();
		while(b2.hasNext()) {
			var b3 = b2.next();
			var _g9 = 0;
			var _g10 = b3.prev;
			while(_g9 < _g10.length) {
				var b21 = _g10[_g9];
				++_g9;
				var rid = b21.writtenRegs.keys();
				while(rid.hasNext()) {
					var rid1 = rid.next();
					var pos = b21.writtenRegs.h[rid1];
					var cur = b3.writtenRegs.h[rid1];
					if(cur == null || cur > pos) {
						b3.writtenRegs.h[rid1] = pos;
						changed = true;
					}
				}
			}
		}
		if(!changed) {
			break;
		}
	}
};
hld_CodeGraph.__name__ = true;
hld_CodeGraph.prototype = {
	getBlock: function(pos) {
		var bpos = pos;
		var b;
		while(true) {
			b = this.blockPos.h[bpos];
			if(!(b == null)) {
				break;
			}
			--bpos;
		}
		return b;
	}
	,isRegisterWritten: function(rid,pos) {
		if(rid < this.nargs) {
			return true;
		}
		var b = this.getBlock(pos);
		var rpos = b.writtenRegs.h[rid];
		if(rpos != null) {
			return rpos < pos;
		} else {
			return false;
		}
	}
	,getArgs: function() {
		var arr = [];
		var _g = 0;
		var _g1 = this.args;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g11 = a.vars;
			while(_g2 < _g11.length) {
				var v = _g11[_g2];
				++_g2;
				arr.push(v);
			}
		}
		return arr;
	}
	,getLocals: function(pos) {
		var arr = [];
		var _g = 0;
		var _g1 = this.fun.assigns;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			if(a.position > pos) {
				break;
			}
			if(a.position < 0) {
				continue;
			}
			if(arr.indexOf(a.varName) >= 0) {
				continue;
			}
			if(this.getLocal(this.module.strings[a.varName],pos) == null) {
				continue;
			}
			arr.push(a.varName);
		}
		var _g2 = [];
		var _g3 = 0;
		while(_g3 < arr.length) {
			var a1 = arr[_g3];
			++_g3;
			_g2.push(this.module.strings[a1]);
		}
		return _g2;
	}
	,getLocal: function(name,pos) {
		var b = this.getBlock(pos);
		this.currentTag++;
		var l = this.lookupLocal(b,name,pos);
		if(l != null) {
			return l;
		}
		var _g = 0;
		var _g1 = this.args.length;
		while(_g < _g1) {
			var i = _g++;
			var a = this.args[i];
			var _g2 = 0;
			var _g11 = a.vars.length;
			while(_g2 < _g11) {
				var k = _g2++;
				if(a.vars[k] == name) {
					if(!a.hasIndex) {
						return { rid : i, t : this.fun.regs[i]};
					}
					var en = null;
					var t;
					var _g3 = this.fun.regs[i];
					if(_g3._hx_index == 18) {
						var e = _g3.proto;
						en = e;
						t = e.constructs[0].params[k];
					} else {
						throw new js__$Boot_HaxeError("assert");
					}
					return { rid : i, index : k, container : en, t : t};
				}
			}
		}
		return null;
	}
	,lookupLocal: function(b,name,pos) {
		if(b.visitTag == this.currentTag) {
			return null;
		}
		b.visitTag = this.currentTag;
		var _this = b.writtenVars;
		var v = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
		if(v != null) {
			var last = -1;
			var _g = 0;
			while(_g < v.length) {
				var p = v[_g];
				++_g;
				if(p < pos) {
					last = p;
				} else if(last < 0) {
					break;
				}
			}
			if(last >= 0) {
				var rid = -1;
				var op = this.fun.ops[last];
				switch(op._hx_index) {
				case 0:
					var a = op.a;
					var d = op.dst;
					rid = d;
					break;
				case 1:
					var d1 = op.dst;
					rid = d1;
					break;
				case 2:
					var d2 = op.dst;
					rid = d2;
					break;
				case 3:
					var d3 = op.dst;
					rid = d3;
					break;
				case 4:
					var d4 = op.dst;
					rid = d4;
					break;
				case 5:
					var d5 = op.dst;
					rid = d5;
					break;
				case 6:
					var d6 = op.dst;
					rid = d6;
					break;
				case 7:
					var b1 = op.b;
					var a1 = op.a;
					var d7 = op.dst;
					rid = d7;
					break;
				case 8:
					var b2 = op.b;
					var a2 = op.a;
					var d8 = op.dst;
					rid = d8;
					break;
				case 9:
					var b3 = op.b;
					var a3 = op.a;
					var d9 = op.dst;
					rid = d9;
					break;
				case 10:
					var b4 = op.b;
					var a4 = op.a;
					var d10 = op.dst;
					rid = d10;
					break;
				case 11:
					var b5 = op.b;
					var a5 = op.a;
					var d11 = op.dst;
					rid = d11;
					break;
				case 12:
					var b6 = op.b;
					var a6 = op.a;
					var d12 = op.dst;
					rid = d12;
					break;
				case 13:
					var b7 = op.b;
					var a7 = op.a;
					var d13 = op.dst;
					rid = d13;
					break;
				case 14:
					var b8 = op.b;
					var a8 = op.a;
					var d14 = op.dst;
					rid = d14;
					break;
				case 15:
					var b9 = op.b;
					var a9 = op.a;
					var d15 = op.dst;
					rid = d15;
					break;
				case 16:
					var b10 = op.b;
					var a10 = op.a;
					var d16 = op.dst;
					rid = d16;
					break;
				case 17:
					var b11 = op.b;
					var a11 = op.a;
					var d17 = op.dst;
					rid = d17;
					break;
				case 18:
					var b12 = op.b;
					var a12 = op.a;
					var d18 = op.dst;
					rid = d18;
					break;
				case 19:
					var b13 = op.b;
					var a13 = op.a;
					var d19 = op.dst;
					rid = d19;
					break;
				case 20:
					var a14 = op.a;
					var d20 = op.dst;
					rid = d20;
					break;
				case 21:
					var a15 = op.a;
					var d21 = op.dst;
					rid = d21;
					break;
				case 22:
					var a16 = op.dst;
					rid = a16;
					break;
				case 23:
					var a17 = op.dst;
					rid = a17;
					break;
				case 24:
					var d22 = op.dst;
					rid = d22;
					break;
				case 25:
					var a18 = op.a;
					var d23 = op.dst;
					rid = d23;
					break;
				case 26:
					var b14 = op.b;
					var a19 = op.a;
					var d24 = op.dst;
					rid = d24;
					break;
				case 27:
					var c = op.c;
					var b15 = op.b;
					var a20 = op.a;
					var d25 = op.dst;
					rid = d25;
					break;
				case 28:
					var k = op.d;
					var c1 = op.c;
					var b16 = op.b;
					var a21 = op.a;
					var d26 = op.dst;
					rid = d26;
					break;
				case 29:
					var rl = op.args;
					var d27 = op.dst;
					var _g1 = 0;
					while(_g1 < rl.length) {
						var r = rl[_g1];
						++_g1;
					}
					rid = d27;
					break;
				case 30:
					var rl1 = op.args;
					var d28 = op.dst;
					var _g2 = 0;
					while(_g2 < rl1.length) {
						var r1 = rl1[_g2];
						++_g2;
					}
					rid = d28;
					break;
				case 31:
					var rl2 = op.args;
					var d29 = op.dst;
					var _g3 = 0;
					while(_g3 < rl2.length) {
						var r2 = rl2[_g3];
						++_g3;
					}
					rid = d29;
					break;
				case 32:
					var rl3 = op.args;
					var f = op.obj;
					var d30 = op.dst;
					var _g4 = 0;
					while(_g4 < rl3.length) {
						var r3 = rl3[_g4];
						++_g4;
					}
					rid = d30;
					break;
				case 33:
					var d31 = op.dst;
					rid = d31;
					break;
				case 34:
					var a22 = op.a;
					var d32 = op.dst;
					rid = d32;
					break;
				case 35:
					var a23 = op.a;
					var d33 = op.dst;
					rid = d33;
					break;
				case 36:
					var d34 = op.dst;
					rid = d34;
					break;
				case 37:
					var a24 = op.a;
					break;
				case 38:
					var a25 = op.a;
					var d35 = op.dst;
					rid = d35;
					break;
				case 39:
					var b17 = op.a;
					var a26 = op.dst;
					break;
				case 40:
					var d36 = op.dst;
					rid = d36;
					break;
				case 41:
					var a27 = op.a;
					break;
				case 42:
					var a28 = op.a;
					var d37 = op.dst;
					rid = d37;
					break;
				case 43:
					var b18 = op.a;
					var a29 = op.dst;
					break;
				case 44:
					var r4 = op.dst;
					break;
				case 45:
					var r5 = op.dst;
					break;
				case 46:
					var r6 = op.dst;
					break;
				case 47:
					var r7 = op.dst;
					break;
				case 48:
					var b19 = op.a;
					var a30 = op.dst;
					break;
				case 49:
					var b20 = op.a;
					var a31 = op.dst;
					break;
				case 50:
					var b21 = op.a;
					var a32 = op.dst;
					break;
				case 51:
					var b22 = op.a;
					var a33 = op.dst;
					break;
				case 52:
					var b23 = op.a;
					var a34 = op.dst;
					break;
				case 53:
					var b24 = op.a;
					var a35 = op.dst;
					break;
				case 54:
					var b25 = op.a;
					var a36 = op.dst;
					break;
				case 55:
					var b26 = op.a;
					var a37 = op.dst;
					break;
				case 56:
					var b27 = op.a;
					var a38 = op.dst;
					break;
				case 57:
					var b28 = op.a;
					var a39 = op.dst;
					break;
				case 58:case 66:
					break;
				case 59:
					var a40 = op.a;
					var d38 = op.dst;
					rid = d38;
					break;
				case 60:
					var a41 = op.a;
					var d39 = op.dst;
					rid = d39;
					break;
				case 61:
					var a42 = op.a;
					var d40 = op.dst;
					rid = d40;
					break;
				case 62:
					var a43 = op.a;
					var d41 = op.dst;
					rid = d41;
					break;
				case 63:
					var a44 = op.a;
					var d42 = op.dst;
					rid = d42;
					break;
				case 64:
					var a45 = op.a;
					var d43 = op.dst;
					rid = d43;
					break;
				case 65:
					var a46 = op.a;
					var d44 = op.dst;
					rid = d44;
					break;
				case 67:
					var r8 = op.dst;
					break;
				case 68:
					var r9 = op.dst;
					break;
				case 69:
					var r10 = op.dst;
					break;
				case 70:
					var r11 = op.dst;
					break;
				case 71:
					var r12 = op.dst;
					break;
				case 72:
					var r13 = op.dst;
					rid = r13;
					break;
				case 73:
					break;
				case 74:
					var b29 = op.b;
					var a47 = op.a;
					var d45 = op.dst;
					rid = d45;
					break;
				case 75:
					var b30 = op.b;
					var a48 = op.a;
					var d46 = op.dst;
					rid = d46;
					break;
				case 76:
					var b31 = op.b;
					var a49 = op.a;
					var d47 = op.dst;
					rid = d47;
					break;
				case 77:
					var b32 = op.b;
					var a50 = op.a;
					var d48 = op.dst;
					rid = d48;
					break;
				case 78:
					var c2 = op.b;
					var b33 = op.a;
					var a51 = op.dst;
					break;
				case 79:
					var c3 = op.b;
					var b34 = op.a;
					var a52 = op.dst;
					break;
				case 80:
					var c4 = op.b;
					var b35 = op.a;
					var a53 = op.dst;
					break;
				case 81:
					var c5 = op.b;
					var b36 = op.a;
					var a54 = op.dst;
					break;
				case 82:
					var d49 = op.dst;
					rid = d49;
					break;
				case 83:
					var a55 = op.a;
					var d50 = op.dst;
					rid = d50;
					break;
				case 84:
					var d51 = op.dst;
					rid = d51;
					break;
				case 85:
					var a56 = op.a;
					var d52 = op.dst;
					rid = d52;
					break;
				case 86:
					var a57 = op.a;
					var d53 = op.dst;
					rid = d53;
					break;
				case 87:
					var a58 = op.a;
					var d54 = op.dst;
					rid = d54;
					break;
				case 88:
					var a59 = op.a;
					var d55 = op.dst;
					rid = d55;
					break;
				case 89:
					var a60 = op.a;
					var d56 = op.dst;
					rid = d56;
					break;
				case 90:
					var rl4 = op.a;
					var d57 = op.dst;
					var _g5 = 0;
					while(_g5 < rl4.length) {
						var r14 = rl4[_g5];
						++_g5;
					}
					rid = d57;
					break;
				case 91:
					var d58 = op.dst;
					rid = d58;
					break;
				case 92:
					var a61 = op.a;
					var d59 = op.dst;
					rid = d59;
					break;
				case 93:
					var a62 = op.a;
					var d60 = op.dst;
					rid = d60;
					break;
				case 94:
					var b37 = op.a;
					var a63 = op.dst;
					break;
				case 95:
					break;
				case 96:
					var d61 = op.src;
					var r15 = op.dst;
					rid = r15;
					break;
				case 97:
					var off = op.offset;
					var r21 = op.src;
					var r16 = op.dst;
					rid = r16;
					break;
				case 98:
					break;
				}
				return { rid : rid, t : this.fun.regs[rid]};
			}
		}
		var _g6 = 0;
		var _g11 = b.prev;
		while(_g6 < _g11.length) {
			var b210 = _g11[_g6];
			++_g6;
			if(b210.start < b.start) {
				var l = this.lookupLocal(b210,name,pos);
				if(l != null) {
					return l;
				}
			}
		}
		return null;
	}
	,checkWrites: function(b) {
		var _g = b.start;
		var _g1 = b.end + 1;
		while(_g < _g1) {
			var i = _g++;
			var op = this.fun.ops[i];
			switch(op._hx_index) {
			case 0:
				var a = op.a;
				var d = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d)) {
					b.writtenRegs.h[d] = i;
				}
				break;
			case 1:
				var d1 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d1)) {
					b.writtenRegs.h[d1] = i;
				}
				break;
			case 2:
				var d2 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d2)) {
					b.writtenRegs.h[d2] = i;
				}
				break;
			case 3:
				var d3 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d3)) {
					b.writtenRegs.h[d3] = i;
				}
				break;
			case 4:
				var d4 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d4)) {
					b.writtenRegs.h[d4] = i;
				}
				break;
			case 5:
				var d5 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d5)) {
					b.writtenRegs.h[d5] = i;
				}
				break;
			case 6:
				var d6 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d6)) {
					b.writtenRegs.h[d6] = i;
				}
				break;
			case 7:
				var b1 = op.b;
				var a1 = op.a;
				var d7 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d7)) {
					b.writtenRegs.h[d7] = i;
				}
				break;
			case 8:
				var b2 = op.b;
				var a2 = op.a;
				var d8 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d8)) {
					b.writtenRegs.h[d8] = i;
				}
				break;
			case 9:
				var b3 = op.b;
				var a3 = op.a;
				var d9 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d9)) {
					b.writtenRegs.h[d9] = i;
				}
				break;
			case 10:
				var b4 = op.b;
				var a4 = op.a;
				var d10 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d10)) {
					b.writtenRegs.h[d10] = i;
				}
				break;
			case 11:
				var b5 = op.b;
				var a5 = op.a;
				var d11 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d11)) {
					b.writtenRegs.h[d11] = i;
				}
				break;
			case 12:
				var b6 = op.b;
				var a6 = op.a;
				var d12 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d12)) {
					b.writtenRegs.h[d12] = i;
				}
				break;
			case 13:
				var b7 = op.b;
				var a7 = op.a;
				var d13 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d13)) {
					b.writtenRegs.h[d13] = i;
				}
				break;
			case 14:
				var b8 = op.b;
				var a8 = op.a;
				var d14 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d14)) {
					b.writtenRegs.h[d14] = i;
				}
				break;
			case 15:
				var b9 = op.b;
				var a9 = op.a;
				var d15 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d15)) {
					b.writtenRegs.h[d15] = i;
				}
				break;
			case 16:
				var b10 = op.b;
				var a10 = op.a;
				var d16 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d16)) {
					b.writtenRegs.h[d16] = i;
				}
				break;
			case 17:
				var b11 = op.b;
				var a11 = op.a;
				var d17 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d17)) {
					b.writtenRegs.h[d17] = i;
				}
				break;
			case 18:
				var b12 = op.b;
				var a12 = op.a;
				var d18 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d18)) {
					b.writtenRegs.h[d18] = i;
				}
				break;
			case 19:
				var b13 = op.b;
				var a13 = op.a;
				var d19 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d19)) {
					b.writtenRegs.h[d19] = i;
				}
				break;
			case 20:
				var a14 = op.a;
				var d20 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d20)) {
					b.writtenRegs.h[d20] = i;
				}
				break;
			case 21:
				var a15 = op.a;
				var d21 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d21)) {
					b.writtenRegs.h[d21] = i;
				}
				break;
			case 22:
				var a16 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(a16)) {
					b.writtenRegs.h[a16] = i;
				}
				break;
			case 23:
				var a17 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(a17)) {
					b.writtenRegs.h[a17] = i;
				}
				break;
			case 24:
				var d22 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d22)) {
					b.writtenRegs.h[d22] = i;
				}
				break;
			case 25:
				var a18 = op.a;
				var d23 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d23)) {
					b.writtenRegs.h[d23] = i;
				}
				break;
			case 26:
				var b14 = op.b;
				var a19 = op.a;
				var d24 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d24)) {
					b.writtenRegs.h[d24] = i;
				}
				break;
			case 27:
				var c = op.c;
				var b15 = op.b;
				var a20 = op.a;
				var d25 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d25)) {
					b.writtenRegs.h[d25] = i;
				}
				break;
			case 28:
				var k = op.d;
				var c1 = op.c;
				var b16 = op.b;
				var a21 = op.a;
				var d26 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d26)) {
					b.writtenRegs.h[d26] = i;
				}
				break;
			case 29:
				var rl = op.args;
				var d27 = op.dst;
				var _g2 = 0;
				while(_g2 < rl.length) {
					var r = rl[_g2];
					++_g2;
				}
				if(!b.writtenRegs.h.hasOwnProperty(d27)) {
					b.writtenRegs.h[d27] = i;
				}
				break;
			case 30:
				var rl1 = op.args;
				var d28 = op.dst;
				var _g3 = 0;
				while(_g3 < rl1.length) {
					var r1 = rl1[_g3];
					++_g3;
				}
				if(!b.writtenRegs.h.hasOwnProperty(d28)) {
					b.writtenRegs.h[d28] = i;
				}
				break;
			case 31:
				var rl2 = op.args;
				var d29 = op.dst;
				var _g4 = 0;
				while(_g4 < rl2.length) {
					var r2 = rl2[_g4];
					++_g4;
				}
				if(!b.writtenRegs.h.hasOwnProperty(d29)) {
					b.writtenRegs.h[d29] = i;
				}
				break;
			case 32:
				var rl3 = op.args;
				var f = op.obj;
				var d30 = op.dst;
				var _g5 = 0;
				while(_g5 < rl3.length) {
					var r3 = rl3[_g5];
					++_g5;
				}
				if(!b.writtenRegs.h.hasOwnProperty(d30)) {
					b.writtenRegs.h[d30] = i;
				}
				break;
			case 33:
				var d31 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d31)) {
					b.writtenRegs.h[d31] = i;
				}
				break;
			case 34:
				var a22 = op.a;
				var d32 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d32)) {
					b.writtenRegs.h[d32] = i;
				}
				break;
			case 35:
				var a23 = op.a;
				var d33 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d33)) {
					b.writtenRegs.h[d33] = i;
				}
				break;
			case 36:
				var d34 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d34)) {
					b.writtenRegs.h[d34] = i;
				}
				break;
			case 37:
				var a24 = op.a;
				break;
			case 38:
				var a25 = op.a;
				var d35 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d35)) {
					b.writtenRegs.h[d35] = i;
				}
				break;
			case 39:
				var b17 = op.a;
				var a26 = op.dst;
				break;
			case 40:
				var d36 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d36)) {
					b.writtenRegs.h[d36] = i;
				}
				break;
			case 41:
				var a27 = op.a;
				break;
			case 42:
				var a28 = op.a;
				var d37 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d37)) {
					b.writtenRegs.h[d37] = i;
				}
				break;
			case 43:
				var b18 = op.a;
				var a29 = op.dst;
				break;
			case 44:
				var r4 = op.dst;
				break;
			case 45:
				var r5 = op.dst;
				break;
			case 46:
				var r6 = op.dst;
				break;
			case 47:
				var r7 = op.dst;
				break;
			case 48:
				var b19 = op.a;
				var a30 = op.dst;
				break;
			case 49:
				var b20 = op.a;
				var a31 = op.dst;
				break;
			case 50:
				var b21 = op.a;
				var a32 = op.dst;
				break;
			case 51:
				var b22 = op.a;
				var a33 = op.dst;
				break;
			case 52:
				var b23 = op.a;
				var a34 = op.dst;
				break;
			case 53:
				var b24 = op.a;
				var a35 = op.dst;
				break;
			case 54:
				var b25 = op.a;
				var a36 = op.dst;
				break;
			case 55:
				var b26 = op.a;
				var a37 = op.dst;
				break;
			case 56:
				var b27 = op.a;
				var a38 = op.dst;
				break;
			case 57:
				var b28 = op.a;
				var a39 = op.dst;
				break;
			case 58:case 66:
				break;
			case 59:
				var a40 = op.a;
				var d38 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d38)) {
					b.writtenRegs.h[d38] = i;
				}
				break;
			case 60:
				var a41 = op.a;
				var d39 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d39)) {
					b.writtenRegs.h[d39] = i;
				}
				break;
			case 61:
				var a42 = op.a;
				var d40 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d40)) {
					b.writtenRegs.h[d40] = i;
				}
				break;
			case 62:
				var a43 = op.a;
				var d41 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d41)) {
					b.writtenRegs.h[d41] = i;
				}
				break;
			case 63:
				var a44 = op.a;
				var d42 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d42)) {
					b.writtenRegs.h[d42] = i;
				}
				break;
			case 64:
				var a45 = op.a;
				var d43 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d43)) {
					b.writtenRegs.h[d43] = i;
				}
				break;
			case 65:
				var a46 = op.a;
				var d44 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d44)) {
					b.writtenRegs.h[d44] = i;
				}
				break;
			case 67:
				var r8 = op.dst;
				break;
			case 68:
				var r9 = op.dst;
				break;
			case 69:
				var r10 = op.dst;
				break;
			case 70:
				var r11 = op.dst;
				break;
			case 71:
				var r12 = op.dst;
				break;
			case 72:
				var r13 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(r13)) {
					b.writtenRegs.h[r13] = i;
				}
				break;
			case 73:
				break;
			case 74:
				var b29 = op.b;
				var a47 = op.a;
				var d45 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d45)) {
					b.writtenRegs.h[d45] = i;
				}
				break;
			case 75:
				var b30 = op.b;
				var a48 = op.a;
				var d46 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d46)) {
					b.writtenRegs.h[d46] = i;
				}
				break;
			case 76:
				var b31 = op.b;
				var a49 = op.a;
				var d47 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d47)) {
					b.writtenRegs.h[d47] = i;
				}
				break;
			case 77:
				var b32 = op.b;
				var a50 = op.a;
				var d48 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d48)) {
					b.writtenRegs.h[d48] = i;
				}
				break;
			case 78:
				var c2 = op.b;
				var b33 = op.a;
				var a51 = op.dst;
				break;
			case 79:
				var c3 = op.b;
				var b34 = op.a;
				var a52 = op.dst;
				break;
			case 80:
				var c4 = op.b;
				var b35 = op.a;
				var a53 = op.dst;
				break;
			case 81:
				var c5 = op.b;
				var b36 = op.a;
				var a54 = op.dst;
				break;
			case 82:
				var d49 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d49)) {
					b.writtenRegs.h[d49] = i;
				}
				break;
			case 83:
				var a55 = op.a;
				var d50 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d50)) {
					b.writtenRegs.h[d50] = i;
				}
				break;
			case 84:
				var d51 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d51)) {
					b.writtenRegs.h[d51] = i;
				}
				break;
			case 85:
				var a56 = op.a;
				var d52 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d52)) {
					b.writtenRegs.h[d52] = i;
				}
				break;
			case 86:
				var a57 = op.a;
				var d53 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d53)) {
					b.writtenRegs.h[d53] = i;
				}
				break;
			case 87:
				var a58 = op.a;
				var d54 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d54)) {
					b.writtenRegs.h[d54] = i;
				}
				break;
			case 88:
				var a59 = op.a;
				var d55 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d55)) {
					b.writtenRegs.h[d55] = i;
				}
				break;
			case 89:
				var a60 = op.a;
				var d56 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d56)) {
					b.writtenRegs.h[d56] = i;
				}
				break;
			case 90:
				var rl4 = op.a;
				var d57 = op.dst;
				var _g6 = 0;
				while(_g6 < rl4.length) {
					var r14 = rl4[_g6];
					++_g6;
				}
				if(!b.writtenRegs.h.hasOwnProperty(d57)) {
					b.writtenRegs.h[d57] = i;
				}
				break;
			case 91:
				var d58 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d58)) {
					b.writtenRegs.h[d58] = i;
				}
				break;
			case 92:
				var a61 = op.a;
				var d59 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d59)) {
					b.writtenRegs.h[d59] = i;
				}
				break;
			case 93:
				var a62 = op.a;
				var d60 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(d60)) {
					b.writtenRegs.h[d60] = i;
				}
				break;
			case 94:
				var b37 = op.a;
				var a63 = op.dst;
				break;
			case 95:
				break;
			case 96:
				var d61 = op.src;
				var r15 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(r15)) {
					b.writtenRegs.h[r15] = i;
				}
				break;
			case 97:
				var off = op.offset;
				var r21 = op.src;
				var r16 = op.dst;
				if(!b.writtenRegs.h.hasOwnProperty(r16)) {
					b.writtenRegs.h[r16] = i;
				}
				break;
			case 98:
				break;
			}
			var vl = this.assigns.h[i];
			if(vl == null) {
				continue;
			}
			var _g7 = 0;
			while(_g7 < vl.length) {
				var v = vl[_g7];
				++_g7;
				var _this = b.writtenVars;
				var wl = __map_reserved[v] != null ? _this.getReserved(v) : _this.h[v];
				if(wl == null) {
					wl = [];
					var _this1 = b.writtenVars;
					if(__map_reserved[v] != null) {
						_this1.setReserved(v,wl);
					} else {
						_this1.h[v] = wl;
					}
				}
				wl.push(i);
			}
		}
	}
	,makeBlock: function(pos) {
		var _gthis = this;
		var b = this.blockPos.h[pos];
		if(b != null) {
			return b;
		}
		var b1 = new hld_CodeBlock(pos);
		this.blockPos.h[pos] = b1;
		var i = pos;
		while(true) {
			if(i > pos && this.allBlocks.h.hasOwnProperty(i)) {
				b1.end = i - 1;
				var b2 = _gthis.makeBlock(i + 1 + -1);
				b2.prev.push(b1);
				b1.next = [b2];
				break;
			}
			var _g = this.control(i);
			switch(_g._hx_index) {
			case 0:
				++i;
				continue;
			case 1:
				var d = _g.d;
				b1.end = i;
				var b21 = _gthis.makeBlock(i + 1);
				b21.prev.push(b1);
				var b22 = _gthis.makeBlock(i + 1 + d);
				b22.prev.push(b1);
				b1.next = [b21,b22];
				break;
			case 2:
				var d1 = _g.d;
				b1.end = i;
				var b23 = _gthis.makeBlock(i + 1 + d1);
				b23.prev.push(b1);
				b1.next = [b23];
				break;
			case 3:
				var d2 = _g.d;
				b1.end = i;
				var b24 = _gthis.makeBlock(i + 1);
				b24.prev.push(b1);
				var b25 = _gthis.makeBlock(i + 1 + d2);
				b25.prev.push(b1);
				b1.next = [b24,b25];
				break;
			case 4:
				var pl = _g.arr;
				b1.end = i;
				var b3 = b1.next;
				var b26 = _gthis.makeBlock(i + 1);
				b26.prev.push(b1);
				b3.push(b26);
				var _g1 = 0;
				while(_g1 < pl.length) {
					var p = pl[_g1];
					++_g1;
					var b4 = b1.next;
					var b27 = _gthis.makeBlock(i + 1 + p);
					b27.prev.push(b1);
					b4.push(b27);
				}
				break;
			case 5:case 6:
				b1.end = i;
				break;
			case 7:
				++i;
				b1.loop = true;
				continue;
			}
			break;
		}
		return b1;
	}
	,control: function(i) {
		var _g = this.fun.ops[i];
		switch(_g._hx_index) {
		case 44:
			var d = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d);
		case 45:
			var d1 = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d1);
		case 46:
			var d2 = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d2);
		case 47:
			var d3 = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d3);
		case 48:
			var d4 = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d4);
		case 49:
			var d5 = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d5);
		case 50:
			var d6 = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d6);
		case 51:
			var d7 = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d7);
		case 52:
			var d8 = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d8);
		case 53:
			var d9 = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d9);
		case 54:
			var d10 = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d10);
		case 55:
			var d11 = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d11);
		case 56:
			var d12 = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d12);
		case 57:
			var d13 = _g.offset;
			return hld__$CodeGraph_Control.CJCond(d13);
		case 58:
			var d14 = _g.offset;
			return hld__$CodeGraph_Control.CJAlways(d14);
		case 66:
			return hld__$CodeGraph_Control.CLabel;
		case 67:
			return hld__$CodeGraph_Control.CRet;
		case 68:case 69:
			return hld__$CodeGraph_Control.CThrow;
		case 70:
			var cases = _g.cases;
			return hld__$CodeGraph_Control.CSwitch(cases);
		case 72:
			var d15 = _g.end;
			return hld__$CodeGraph_Control.CTry(d15);
		default:
			return hld__$CodeGraph_Control.CNo;
		}
	}
	,opFx: function(op,read,write) {
		switch(op._hx_index) {
		case 0:
			var a = op.a;
			var d = op.dst;
			read(a);
			write(d);
			break;
		case 1:
			var d1 = op.dst;
			write(d1);
			break;
		case 2:
			var d2 = op.dst;
			write(d2);
			break;
		case 3:
			var d3 = op.dst;
			write(d3);
			break;
		case 4:
			var d4 = op.dst;
			write(d4);
			break;
		case 5:
			var d5 = op.dst;
			write(d5);
			break;
		case 6:
			var d6 = op.dst;
			write(d6);
			break;
		case 7:
			var b = op.b;
			var a1 = op.a;
			var d7 = op.dst;
			read(a1);
			read(b);
			write(d7);
			break;
		case 8:
			var b1 = op.b;
			var a2 = op.a;
			var d8 = op.dst;
			read(a2);
			read(b1);
			write(d8);
			break;
		case 9:
			var b2 = op.b;
			var a3 = op.a;
			var d9 = op.dst;
			read(a3);
			read(b2);
			write(d9);
			break;
		case 10:
			var b3 = op.b;
			var a4 = op.a;
			var d10 = op.dst;
			read(a4);
			read(b3);
			write(d10);
			break;
		case 11:
			var b4 = op.b;
			var a5 = op.a;
			var d11 = op.dst;
			read(a5);
			read(b4);
			write(d11);
			break;
		case 12:
			var b5 = op.b;
			var a6 = op.a;
			var d12 = op.dst;
			read(a6);
			read(b5);
			write(d12);
			break;
		case 13:
			var b6 = op.b;
			var a7 = op.a;
			var d13 = op.dst;
			read(a7);
			read(b6);
			write(d13);
			break;
		case 14:
			var b7 = op.b;
			var a8 = op.a;
			var d14 = op.dst;
			read(a8);
			read(b7);
			write(d14);
			break;
		case 15:
			var b8 = op.b;
			var a9 = op.a;
			var d15 = op.dst;
			read(a9);
			read(b8);
			write(d15);
			break;
		case 16:
			var b9 = op.b;
			var a10 = op.a;
			var d16 = op.dst;
			read(a10);
			read(b9);
			write(d16);
			break;
		case 17:
			var b10 = op.b;
			var a11 = op.a;
			var d17 = op.dst;
			read(a11);
			read(b10);
			write(d17);
			break;
		case 18:
			var b11 = op.b;
			var a12 = op.a;
			var d18 = op.dst;
			read(a12);
			read(b11);
			write(d18);
			break;
		case 19:
			var b12 = op.b;
			var a13 = op.a;
			var d19 = op.dst;
			read(a13);
			read(b12);
			write(d19);
			break;
		case 20:
			var a14 = op.a;
			var d20 = op.dst;
			read(a14);
			write(d20);
			break;
		case 21:
			var a15 = op.a;
			var d21 = op.dst;
			read(a15);
			write(d21);
			break;
		case 22:
			var a16 = op.dst;
			read(a16);
			write(a16);
			break;
		case 23:
			var a17 = op.dst;
			read(a17);
			write(a17);
			break;
		case 24:
			var d22 = op.dst;
			write(d22);
			break;
		case 25:
			var a18 = op.a;
			var d23 = op.dst;
			read(a18);
			write(d23);
			break;
		case 26:
			var b13 = op.b;
			var a19 = op.a;
			var d24 = op.dst;
			read(a19);
			read(b13);
			write(d24);
			break;
		case 27:
			var c = op.c;
			var b14 = op.b;
			var a20 = op.a;
			var d25 = op.dst;
			read(a20);
			read(b14);
			read(c);
			write(d25);
			break;
		case 28:
			var k = op.d;
			var c1 = op.c;
			var b15 = op.b;
			var a21 = op.a;
			var d26 = op.dst;
			read(a21);
			read(b15);
			read(c1);
			read(k);
			write(d26);
			break;
		case 29:
			var rl = op.args;
			var d27 = op.dst;
			var _g = 0;
			while(_g < rl.length) {
				var r = rl[_g];
				++_g;
				read(r);
			}
			write(d27);
			break;
		case 30:
			var rl1 = op.args;
			var d28 = op.dst;
			var _g1 = 0;
			while(_g1 < rl1.length) {
				var r1 = rl1[_g1];
				++_g1;
				read(r1);
			}
			write(d28);
			break;
		case 31:
			var rl2 = op.args;
			var d29 = op.dst;
			var _g2 = 0;
			while(_g2 < rl2.length) {
				var r2 = rl2[_g2];
				++_g2;
				read(r2);
			}
			write(d29);
			break;
		case 32:
			var rl3 = op.args;
			var f = op.obj;
			var d30 = op.dst;
			read(f);
			var _g3 = 0;
			while(_g3 < rl3.length) {
				var r3 = rl3[_g3];
				++_g3;
				read(r3);
			}
			write(d30);
			break;
		case 33:
			var d31 = op.dst;
			write(d31);
			break;
		case 34:
			var a22 = op.a;
			var d32 = op.dst;
			read(a22);
			write(d32);
			break;
		case 35:
			var a23 = op.a;
			var d33 = op.dst;
			read(a23);
			write(d33);
			break;
		case 36:
			var d34 = op.dst;
			write(d34);
			break;
		case 37:
			var a24 = op.a;
			read(a24);
			break;
		case 38:
			var a25 = op.a;
			var d35 = op.dst;
			read(a25);
			write(d35);
			break;
		case 39:
			var b16 = op.a;
			var a26 = op.dst;
			read(a26);
			read(b16);
			break;
		case 40:
			var d36 = op.dst;
			write(d36);
			break;
		case 41:
			var a27 = op.a;
			read(a27);
			break;
		case 42:
			var a28 = op.a;
			var d37 = op.dst;
			read(a28);
			write(d37);
			break;
		case 43:
			var b17 = op.a;
			var a29 = op.dst;
			read(a29);
			read(b17);
			break;
		case 44:
			var r4 = op.dst;
			read(r4);
			break;
		case 45:
			var r5 = op.dst;
			read(r5);
			break;
		case 46:
			var r6 = op.dst;
			read(r6);
			break;
		case 47:
			var r7 = op.dst;
			read(r7);
			break;
		case 48:
			var b18 = op.a;
			var a30 = op.dst;
			read(a30);
			read(b18);
			break;
		case 49:
			var b19 = op.a;
			var a31 = op.dst;
			read(a31);
			read(b19);
			break;
		case 50:
			var b20 = op.a;
			var a32 = op.dst;
			read(a32);
			read(b20);
			break;
		case 51:
			var b21 = op.a;
			var a33 = op.dst;
			read(a33);
			read(b21);
			break;
		case 52:
			var b22 = op.a;
			var a34 = op.dst;
			read(a34);
			read(b22);
			break;
		case 53:
			var b23 = op.a;
			var a35 = op.dst;
			read(a35);
			read(b23);
			break;
		case 54:
			var b24 = op.a;
			var a36 = op.dst;
			read(a36);
			read(b24);
			break;
		case 55:
			var b25 = op.a;
			var a37 = op.dst;
			read(a37);
			read(b25);
			break;
		case 56:
			var b26 = op.a;
			var a38 = op.dst;
			read(a38);
			read(b26);
			break;
		case 57:
			var b27 = op.a;
			var a39 = op.dst;
			read(a39);
			read(b27);
			break;
		case 58:case 66:
			break;
		case 59:
			var a40 = op.a;
			var d38 = op.dst;
			read(a40);
			write(d38);
			break;
		case 60:
			var a41 = op.a;
			var d39 = op.dst;
			read(a41);
			write(d39);
			break;
		case 61:
			var a42 = op.a;
			var d40 = op.dst;
			read(a42);
			write(d40);
			break;
		case 62:
			var a43 = op.a;
			var d41 = op.dst;
			read(a43);
			write(d41);
			break;
		case 63:
			var a44 = op.a;
			var d42 = op.dst;
			read(a44);
			write(d42);
			break;
		case 64:
			var a45 = op.a;
			var d43 = op.dst;
			read(a45);
			write(d43);
			break;
		case 65:
			var a46 = op.a;
			var d44 = op.dst;
			read(a46);
			write(d44);
			break;
		case 67:
			var r8 = op.dst;
			read(r8);
			break;
		case 68:
			var r9 = op.dst;
			read(r9);
			break;
		case 69:
			var r10 = op.dst;
			read(r10);
			break;
		case 70:
			var r11 = op.dst;
			read(r11);
			break;
		case 71:
			var r12 = op.dst;
			read(r12);
			break;
		case 72:
			var r13 = op.dst;
			write(r13);
			break;
		case 73:
			break;
		case 74:
			var b28 = op.b;
			var a47 = op.a;
			var d45 = op.dst;
			read(a47);
			read(b28);
			write(d45);
			break;
		case 75:
			var b29 = op.b;
			var a48 = op.a;
			var d46 = op.dst;
			read(a48);
			read(b29);
			write(d46);
			break;
		case 76:
			var b30 = op.b;
			var a49 = op.a;
			var d47 = op.dst;
			read(a49);
			read(b30);
			write(d47);
			break;
		case 77:
			var b31 = op.b;
			var a50 = op.a;
			var d48 = op.dst;
			read(a50);
			read(b31);
			write(d48);
			break;
		case 78:
			var c2 = op.b;
			var b32 = op.a;
			var a51 = op.dst;
			read(a51);
			read(b32);
			read(c2);
			break;
		case 79:
			var c3 = op.b;
			var b33 = op.a;
			var a52 = op.dst;
			read(a52);
			read(b33);
			read(c3);
			break;
		case 80:
			var c4 = op.b;
			var b34 = op.a;
			var a53 = op.dst;
			read(a53);
			read(b34);
			read(c4);
			break;
		case 81:
			var c5 = op.b;
			var b35 = op.a;
			var a54 = op.dst;
			read(a54);
			read(b35);
			read(c5);
			break;
		case 82:
			var d49 = op.dst;
			write(d49);
			break;
		case 83:
			var a55 = op.a;
			var d50 = op.dst;
			read(a55);
			write(d50);
			break;
		case 84:
			var d51 = op.dst;
			write(d51);
			break;
		case 85:
			var a56 = op.a;
			var d52 = op.dst;
			read(a56);
			write(d52);
			break;
		case 86:
			var a57 = op.a;
			var d53 = op.dst;
			read(a57);
			write(d53);
			break;
		case 87:
			var a58 = op.a;
			var d54 = op.dst;
			read(a58);
			write(d54);
			break;
		case 88:
			var a59 = op.a;
			var d55 = op.dst;
			read(a59);
			write(d55);
			break;
		case 89:
			var a60 = op.a;
			var d56 = op.dst;
			read(a60);
			write(d56);
			break;
		case 90:
			var rl4 = op.a;
			var d57 = op.dst;
			var _g4 = 0;
			while(_g4 < rl4.length) {
				var r14 = rl4[_g4];
				++_g4;
				read(r14);
			}
			write(d57);
			break;
		case 91:
			var d58 = op.dst;
			write(d58);
			break;
		case 92:
			var a61 = op.a;
			var d59 = op.dst;
			read(a61);
			write(d59);
			break;
		case 93:
			var a62 = op.a;
			var d60 = op.dst;
			read(a62);
			write(d60);
			break;
		case 94:
			var b36 = op.a;
			var a63 = op.dst;
			read(a63);
			read(b36);
			break;
		case 95:
			break;
		case 96:
			var d61 = op.src;
			var r15 = op.dst;
			read(d61);
			write(r15);
			break;
		case 97:
			var off = op.offset;
			var r21 = op.src;
			var r16 = op.dst;
			read(r21);
			read(off);
			write(r16);
			break;
		case 98:
			break;
		}
	}
	,__class__: hld_CodeGraph
};
var hld_StepMode = $hxEnums["hld.StepMode"] = { __ename__ : true, __constructs__ : ["Out","Next","Into"]
	,Out: {_hx_index:0,__enum__:"hld.StepMode",toString:$estr}
	,Next: {_hx_index:1,__enum__:"hld.StepMode",toString:$estr}
	,Into: {_hx_index:2,__enum__:"hld.StepMode",toString:$estr}
};
var hld_Debugger = function() {
	this.mainThread = 0;
	this.nextStep = -1;
	this.breakPoints = [];
	this.watches = [];
};
hld_Debugger.__name__ = true;
hld_Debugger.prototype = {
	set_stoppedThread: function(v) {
		return this.stoppedThread = this.currentThread = v;
	}
	,get_is64: function() {
		return this.jit.is64;
	}
	,loadModule: function(content) {
		this.module = new hld_Module();
		this.module.load(content);
	}
	,connect: function(host,port,retries) {
		if(retries == null) {
			retries = 10;
		}
		this.sock = new sys_net_Socket();
		var connected = false;
		var _g = 0;
		var _g1 = retries;
		while(_g < _g1) {
			var i = _g++;
			try {
				this.sock.connect(new sys_net_Host(host),port);
				connected = true;
				break;
			} catch( e ) {
				var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
				Sys.sleep(0.1);
			}
		}
		if(!connected) {
			this.sock.close();
			return false;
		}
		this.jit = new hld_JitInfo();
		if(!this.jit.read(this.sock.input,this.module)) {
			this.sock.close();
			return false;
		}
		this.module.init(this.jit.align);
		return true;
	}
	,init: function(api) {
		this.api = api;
		this["eval"] = new hld_Eval(this.module,api,this.jit);
		if(!api.start()) {
			return false;
		}
		this.wait();
		return true;
	}
	,run: function() {
		if(this.sock != null) {
			this.sock.close();
			this.sock = null;
		}
		if(this.stoppedThread != null) {
			this.resume();
		}
		return this.wait();
	}
	,getThreads: function() {
		var _g = [];
		var t = this.threads.iterator();
		while(t.hasNext()) {
			var t1 = t.next();
			_g.push(t1.id);
		}
		var tl = _g;
		tl.sort(Reflect.compare);
		return tl;
	}
	,setCurrentThread: function(tid) {
		this.currentThread = tid;
		this.prepareStack();
	}
	,pause: function() {
		if(!this.api.breakpoint()) {
			throw new js__$Boot_HaxeError("Failed to break process");
		}
		var r = this.wait();
		var found = false;
		var t = this.threads.iterator();
		while(t.hasNext()) {
			var t1 = t.next();
			if(t1.id == this.stoppedThread) {
				found = true;
				break;
			}
		}
		if(!found) {
			this.currentThread = this.mainThread;
			this.prepareStack();
		}
		return r;
	}
	,singleStep: function(tid,set) {
		if(set == null) {
			set = true;
		}
		var r = hld__$Pointer_Pointer_$Impl_$.toInt(this.getReg(tid,3));
		if(set) {
			r = r | 256;
		} else {
			r = r & -257;
		}
		this.setReg(tid,3,hld__$Pointer_Pointer_$Impl_$.make(r,0));
	}
	,getException: function() {
		var t = this.threads.h[this.currentThread];
		if(t == null) {
			return null;
		}
		var exc = t.exception;
		if(exc == null || exc.low == 0 && exc.high == 0) {
			return null;
		}
		return this["eval"].readVal(exc,format_hl_HLType.HDyn);
	}
	,getCurrentVars: function(args) {
		var s = this.currentStack[this.currentStackFrame];
		var g = this.module.getGraph(s.fidx);
		if(args) {
			return g.getArgs();
		} else {
			return g.getLocals(s.fpos);
		}
	}
	,getCurrentClass: function() {
		var s = this.currentStack[this.currentStackFrame];
		var ctx = this.module.getMethodContext(s.fidx);
		if(ctx == null) {
			return null;
		}
		var name = ctx.obj.name;
		return name.split("$").join("");
	}
	,getClassStatics: function(cl) {
		var v = this.getValue(cl);
		if(v == null) {
			throw new js__$Boot_HaxeError("No such class " + cl);
		}
		var fields = this["eval"].getFields(v);
		HxOverrides.remove(fields,"__name__");
		HxOverrides.remove(fields,"__type__");
		HxOverrides.remove(fields,"__meta__");
		HxOverrides.remove(fields,"__implementedBy__");
		HxOverrides.remove(fields,"__constructor__");
		return fields;
	}
	,wait: function(onStep) {
		if(onStep == null) {
			onStep = false;
		}
		var cmd = null;
		this.watchBreak = null;
		_hx_loop1: while(true) {
			cmd = this.api.wait(this.customTimeout == null ? 1000 : Math.ceil(this.customTimeout * 1000));
			if(cmd.r == 1 && this.nextStep >= 0) {
				cmd.r = 2;
				this.singleStep(cmd.tid,false);
			}
			var tid = cmd.tid;
			switch(cmd.r) {
			case -1:case 4:
				if(this.customTimeout != null) {
					return cmd.r;
				}
				break;
			case 0:
				this.processExit = true;
				break _hx_loop1;
			case 1:
				var eip = this.getReg(tid,2);
				if(this.stepBreakData != null) {
					var ptr = this.stepBreakData.ptr;
					this.api.writeByte(ptr,0,this.stepBreakData.old);
					this.api.flush(ptr,1);
					this.stepBreakData = null;
					var b = ptr;
					var high = eip.high - b.high | 0;
					var low = eip.low - b.low | 0;
					if(haxe__$Int32_Int32_$Impl_$.ucompare(eip.low,b.low) < 0) {
						var ret = high--;
						high = high | 0;
					}
					var x_high = high;
					var x_low = low;
					if(x_high != x_low >> 31) {
						throw new js__$Boot_HaxeError("Overflow");
					}
					if(x_low == 1) {
						var b_high = -1;
						var b_low = -1;
						var high1 = eip.high + b_high | 0;
						var low1 = eip.low + b_low | 0;
						if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,eip.low) < 0) {
							var ret1 = high1++;
							high1 = high1 | 0;
						}
						var this1 = new haxe__$Int64__$_$_$Int64(high1,low1);
						var this2 = this1;
						this.setReg(tid,2,this2);
						this.set_stoppedThread(tid);
						if(!onStep) {
							throw new js__$Boot_HaxeError("?");
						}
						return 2;
					}
				}
				var b1 = this.jit.codeStart;
				var high2 = eip.high - b1.high | 0;
				var low2 = eip.low - b1.low | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(eip.low,b1.low) < 0) {
					var ret2 = high2--;
					high2 = high2 | 0;
				}
				var x_high1 = high2;
				var x_low1 = low2;
				if(x_high1 != x_low1 >> 31) {
					throw new js__$Boot_HaxeError("Overflow");
				}
				var codePos = x_low1 - 1;
				var _g = 0;
				var _g1 = this.breakPoints;
				while(_g < _g1.length) {
					var b2 = _g1[_g];
					++_g;
					if(b2.codePos == codePos) {
						this.setAsm(codePos,b2.oldByte);
						var b_high1 = -1;
						var b_low1 = -1;
						var high3 = eip.high + b_high1 | 0;
						var low3 = eip.low + b_low1 | 0;
						if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,eip.low) < 0) {
							var ret3 = high3++;
							high3 = high3 | 0;
						}
						var this3 = new haxe__$Int64__$_$_$Int64(high3,low3);
						var this4 = this3;
						this.setReg(tid,2,this4);
						this.singleStep(tid);
						this.nextStep = codePos;
						break;
					}
				}
				break _hx_loop1;
			case 2:
				if(this.nextStep >= 0) {
					this.setAsm(this.nextStep,204);
					this.nextStep = -1;
				} else if(this.watches.length > 0) {
					var dr6 = this.api.readRegister(tid,8);
					var watchBits = hld__$Pointer_Pointer_$Impl_$.toInt(dr6) & 7;
					if(watchBits != 0) {
						var _g2 = 0;
						var _g11 = this.watches;
						while(_g2 < _g11.length) {
							var w = _g11[_g2];
							++_g2;
							var _g3 = 0;
							var _g12 = w.regs;
							while(_g3 < _g12.length) {
								var r = _g12[_g3];
								++_g3;
								if((watchBits & 1 << hld_Debugger.HW_REGS.indexOf(r.r)) != 0) {
									this.watchBreak = w.addr;
									break;
								}
							}
						}
						this.api.writeRegister(tid,8,hld__$Pointer_Pointer_$Impl_$.make(0,0));
						if(this.watchBreak != null) {
							cmd.r = 256;
							break _hx_loop1;
						}
					}
				}
				this.set_stoppedThread(tid);
				if(onStep) {
					return 2;
				}
				this.resume();
				break;
			case 3:case 256:
				break _hx_loop1;
			}
		}
		this.set_stoppedThread(cmd.tid);
		if(this.jit.oldThreadInfos != null) {
			this.mainThread = this.jit.oldThreadInfos.id;
		} else if(this.mainThread == 0) {
			this.mainThread = -1;
		} else if(this.mainThread == -1) {
			this.mainThread = this.stoppedThread;
		}
		this.readThreads();
		this.prepareStack();
		return cmd.r;
	}
	,readThreads: function() {
		var old = this.jit.oldThreadInfos;
		this.threads = new haxe_ds_IntMap();
		if(old != null) {
			var this1 = this.threads;
			var key = old.id;
			var value = { id : old.id, stackTop : old.stackTop, exception : this["eval"].readPointer(old.debugExc)};
			this1.h[key] = value;
			return;
		}
		var count = this["eval"].readI32(this.jit.threads);
		var tinfos = this["eval"];
		var this2 = this.jit.threads;
		var b_high = 0;
		var b_low = 8;
		var high = this2.high + b_high | 0;
		var low = this2.low + b_low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this3 = new haxe__$Int64__$_$_$Int64(high,low);
		var this4 = this3;
		var tinfos1 = tinfos.readPointer(this4);
		var flagsPos = this.jit.align.ptrSize * 6 + 8;
		var excPos = this.jit.align.ptrSize * 5 + 8;
		var _g = 0;
		var _g1 = count;
		while(_g < _g1) {
			var i = _g++;
			var tinf = this["eval"];
			var pos = this.jit.align.ptrSize * i;
			var b_high1 = pos >> 31;
			var b_low1 = pos;
			var high1 = tinfos1.high + b_high1 | 0;
			var low1 = tinfos1.low + b_low1 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,tinfos1.low) < 0) {
				var ret1 = high1++;
				high1 = high1 | 0;
			}
			var this5 = new haxe__$Int64__$_$_$Int64(high1,low1);
			var this6 = this5;
			var tinf1 = tinf.readPointer(this6);
			var tid = this["eval"].readI32(tinf1);
			var flags = this["eval"];
			var b_high2 = flagsPos >> 31;
			var b_low2 = flagsPos;
			var high2 = tinf1.high + b_high2 | 0;
			var low2 = tinf1.low + b_low2 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,tinf1.low) < 0) {
				var ret2 = high2++;
				high2 = high2 | 0;
			}
			var this7 = new haxe__$Int64__$_$_$Int64(high2,low2);
			var this8 = this7;
			var flags1 = flags.readI32(this8);
			if((flags1 & 16) != 0) {
				continue;
			}
			if(tid == 0) {
				tid = this.mainThread;
			} else if(this.mainThread <= 0) {
				this.mainThread = tid;
			}
			var t = this["eval"];
			var b_high3 = 0;
			var b_low3 = 8;
			var high3 = tinf1.high + b_high3 | 0;
			var low3 = tinf1.low + b_low3 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,tinf1.low) < 0) {
				var ret3 = high3++;
				high3 = high3 | 0;
			}
			var this9 = new haxe__$Int64__$_$_$Int64(high3,low3);
			var this10 = this9;
			var t1 = t.readPointer(this10);
			var t2;
			if((flags1 & 4) == 0) {
				t2 = null;
			} else {
				var b_high4 = excPos >> 31;
				var b_low4 = excPos;
				var high4 = tinf1.high + b_high4 | 0;
				var low4 = tinf1.low + b_low4 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,tinf1.low) < 0) {
					var ret4 = high4++;
					high4 = high4 | 0;
				}
				var this11 = new haxe__$Int64__$_$_$Int64(high4,low4);
				var this12 = this11;
				t2 = this12;
			}
			var t3 = { id : tid, stackTop : t1, exception : t2};
			this.threads.h[tid] = t3;
		}
	}
	,prepareStack: function() {
		this.currentStackFrame = 0;
		this.currentStack = this.makeStack(this.currentThread);
	}
	,smartStep: function(tid,stepIntoCall) {
		var eip = this.getReg(tid,2);
		var op = this.api.readByte(eip,0);
		var mod_rm;
		switch(op) {
		case 232:
			if(!stepIntoCall) {
				var b_high = 0;
				var b_low = 5;
				var high = eip.high + b_high | 0;
				var low = eip.low + b_low | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low,eip.low) < 0) {
					var ret = high++;
					high = high | 0;
				}
				var this1 = new haxe__$Int64__$_$_$Int64(high,low);
				var this2 = this1;
				this.stepBreak(this2);
			} else {
				this.singleStep(tid);
			}
			break;
		case 234:
			var esp = this.getReg(tid,0);
			var ptr = hld__$Buffer_Buffer_$Impl_$.getPointer(this.readMem(esp,this.jit.align.ptrSize),0,this.jit.align);
			this.stepBreak(ptr);
			break;
		case 255:
			var tmp;
			if(!stepIntoCall) {
				mod_rm = this.api.readByte(eip,1);
				tmp = (mod_rm >> 3 & 7) == 2;
			} else {
				tmp = false;
			}
			if(tmp) {
				var reg = mod_rm & 7;
				var mod = mod_rm >> 6;
				var size = 2;
				if(mod == 1) {
					++size;
				} else if(mod == 2) {
					size += 4;
				}
				if(reg == 4) {
					++size;
				}
				var b_high1 = size >> 31;
				var b_low1 = size;
				var high1 = eip.high + b_high1 | 0;
				var low1 = eip.low + b_low1 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,eip.low) < 0) {
					var ret1 = high1++;
					high1 = high1 | 0;
				}
				var this3 = new haxe__$Int64__$_$_$Int64(high1,low1);
				var this4 = this3;
				this.stepBreak(this4);
			} else {
				this.singleStep(tid);
			}
			break;
		default:
			this.singleStep(tid);
		}
	}
	,stepBreak: function(ptr) {
		var old = this.api.readByte(ptr,0);
		this.api.writeByte(ptr,0,204);
		this.api.flush(ptr,1);
		this.stepBreakData = { ptr : ptr, old : old};
	}
	,debugTrace: function(stepIn) {
		var _gthis = this;
		var tid = this.currentThread;
		var prevFun = -1;
		var prevPos = -1;
		var inC = false;
		var prevEbp = null;
		var prevStack = 0;
		var tabs = "";
		var debugSt = function() {
			var s = _gthis.currentStack[0];
			var eip = _gthis.getReg(tid,2);
			var b = _gthis.jit.codeStart;
			var high = eip.high - b.high | 0;
			var low = eip.low - b.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(eip.low,b.low) < 0) {
				var ret = high--;
				high = high | 0;
			}
			var x_high = high;
			var x_low = low;
			if(x_high != x_low >> 31) {
				throw new js__$Boot_HaxeError("Overflow");
			}
			var codePos = x_low;
			if(codePos < s.codePos || codePos > s.codePos + 1024) {
				var debugSt1;
				if(s.fidx == prevFun && s.fpos == prevPos) {
					var this1 = s.ebp;
					var b1 = _gthis.getReg(tid,1);
					var high1 = this1.high - b1.high | 0;
					var low1 = this1.low - b1.low | 0;
					if(haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b1.low) < 0) {
						var ret1 = high1--;
						high1 = high1 | 0;
					}
					var x_high1 = high1;
					var x_low1 = low1;
					if(x_high1 != x_low1 >> 31) {
						throw new js__$Boot_HaxeError("Overflow");
					}
					debugSt1 = x_low1 > 0;
				} else {
					debugSt1 = false;
				}
				if(debugSt1) {
					if(!inC) {
						inC = true;
						process.stdout.write(Std.string(tabs + "IN C CALL"));
						process.stdout.write("\n");
					}
				}
			}
			if(s.fidx == prevFun && s.fpos == prevPos) {
				var this2 = s.ebp;
				var b2 = prevEbp;
				var high2 = this2.high - b2.high | 0;
				var low2 = this2.low - b2.low | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(this2.low,b2.low) < 0) {
					var ret2 = high2--;
					high2 = high2 | 0;
				}
				var x_high2 = high2;
				var x_low2 = low2;
				if(x_high2 != x_low2 >> 31) {
					throw new js__$Boot_HaxeError("Overflow");
				}
				if(x_low2 != 0) {
					throw new js__$Boot_HaxeError("!!!EPB!!! " + hld__$Pointer_Pointer_$Impl_$.toString(s.ebp) + "!=" + hld__$Pointer_Pointer_$Impl_$.toString(prevEbp));
				}
				return;
			}
			inC = false;
			var calls = _gthis.makeStack(tid);
			var _g = [];
			var _g1 = 0;
			while(_g1 < calls.length) {
				var c = calls[_g1];
				++_g1;
				_g.push("");
			}
			tabs = _g.join("  ");
			var inf = _gthis.module.resolveSymbol(s.fidx,s.fpos);
			var file = inf.file.split("\\").join("/").split("/").pop();
			var str = tabs;
			str += StringTools.hex(_gthis.module.code.functions[s.fidx].findex) + "h @" + StringTools.hex(s.fpos);
			str += " " + file + ":" + inf.line;
			str += " " + HxOverrides.substr(Std.string(_gthis.module.code.functions[s.fidx].ops[s.fpos]),1,null);
			if(s.fidx == prevFun && calls.length == prevStack) {
				var this3 = s.ebp;
				var b3 = prevEbp;
				var high3 = this3.high - b3.high | 0;
				var low3 = this3.low - b3.low | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(this3.low,b3.low) < 0) {
					var ret3 = high3--;
					high3 = high3 | 0;
				}
				var x_high3 = high3;
				var x_low3 = low3;
				if(x_high3 != x_low3 >> 31) {
					throw new js__$Boot_HaxeError("Overflow");
				}
				if(x_low3 != 0) {
					throw new js__$Boot_HaxeError("!!!EPB!!! " + hld__$Pointer_Pointer_$Impl_$.toString(s.ebp) + "!=" + hld__$Pointer_Pointer_$Impl_$.toString(prevEbp));
				}
			}
			process.stdout.write(Std.string(str));
			process.stdout.write("\n");
			prevEbp = s.ebp;
			prevFun = s.fidx;
			prevPos = s.fpos;
			prevStack = calls.length;
		};
		debugSt();
		while(true) {
			this.smartStep(tid,stepIn);
			this.resume();
			var r = this.wait(true);
			if(r != 2) {
				return r;
			}
			this.currentStack = this.makeStack(tid,1);
			if(this.currentStack.length == 0) {
				continue;
			}
			debugSt();
		}
	}
	,skipFunction: function(fidx) {
		var ctx = this.module.getMethodContext(fidx);
		var name = ctx == null ? new haxe_io_Path(this.module.resolveSymbol(fidx,0).file).file : ctx.obj.name.split(".")[0];
		if(HxOverrides.cca(name,0) == 36) {
			name = HxOverrides.substr(name,1,null);
		}
		if(this.ignoredRoots == null) {
			this.ignoredRoots = new haxe_ds_StringMap();
			var _g = 0;
			var _g1 = hld_Debugger.IGNORED_ROOTS;
			while(_g < _g1.length) {
				var r = _g1[_g];
				++_g;
				var _this = this.ignoredRoots;
				if(__map_reserved[r] != null) {
					_this.setReserved(r,true);
				} else {
					_this.h[r] = true;
				}
			}
		}
		var _this1 = this.ignoredRoots;
		if(__map_reserved[name] != null) {
			return _this1.existsReserved(name);
		} else {
			return _this1.h.hasOwnProperty(name);
		}
	}
	,step: function(mode) {
		var tid = this.currentThread;
		var s = this.currentStack[0];
		var line = this.module.resolveSymbol(s.fidx,s.fpos).line;
		_hx_loop1: while(true) {
			this.smartStep(tid,mode == hld_StepMode.Into);
			this.resume();
			var r = this.wait(true);
			if(r != 2) {
				return r;
			}
			var st = this.makeStack(tid,1)[0];
			if(st == null) {
				continue;
			}
			var this1 = st.ebp;
			var b = s.ebp;
			var high = this1.high - b.high | 0;
			var low = this1.low - b.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low) < 0) {
				var ret = high--;
				high = high | 0;
			}
			var x_high = high;
			var x_low = low;
			if(x_high != x_low >> 31) {
				throw new js__$Boot_HaxeError("Overflow");
			}
			var deltaEbp = x_low;
			switch(mode._hx_index) {
			case 0:
				break;
			case 1:
				if(st.fidx == s.fidx && deltaEbp == 0 && this.module.resolveSymbol(st.fidx,st.fpos).line != line) {
					break _hx_loop1;
				}
				break;
			case 2:
				if(st.fidx != s.fidx) {
					if(deltaEbp < 0 && this.skipFunction(st.fidx)) {
						continue;
					}
					break _hx_loop1;
				}
				if(this.module.resolveSymbol(st.fidx,st.fpos).line != line) {
					break _hx_loop1;
				}
				break;
			}
			if(deltaEbp > 0) {
				break;
			}
		}
		this.prepareStack();
		return 1;
	}
	,makeStack: function(tid,max) {
		if(max == null) {
			max = 0;
		}
		var stack = [];
		var tinf = this.threads.h[tid];
		if(tinf == null) {
			return stack;
		}
		var esp = this.getReg(tid,0);
		var this1 = tinf.stackTop;
		var b = esp;
		var high = this1.high - b.high | 0;
		var low = this1.low - b.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var x_high = high;
		var x_low = low;
		if(x_high != x_low >> 31) {
			throw new js__$Boot_HaxeError("Overflow");
		}
		var size = x_low + this.jit.align.ptrSize;
		if(size < 0) {
			size = 0;
		}
		var pos = -this.jit.align.ptrSize;
		var b_high = pos >> 31;
		var b_low = pos;
		var high1 = esp.high + b_high | 0;
		var low1 = esp.low + b_low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,esp.low) < 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this3 = this2;
		var mem = this.readMem(this3,size);
		var eip = this.getReg(tid,2);
		var b1 = this.jit.codeStart;
		var high2 = eip.high - b1.high | 0;
		var low2 = eip.low - b1.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(eip.low,b1.low) < 0) {
			var ret2 = high2--;
			high2 = high2 | 0;
		}
		var x_high1 = high2;
		var x_low1 = low2;
		if(x_high1 != x_low1 >> 31) {
			throw new js__$Boot_HaxeError("Overflow");
		}
		var asmPos = x_low1;
		var e = this.jit.resolveAsmPos(asmPos);
		var inProlog = false;
		if(e != null) {
			var op = this.api.readByte(eip,0);
			if(op == 195) {
				e = null;
			}
		}
		if(e != null) {
			var ebp = this.getReg(tid,1);
			if(e.fpos < 0) {
				var delta = this.jit.getFunctionPos(e.fidx) - asmPos;
				e.fpos = 0;
				if(delta == 0) {
					var pos1 = -this.jit.align.ptrSize;
					var b_high1 = pos1 >> 31;
					var b_low1 = pos1;
					var high3 = esp.high + b_high1 | 0;
					var low3 = esp.low + b_low1 | 0;
					if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,esp.low) < 0) {
						var ret3 = high3++;
						high3 = high3 | 0;
					}
					var this4 = new haxe__$Int64__$_$_$Int64(high3,low3);
					var this5 = this4;
					e.ebp = this5;
				} else {
					e.ebp = esp;
				}
				inProlog = true;
			} else {
				e.ebp = ebp;
			}
			stack.push(e);
		}
		if(max == 1) {
			return stack;
		}
		if(this.get_is64()) {
			var _g = 0;
			var _g1 = size >> 3;
			while(_g < _g1) {
				var i = _g++;
				var val = hld__$Buffer_Buffer_$Impl_$.getPointer(mem,i << 3,this.jit.align);
				if(hld__$Pointer_Pointer_$Impl_$.opGt(val,esp) && hld__$Pointer_Pointer_$Impl_$.opLt(val,tinf.stackTop) || inProlog && i == 0) {
					var codePtr = hld__$Buffer_Buffer_$Impl_$.getPointer(mem,i + 1 << 3,this.jit.align);
					if(hld__$Pointer_Pointer_$Impl_$.opLt(codePtr,this.jit.codeStart) || hld__$Pointer_Pointer_$Impl_$.opGt(codePtr,this.jit.codeEnd)) {
						continue;
					}
					var b2 = this.jit.codeStart;
					var high4 = codePtr.high - b2.high | 0;
					var low4 = codePtr.low - b2.low | 0;
					if(haxe__$Int32_Int32_$Impl_$.ucompare(codePtr.low,b2.low) < 0) {
						var ret4 = high4--;
						high4 = high4 | 0;
					}
					var x_high2 = high4;
					var x_low2 = low4;
					if(x_high2 != x_low2 >> 31) {
						throw new js__$Boot_HaxeError("Overflow");
					}
					var codePos = x_low2;
					var e1 = this.jit.resolveAsmPos(codePos);
					if(e1 != null && e1.fpos >= 0) {
						e1.ebp = val;
						stack.push(e1);
						if(max > 0 && stack.length >= max) {
							return stack;
						}
					}
				}
			}
		} else {
			var stackBottom = hld__$Pointer_Pointer_$Impl_$.toInt(esp);
			var stackTop = hld__$Pointer_Pointer_$Impl_$.toInt(tinf.stackTop);
			var _g2 = 0;
			var _g11 = size >> 2;
			while(_g2 < _g11) {
				var i1 = _g2++;
				var val1 = mem.readInt32LE(i1 << 2);
				if(val1 > stackBottom && val1 < stackTop || inProlog && i1 == 0) {
					var codePos1 = mem.readInt32LE(i1 + 1 << 2) - hld__$Pointer_Pointer_$Impl_$.toInt(this.jit.codeStart) | 0;
					var e2 = this.jit.resolveAsmPos(codePos1);
					if(e2 != null && e2.fpos >= 0) {
						e2.ebp = hld__$Pointer_Pointer_$Impl_$.make(val1,0);
						stack.push(e2);
						if(max > 0 && stack.length >= max) {
							return stack;
						}
					}
				}
			}
		}
		return stack;
	}
	,get_stackFrameCount: function() {
		return this.currentStack.length;
	}
	,getBackTrace: function() {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.currentStack;
		while(_g1 < _g2.length) {
			var e = _g2[_g1];
			++_g1;
			_g.push(this.stackInfo(e));
		}
		return _g;
	}
	,getStackFrame: function(frame) {
		if(frame == null) {
			frame = this.currentStackFrame;
		}
		var f = this.currentStack[frame];
		if(f == null) {
			return { file : "???", line : 0, ebp : hld__$Pointer_Pointer_$Impl_$.make(0,0)};
		}
		return this.stackInfo(f);
	}
	,stackInfo: function(f) {
		var s = this.module.resolveSymbol(f.fidx,f.fpos);
		return { file : s.file, line : s.line, ebp : f.ebp, context : this.module.getMethodContext(f.fidx)};
	}
	,getValue: function(expr) {
		var cur = this.currentStack[this.currentStackFrame];
		if(cur == null) {
			return null;
		}
		this["eval"].setContext(cur.fidx,cur.fpos,cur.ebp);
		return this["eval"]["eval"](expr);
	}
	,setValue: function(expr,value) {
		var cur = this.currentStack[this.currentStackFrame];
		if(cur == null) {
			return null;
		}
		this["eval"].setContext(cur.fidx,cur.fpos,cur.ebp);
		return this["eval"].setValue(expr,value);
	}
	,getRef: function(expr) {
		var cur = this.currentStack[this.currentStackFrame];
		if(cur == null) {
			return null;
		}
		this["eval"].setContext(cur.fidx,cur.fpos,cur.ebp);
		return this["eval"].ref(expr);
	}
	,getWatches: function() {
		var _g = [];
		var _g1 = 0;
		var _g2 = this.watches;
		while(_g1 < _g2.length) {
			var w = _g2[_g1];
			++_g1;
			_g.push(w.addr);
		}
		return _g;
	}
	,watch: function(a,forReadWrite) {
		if(forReadWrite == null) {
			forReadWrite = false;
		}
		var size = this.jit.align.typeSize(a.t);
		var availableRegs = hld_Debugger.HW_REGS.slice();
		var _g = 0;
		var _g1 = this.watches;
		while(_g < _g1.length) {
			var w = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g11 = w.regs;
			while(_g2 < _g11.length) {
				var r = _g11[_g2];
				++_g2;
				HxOverrides.remove(availableRegs,r.r);
			}
		}
		var w1 = { addr : a, regs : [], forReadWrite : forReadWrite};
		var offset = 0;
		var bitSize = [1,2,8,4];
		while(size > 0) {
			var r1 = availableRegs.shift();
			if(r1 == null) {
				throw new js__$Boot_HaxeError("Not enough hardware register to watch: remove previous watches");
			}
			var v = size >= 8 ? 2 : size >= 4 ? 3 : size >= 2 ? 1 : 0;
			w1.regs.push({ r : r1, offset : offset, bits : v});
			var delta = bitSize[v];
			size -= delta;
			offset += delta;
		}
		this.watches.push(w1);
		this.syncDebugRegs();
		return w1;
	}
	,unwatch: function(a) {
		var _g = 0;
		var _g1 = this.watches;
		while(_g < _g1.length) {
			var w = _g1[_g];
			++_g;
			if(w.addr == a) {
				HxOverrides.remove(this.watches,w);
				this.syncDebugRegs();
				return true;
			}
		}
		return false;
	}
	,syncDebugRegs: function() {
		var wasPaused = false;
		if(this.currentThread == null) {
			this.pause();
			wasPaused = true;
		}
		var dr7 = 256;
		var _g = 0;
		var _g1 = this.watches;
		while(_g < _g1.length) {
			var w = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g11 = w.regs;
			while(_g2 < _g11.length) {
				var r = _g11[_g2];
				++_g2;
				var rid = hld_Debugger.HW_REGS.indexOf(r.r);
				dr7 |= 1 << rid * 2;
				dr7 |= ((w.forReadWrite ? 3 : 1) | r.bits << 2) << 16 + rid * 4;
				var tmp = this.api;
				var tmp1 = this.currentThread;
				var r1 = r.r;
				var this1 = w.addr.ptr;
				var pos = r.offset;
				var b_high = pos >> 31;
				var b_low = pos;
				var high = this1.high + b_high | 0;
				var low = this1.low + b_low | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this1.low) < 0) {
					var ret = high++;
					high = high | 0;
				}
				var this2 = new haxe__$Int64__$_$_$Int64(high,low);
				var this3 = this2;
				tmp.writeRegister(tmp1,r1,this3);
			}
		}
		this.api.writeRegister(this.currentThread,9,hld__$Pointer_Pointer_$Impl_$.make(dr7,0));
		if(wasPaused) {
			this.resume();
		}
	}
	,resume: function() {
		if(this.stoppedThread == null) {
			throw new js__$Boot_HaxeError("No thread stopped");
		}
		if(!this.api.resume(this.stoppedThread) && !this.processExit) {
			throw new js__$Boot_HaxeError("Could not resume " + this.stoppedThread);
		}
		this.set_stoppedThread(null);
		this.watchBreak = null;
	}
	,end: function() {
		if(this.stoppedThread != null) {
			this.resume();
		}
		this.api.stop();
	}
	,readMem: function(addr,size) {
		var mem = hld__$Buffer_Buffer_$Impl_$._new(size);
		if(!this.api.read(addr,mem,size)) {
			throw new js__$Boot_HaxeError("Failed to read memory @" + hld__$Pointer_Pointer_$Impl_$.toString(addr) + "[" + size + "]");
		}
		return mem;
	}
	,getAsm: function(pos) {
		return this.api.readByte(this.jit.codeStart,pos);
	}
	,setAsm: function(pos,byte) {
		this.api.writeByte(this.jit.codeStart,pos,byte);
		var tmp = this.api;
		var this1 = this.jit.codeStart;
		var b_high = pos >> 31;
		var b_low = pos;
		var high = this1.high + b_high | 0;
		var low = this1.low + b_low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this1.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		tmp.flush(this3,1);
	}
	,getReg: function(tid,reg) {
		return hld__$Pointer_Pointer_$Impl_$.ofPtr(this.api.readRegister(tid,reg));
	}
	,setReg: function(tid,reg,value) {
		if(!this.api.writeRegister(tid,reg,value)) {
			throw new js__$Boot_HaxeError("Failed to set register " + reg);
		}
	}
	,addBreakpoint: function(file,line) {
		var breaks = this.module.getBreaks(file,line);
		if(breaks == null) {
			return -1;
		}
		var set = false;
		var _g = 0;
		var _g1 = breaks.breaks;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			var found = false;
			var _g2 = 0;
			var _g11 = this.breakPoints;
			while(_g2 < _g11.length) {
				var a = _g11[_g2];
				++_g2;
				if(a.fid == b.ifun && a.pos == b.pos) {
					found = true;
					break;
				}
			}
			if(found) {
				continue;
			}
			var codePos = this.jit.getCodePos(b.ifun,b.pos);
			var old = this.getAsm(codePos);
			this.setAsm(codePos,204);
			this.breakPoints.push({ fid : b.ifun, pos : b.pos, oldByte : old, codePos : codePos});
			set = true;
		}
		return breaks.line;
	}
	,clearBreakpoints: function(file) {
		var ffuns = this.module.getFileFunctions(file);
		if(ffuns == null) {
			return;
		}
		var _g = 0;
		var _g1 = this.breakPoints.slice();
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g11 = ffuns.functions;
			while(_g2 < _g11.length) {
				var f = _g11[_g2];
				++_g2;
				if(b.fid == f.ifun) {
					this.removeBP(b);
					break;
				}
			}
		}
	}
	,removeBP: function(bp) {
		HxOverrides.remove(this.breakPoints,bp);
		this.setAsm(bp.codePos,bp.oldByte);
		if(this.nextStep == bp.codePos) {
			this.nextStep = -1;
		}
	}
	,removeBreakpoint: function(file,line) {
		var breaks = this.module.getBreaks(file,line);
		if(breaks == null) {
			return false;
		}
		var rem = false;
		var _g = 0;
		var _g1 = breaks.breaks;
		while(_g < _g1.length) {
			var b = _g1[_g];
			++_g;
			var _g2 = 0;
			var _g11 = this.breakPoints;
			while(_g2 < _g11.length) {
				var a = _g11[_g2];
				++_g2;
				if(a.fid == b.ifun && a.pos == b.pos) {
					rem = true;
					this.removeBP(a);
					break;
				}
			}
		}
		return rem;
	}
	,set_breakOnThrow: function(b) {
		var count = this["eval"].readI32(this.jit.threads);
		var tinfos = this["eval"];
		var this1 = this.jit.threads;
		var b_high = 0;
		var b_low = 8;
		var high = this1.high + b_high | 0;
		var low = this1.low + b_low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this1.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var tinfos1 = tinfos.readPointer(this3);
		var flagsPos = this.jit.align.ptrSize * 6 + 8;
		var _g = 0;
		var _g1 = count;
		while(_g < _g1) {
			var i = _g++;
			var tinf = this["eval"];
			var pos = this.jit.align.ptrSize * i;
			var b_high1 = pos >> 31;
			var b_low1 = pos;
			var high1 = tinfos1.high + b_high1 | 0;
			var low1 = tinfos1.low + b_low1 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,tinfos1.low) < 0) {
				var ret1 = high1++;
				high1 = high1 | 0;
			}
			var this4 = new haxe__$Int64__$_$_$Int64(high1,low1);
			var this5 = this4;
			var tinf1 = tinf.readPointer(this5);
			var flags = this["eval"];
			var b_high2 = flagsPos >> 31;
			var b_low2 = flagsPos;
			var high2 = tinf1.high + b_high2 | 0;
			var low2 = tinf1.low + b_low2 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,tinf1.low) < 0) {
				var ret2 = high2++;
				high2 = high2 | 0;
			}
			var this6 = new haxe__$Int64__$_$_$Int64(high2,low2);
			var this7 = this6;
			var flags1 = flags.readI32(this7);
			if(b) {
				flags1 |= 2;
			} else {
				flags1 &= -3;
			}
			var tmp = this["eval"];
			var b_high3 = flagsPos >> 31;
			var b_low3 = flagsPos;
			var high3 = tinf1.high + b_high3 | 0;
			var low3 = tinf1.low + b_low3 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,tinf1.low) < 0) {
				var ret3 = high3++;
				high3 = high3 | 0;
			}
			var this8 = new haxe__$Int64__$_$_$Int64(high3,low3);
			var this9 = this8;
			tmp.writeI32(this9,flags1);
		}
		return this.breakOnThrow = b;
	}
	,__class__: hld_Debugger
};
var hld_Eval = function($module,api,jit) {
	this.maxBytesLength = 128;
	this.maxArrLength = 10;
	this.maxStringRec = 3;
	this.module = $module;
	this.api = api;
	this.jit = jit;
	this.align = jit.align;
	this.parser = new hscript_Parser();
	this.parser.identChars += "$";
	this.sizeofVArray = this.align.ptrSize * 2 + this.align.typeSize(format_hl_HLType.HI32) * 2;
	var _g = 0;
	var _g1 = $module.code.types;
	while(_g < _g1.length) {
		var t = _g1[_g];
		++_g;
		if(t._hx_index == 11) {
			var o = t.proto;
			if(o.name == "String") {
				this.t_string = t;
			}
		}
	}
};
hld_Eval.__name__ = true;
hld_Eval.prototype = {
	setContext: function(funIndex,codePos,ebp) {
		this.funIndex = funIndex;
		this.codePos = codePos;
		this.ebp = ebp;
	}
	,'eval': function(expr) {
		if(expr == null || expr == "") {
			return null;
		}
		var expr1;
		try {
			expr1 = this.parser.parseString(expr);
		} catch( e ) {
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			if(js_Boot.__instanceof(e1,hscript_Error)) {
				throw new js__$Boot_HaxeError(hscript_Printer.errorToString(e1));
			} else {
				throw e;
			}
		}
		return this.evalExpr(expr1);
	}
	,setValue: function(expr,value) {
		var ref = this.ref(expr);
		var this1 = ref.ptr;
		if(this1 == null || this1.low == 0 && this1.high == 0) {
			throw new js__$Boot_HaxeError("Can't set null ptr");
		}
		var value1 = this["eval"](value);
		if(value1 == null) {
			return null;
		}
		value1 = this.castTo(value1,ref.t);
		var _g = value1.v;
		switch(ref.t._hx_index) {
		case 3:
			if(_g._hx_index == 2) {
				var i = _g.i;
				this.writeI32(ref.ptr,i);
			} else {
				if(format_hl_Tools.isPtr(ref.t)) {
					var ptr = this.getPtr(value1);
					if(ptr != null || value1.v == hld_ValueRepr.VNull) {
						this.writePointer(ref.ptr,ptr);
						return value1;
					}
				}
				throw new js__$Boot_HaxeError("Don't know how to set " + format_hl_Tools.toString(ref.t));
			}
			break;
		case 7:
			if(_g._hx_index == 4) {
				var flag = _g.b;
				var b = hld__$Buffer_Buffer_$Impl_$._new(1);
				b.writeUInt8(flag ? 1 : 0,0);
				this.writeMem(ref.ptr,b,1);
			} else {
				if(format_hl_Tools.isPtr(ref.t)) {
					var ptr1 = this.getPtr(value1);
					if(ptr1 != null || value1.v == hld_ValueRepr.VNull) {
						this.writePointer(ref.ptr,ptr1);
						return value1;
					}
				}
				throw new js__$Boot_HaxeError("Don't know how to set " + format_hl_Tools.toString(ref.t));
			}
			break;
		default:
			if(format_hl_Tools.isPtr(ref.t)) {
				var ptr2 = this.getPtr(value1);
				if(ptr2 != null || value1.v == hld_ValueRepr.VNull) {
					this.writePointer(ref.ptr,ptr2);
					return value1;
				}
			}
			throw new js__$Boot_HaxeError("Don't know how to set " + format_hl_Tools.toString(ref.t));
		}
		return value1;
	}
	,getPtr: function(v) {
		var _g = v.v;
		switch(_g._hx_index) {
		case 1:
			return hld__$Pointer_Pointer_$Impl_$.make(0,0);
		case 5:
			var p = _g.v;
			return p;
		case 6:
			var p1 = _g.p;
			return p1;
		case 7:
			var p2 = _g.p;
			return p2;
		case 8:
			var p3 = _g.p;
			return p3;
		case 9:
			var p4 = _g.p;
			return p4;
		case 10:
			var p5 = _g.p;
			return p5;
		case 12:
			var p6 = _g.p;
			return p6;
		case 13:
			var p7 = _g.p;
			return p7;
		default:
			return null;
		}
	}
	,castTo: function(v,t) {
		if(v == null) {
			return null;
		}
		if(this.safeCastTo(v.t,t)) {
			return v;
		}
		if(v.v == hld_ValueRepr.VNull && format_hl_Tools.isPtr(t)) {
			return { v : hld_ValueRepr.VNull, t : t};
		}
		throw new js__$Boot_HaxeError("Don't know how to cast " + format_hl_Tools.toString(v.t) + " to " + format_hl_Tools.toString(t));
	}
	,safeCastTo: function(t,to) {
		if(t == to) {
			return true;
		}
		return false;
	}
	,ref: function(exprSrc) {
		if(exprSrc == null || exprSrc == "") {
			return null;
		}
		var expr;
		try {
			expr = this.parser.parseString(exprSrc);
		} catch( e ) {
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			if(js_Boot.__instanceof(e1,hscript_Error)) {
				throw new js__$Boot_HaxeError(hscript_Printer.errorToString(e1));
			} else {
				throw e;
			}
		}
		switch(expr._hx_index) {
		case 1:
			var i = expr.v;
			return this.getVarAddress(i);
		case 5:
			var f = expr.f;
			var obj = expr.e;
			var v = this.evalExpr(obj);
			var addr = this.readFieldAddress(v,f);
			if(addr == null || addr.ptr == null) {
				throw new js__$Boot_HaxeError("Can't reference " + exprSrc);
			}
			return addr;
		default:
			throw new js__$Boot_HaxeError("Can't get ref for " + hscript_Printer.toString(expr));
		}
	}
	,evalExpr: function(e) {
		switch(e._hx_index) {
		case 0:
			var c = e.c;
			switch(c._hx_index) {
			case 0:
				var v = c.v;
				return { v : hld_ValueRepr.VInt(v), t : format_hl_HLType.HI32};
			case 1:
				var f = c.f;
				return { v : hld_ValueRepr.VFloat(f), t : format_hl_HLType.HF64};
			case 2:
				var s = c.s;
				return { v : hld_ValueRepr.VString(s,null), t : this.t_string};
			}
			break;
		case 1:
			var i = e.v;
			var v1 = this.getVar(i);
			if(v1 == null) {
				return null;
			}
			return v1;
		case 3:
			var e1 = e.e;
			return this.evalExpr(e1);
		case 4:
			var el = e.e;
			var v2 = { v : hld_ValueRepr.VNull, t : format_hl_HLType.HDyn};
			var _g = 0;
			while(_g < el.length) {
				var e2 = el[_g];
				++_g;
				v2 = this.evalExpr(e2);
			}
			return v2;
		case 5:
			var f1 = e.f;
			var e3 = e.e;
			var e4 = e3;
			var path = [f1];
			var v3 = null;
			_hx_loop2: while(true) switch(e4._hx_index) {
			case 1:
				var i1 = e4.v;
				path.unshift(i1);
				v3 = this.evalPath(path);
				break _hx_loop2;
			case 5:
				var f2 = e4.f;
				var e21 = e4.e;
				path.unshift(f2);
				e4 = e21;
				break;
			default:
				v3 = this.evalExpr(e4);
				break _hx_loop2;
			}
			var _g1 = 0;
			while(_g1 < path.length) {
				var f3 = path[_g1];
				++_g1;
				if(v3 == null) {
					break;
				}
				v3 = this.readField(v3,f3);
			}
			return v3;
		case 6:
			var e22 = e.e2;
			var e11 = e.e1;
			var op = e.op;
			switch(op) {
			case "&&":
				return { v : hld_ValueRepr.VBool(this.toBool(this.evalExpr(e11)) && this.toBool(this.evalExpr(e22))), t : format_hl_HLType.HBool};
			case "||":
				return { v : hld_ValueRepr.VBool(this.toBool(this.evalExpr(e11)) || this.toBool(this.evalExpr(e22))), t : format_hl_HLType.HBool};
			default:
				return this.evalBinop(op,this.evalExpr(e11),this.evalExpr(e22));
			}
			break;
		case 7:
			var e5 = e.e;
			var prefix = e.prefix;
			var op1 = e.op;
			return this.evalUnop(op1,prefix,this.evalExpr(e5));
		case 9:
			var e23 = e.e2;
			var e12 = e.e1;
			var econd = e.cond;
			if(this.toBool(this.evalExpr(econd))) {
				return this.evalExpr(e12);
			}
			if(e23 == null) {
				return { v : hld_ValueRepr.VNull, t : format_hl_HLType.HDyn};
			} else {
				return this.evalExpr(e23);
			}
			break;
		case 2:case 8:case 10:case 11:case 12:case 13:case 14:case 15:case 18:case 20:case 21:case 23:case 24:
			throw new js__$Boot_HaxeError("Unsupported expression `" + hscript_Printer.toString(e) + "`");
		case 16:
			var i2 = e.index;
			var v4 = e.e;
			var v5 = this.evalExpr(v4);
			var i3 = this.evalExpr(i2);
			var _g2 = v5.v;
			if(_g2._hx_index == 9) {
				var read = _g2.read;
				var len = _g2.length;
				var t = _g2.t;
				var i4 = this.toInt(i3);
				if(i4 < 0 || i4 >= len) {
					return this.defVal(t);
				} else {
					return read(i4);
				}
			}
			throw new js__$Boot_HaxeError("Can't access " + this.valueStr(v5) + "[" + this.valueStr(i3) + "]");
		case 17:
			var vl = e.e;
			var _g3 = [];
			var _g11 = 0;
			while(_g11 < vl.length) {
				var v6 = vl[_g11];
				++_g11;
				_g3.push(this.evalExpr(v6));
			}
			var vl1 = _g3;
			return { v : hld_ValueRepr.VArray(format_hl_HLType.HDyn,vl1.length,function(i5) {
				return vl1[i5];
			},null), t : format_hl_HLType.HDyn};
		case 19:
			var e6 = e.e;
			throw new js__$Boot_HaxeError(this.valueStr(this.evalExpr(e6)));
		case 22:
			var e24 = e.e2;
			var e13 = e.e1;
			var econd1 = e.cond;
			if(this.toBool(this.evalExpr(econd1))) {
				return this.evalExpr(e13);
			}
			if(e24 == null) {
				return { v : hld_ValueRepr.VNull, t : format_hl_HLType.HDyn};
			} else {
				return this.evalExpr(e24);
			}
			break;
		case 25:
			var e7 = e.e;
			return this.evalExpr(e7);
		}
	}
	,evalBinop: function(op,v1,v2) {
		throw new js__$Boot_HaxeError("Can't eval " + this.valueStr(v1) + " " + op + " " + this.valueStr(v2));
	}
	,evalUnop: function(op,prefix,v) {
		throw new js__$Boot_HaxeError("Can't eval " + (prefix ? op + this.valueStr(v) : this.valueStr(v) + op));
	}
	,defVal: function(t) {
		switch(t._hx_index) {
		case 1:case 2:case 3:case 4:
			return { v : hld_ValueRepr.VInt(0), t : t};
		case 5:case 6:
			return { v : hld_ValueRepr.VFloat(0.), t : t};
		case 7:
			return { v : hld_ValueRepr.VBool(false), t : t};
		default:
			return { v : hld_ValueRepr.VNull, t : t};
		}
	}
	,toInt: function(v) {
		var _g = v.v;
		switch(_g._hx_index) {
		case 0:case 1:
			return 0;
		case 2:
			var i = _g.i;
			return i;
		case 3:
			var f = _g.v;
			return f | 0;
		default:
			throw new js__$Boot_HaxeError("Can't case " + this.valueStr(v) + " to int");
		}
	}
	,toBool: function(v) {
		var _g = v.v;
		switch(_g._hx_index) {
		case 0:case 1:
			return false;
		case 4:
			var b = _g.b;
			return b;
		default:
			throw new js__$Boot_HaxeError("Can't case " + this.valueStr(v) + " to int");
		}
	}
	,getVar: function(name) {
		switch(name) {
		case "false":
			return { v : hld_ValueRepr.VBool(false), t : format_hl_HLType.HBool};
		case "null":
			return { v : hld_ValueRepr.VNull, t : format_hl_HLType.HDyn};
		case "true":
			return { v : hld_ValueRepr.VBool(true), t : format_hl_HLType.HBool};
		default:
			return this.fetch(this.getVarAddress(name));
		}
	}
	,getVarAddress: function(name) {
		var loc = this.module.getGraph(this.funIndex).getLocal(name,this.codePos);
		if(loc != null) {
			var v = this.readRegAddress(loc.rid);
			if(loc.index != null) {
				if(v.ptr == null) {
					return { ptr : null, t : loc.t};
				}
				var ptr = this.readPointer(v.ptr);
				var pos = this.module.getEnumProto(loc.container)[0].params[loc.index].offset;
				var b_high = pos >> 31;
				var b_low = pos;
				var high = ptr.high + b_high | 0;
				var low = ptr.low + b_low | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low,ptr.low) < 0) {
					var ret = high++;
					high = high | 0;
				}
				var this1 = new haxe__$Int64__$_$_$Int64(high,low);
				var this2 = this1;
				return { ptr : this2, t : loc.t};
			}
			return v;
		}
		if(new EReg("^\\$[0-9]+$","").match(name)) {
			return this.readRegAddress(Std.parseInt(HxOverrides.substr(name,1,null)));
		}
		if(this.module.getGraph(this.funIndex).getLocal("this",this.codePos) != null) {
			var vthis = this.getVar("this");
			if(vthis != null) {
				var f = this.readFieldAddress(vthis,name);
				if(f != null) {
					return f;
				}
				var _g = vthis.t;
				if(_g._hx_index == 11) {
					var o = _g.proto;
					if(o.globalValue != null) {
						var path = o.name.split(".");
						path.push(name);
						var f1 = this.getGlobalAddress(path);
						if(f1 != null) {
							return f1;
						}
					}
				}
			}
		}
		var ctx = this.module.getMethodContext(this.funIndex);
		if(ctx != null) {
			var t = ctx.obj;
			if(t.globalValue != null) {
				var _g1 = this.module.code.globals[t.globalValue];
				if(_g1._hx_index == 11) {
					var p = _g1.proto;
					t = p;
				} else {
					t = null;
				}
			}
			if(t != null && HxOverrides.cca(t.name,0) == 36) {
				var _g2 = 0;
				var _g11 = t.fields;
				while(_g2 < _g11.length) {
					var f2 = _g11[_g2];
					++_g2;
					if(f2.name == name) {
						return this.readFieldAddress(this.getVar(HxOverrides.substr(t.name,1,null)),name);
					}
				}
			}
		}
		return this.getGlobalAddress([name]);
	}
	,evalPath: function(path) {
		var v = this.getVar(path[0]);
		if(v != null) {
			path.shift();
			return v;
		}
		return this.fetch(this.getGlobalAddress(path));
	}
	,getGlobalAddress: function(path) {
		var g = this.module.resolveGlobal(path);
		if(g == null) {
			return null;
		}
		var this1 = this.jit.globals;
		var pos = g.offset;
		var b_high = pos >> 31;
		var b_low = pos;
		var high = this1.high + b_high | 0;
		var low = this1.low + b_low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this1.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		var addr = { ptr : this3, t : g.type};
		while(path.length > 0) addr = this.readFieldAddress(this.fetch(addr),path.shift());
		return addr;
	}
	,escape: function(s) {
		s = s.split("\\").join("\\\\");
		s = s.split("\n").join("\\n");
		s = s.split("\r").join("\\r");
		s = s.split("\t").join("\\t");
		s = s.split("\"").join("\\\"");
		return s;
	}
	,typeStr: function(t) {
		if(t._hx_index == 16) {
			return "{...}";
		} else {
			return format_hl_Tools.toString(t);
		}
	}
	,valueStr: function(v) {
		if(this.maxStringRec < 0 && format_hl_Tools.isPtr(v.t)) {
			return "<...>";
		}
		this.maxStringRec--;
		var str;
		var _g = v.v;
		switch(_g._hx_index) {
		case 0:
			str = "undef";
			break;
		case 1:
			str = "null";
			break;
		case 2:
			var i = _g.i;
			str = "" + i;
			break;
		case 3:
			var v1 = _g.v;
			str = "" + v1;
			break;
		case 4:
			var b = _g.b;
			str = b ? "true" : "false";
			break;
		case 5:
			var p = _g.v;
			switch(v.t._hx_index) {
			case 8:case 17:
				str = this.typeStr(v.t) + "(" + hld__$Pointer_Pointer_$Impl_$.toString(p) + ")";
				break;
			case 15:
				str = hld__$Pointer_Pointer_$Impl_$.toString(p);
				break;
			default:
				str = this.typeStr(v.t).split(".").pop();
			}
			break;
		case 6:
			var s = _g.v;
			str = "\"" + this.escape(s) + "\"";
			break;
		case 7:
			var d = _g.d;
			var f = _g.f;
			str = this.funStr(f) + "[" + this.valueStr(d) + "]";
			break;
		case 8:
			var f1 = _g.f;
			str = this.funStr(f1);
			break;
		case 9:
			var read = _g.read;
			var length = _g.length;
			if(length <= this.maxArrLength) {
				var _g1 = [];
				var _g11 = 0;
				var _g2 = length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					_g1.push(this.valueStr(read(i1)));
				}
				str = "[" + _g1.join(", ") + "]";
			} else {
				var _g3 = [];
				var _g12 = 0;
				var _g21 = this.maxArrLength;
				while(_g12 < _g21) {
					var i2 = _g12++;
					_g3.push(this.valueStr(read(i2)));
				}
				var arr = _g3;
				arr.push("...");
				str = "[" + arr.join(",") + "]:" + length;
			}
			break;
		case 10:
			var readValue = _g.readValue;
			var readKey = _g.readKey;
			var nkeys = _g.nkeys;
			var max = nkeys < this.maxArrLength ? nkeys : this.maxArrLength;
			var _g4 = [];
			var _g13 = 0;
			var _g22 = max;
			while(_g13 < _g22) {
				var i3 = _g13++;
				var k = readKey(i3);
				_g4.push(this.valueStr(k) + "=>" + this.valueStr(readValue(i3)));
			}
			var content = _g4;
			if(max != nkeys) {
				content.push("...");
				str = content.toString() + ":" + nkeys;
			} else {
				str = content.toString();
			}
			break;
		case 11:
			var t = _g.t;
			str = this.typeStr(t);
			break;
		case 12:
			var values = _g.values;
			var c = _g.c;
			if(values.length == 0) {
				str = c;
			} else {
				var str1 = c + "(";
				var _g5 = [];
				var _g14 = 0;
				while(_g14 < values.length) {
					var v2 = values[_g14];
					++_g14;
					_g5.push(this.valueStr(v2));
				}
				str = str1 + _g5.join(", ") + ")";
			}
			break;
		case 13:
			var read1 = _g.read;
			var length1 = _g.length;
			var blen = length1 < this.maxBytesLength ? length1 : this.maxBytesLength;
			var bytes = new haxe_io_Bytes(new ArrayBuffer(blen));
			var _g6 = 0;
			var _g15 = blen;
			while(_g6 < _g15) {
				var i4 = _g6++;
				var v3 = read1(i4);
				bytes.b[i4] = v3 & 255;
			}
			var str2 = length1 + ":0x" + bytes.toHex().toUpperCase();
			if(length1 > this.maxBytesLength) {
				str2 += "...";
			}
			str = str2;
			break;
		}
		this.maxStringRec++;
		return str;
	}
	,funStr: function(f) {
		switch(f._hx_index) {
		case 0:
			var p = f.p;
			return "fun(" + hld__$Pointer_Pointer_$Impl_$.toString(p) + ")";
		case 1:
			var i = f.i;
			return "fun(" + this.getFunctionName(i) + ")";
		}
	}
	,getFunctionName: function(idx) {
		var s = this.module.resolveSymbol(idx,0);
		return s.file + ":" + s.line;
	}
	,readRegAddress: function(index) {
		var r = this.module.getFunctionRegs(this.funIndex)[index];
		if(r == null) {
			return null;
		}
		if(!this.module.getGraph(this.funIndex).isRegisterWritten(index,this.codePos)) {
			return { ptr : null, t : r.t};
		}
		var this1 = this.ebp;
		var pos = r.offset;
		var b_high = pos >> 31;
		var b_low = pos;
		var high = this1.high + b_high | 0;
		var low = this1.low + b_low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this1.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this2 = new haxe__$Int64__$_$_$Int64(high,low);
		var this3 = this2;
		return { ptr : this3, t : r.t};
	}
	,readReg: function(index) {
		return this.fetch(this.readRegAddress(index));
	}
	,readVal: function(p,t) {
		var v;
		switch(t._hx_index) {
		case 0:
			v = hld_ValueRepr.VNull;
			break;
		case 1:
			var m = this.readMem(p,1);
			v = hld_ValueRepr.VInt(m.readUInt8(0));
			break;
		case 2:
			var m1 = this.readMem(p,2);
			v = hld_ValueRepr.VInt(m1.readUInt16LE(0));
			break;
		case 3:
			v = hld_ValueRepr.VInt(this.readI32(p));
			break;
		case 4:
			throw new js__$Boot_HaxeError("TODO:readI64");
		case 5:
			var m2 = this.readMem(p,4);
			v = hld_ValueRepr.VFloat(m2.readFloatLE(0));
			break;
		case 6:
			var m3 = this.readMem(p,8);
			v = hld_ValueRepr.VFloat(m3.readDoubleLE(0));
			break;
		case 7:
			var m4 = this.readMem(p,1);
			v = hld_ValueRepr.VBool(m4.readUInt8(0) != 0);
			break;
		default:
			p = this.readPointer(p);
			return this.valueCast(p,t);
		}
		return { v : v, t : t};
	}
	,valueCast: function(p,t) {
		var _gthis = this;
		if(p == null || p.low == 0 && p.high == 0) {
			return { v : hld_ValueRepr.VNull, t : t};
		}
		var v = hld_ValueRepr.VPointer(p);
		switch(t._hx_index) {
		case 8:
			var len = 0;
			var buf_b = "";
			while(true) {
				var c;
				try {
					var pos = len << 1;
					var b_high = pos >> 31;
					var b_low = pos;
					var high = p.high + b_high | 0;
					var low = p.low + b_low | 0;
					if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p.low) < 0) {
						var ret = high++;
						high = high | 0;
					}
					var this1 = new haxe__$Int64__$_$_$Int64(high,low);
					var this2 = this1;
					c = this.readI32(this2) & 65535;
				} catch( e ) {
					var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
					c = 0;
				}
				if(c == 0) {
					break;
				}
				buf_b += String.fromCodePoint(c);
				++len;
				if(len > 50) {
					buf_b += "...";
					break;
				}
			}
			v = hld_ValueRepr.VString(buf_b,p);
			break;
		case 9:
			t = this.readType(p);
			if(format_hl_Tools.isDynamic(t)) {
				return this.valueCast(p,t);
			}
			var b_high1 = 0;
			var b_low1 = 8;
			var high1 = p.high + b_high1 | 0;
			var low1 = p.low + b_low1 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p.low) < 0) {
				var ret1 = high1++;
				high1 = high1 | 0;
			}
			var this3 = new haxe__$Int64__$_$_$Int64(high1,low1);
			var this4 = this3;
			v = this.readVal(this4,t).v;
			break;
		case 10:
			var pos1 = this.align.ptrSize;
			var b_high2 = pos1 >> 31;
			var b_low2 = pos1;
			var high2 = p.high + b_high2 | 0;
			var low2 = p.low + b_low2 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p.low) < 0) {
				var ret2 = high2++;
				high2 = high2 | 0;
			}
			var this5 = new haxe__$Int64__$_$_$Int64(high2,low2);
			var this6 = this5;
			var funPtr = this.readPointer(this6);
			var pos2 = this.align.ptrSize * 2;
			var b_high3 = pos2 >> 31;
			var b_low3 = pos2;
			var high3 = p.high + b_high3 | 0;
			var low3 = p.low + b_low3 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,p.low) < 0) {
				var ret3 = high3++;
				high3 = high3 | 0;
			}
			var this7 = new haxe__$Int64__$_$_$Int64(high3,low3);
			var this8 = this7;
			var hasValue = this.readI32(this8);
			var fidx = this.jit.functionFromAddr(funPtr);
			var fval = fidx == null ? hld_FunRepr.FUnknown(funPtr) : hld_FunRepr.FIndex(fidx);
			if(hasValue == 1) {
				var pos3 = this.align.ptrSize * 3;
				var b_high4 = pos3 >> 31;
				var b_low4 = pos3;
				var high4 = p.high + b_high4 | 0;
				var low4 = p.low + b_low4 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,p.low) < 0) {
					var ret4 = high4++;
					high4 = high4 | 0;
				}
				var this9 = new haxe__$Int64__$_$_$Int64(high4,low4);
				var this10 = this9;
				var value = this.readVal(this10,format_hl_HLType.HDyn);
				v = hld_ValueRepr.VClosure(fval,value,p);
			} else {
				v = hld_ValueRepr.VFunction(fval,p);
			}
			break;
		case 11:
			var o = t.proto;
			t = this.readType(p);
			if(t._hx_index == 11) {
				var o2 = t.proto;
				o = o2;
			}
			switch(o.name) {
			case "String":
				var pos4 = this.align.ptrSize;
				var b_high5 = pos4 >> 31;
				var b_low5 = pos4;
				var high5 = p.high + b_high5 | 0;
				var low5 = p.low + b_low5 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,p.low) < 0) {
					var ret5 = high5++;
					high5 = high5 | 0;
				}
				var this11 = new haxe__$Int64__$_$_$Int64(high5,low5);
				var this12 = this11;
				var bytes = this.readPointer(this12);
				var pos5 = this.align.ptrSize * 2;
				var b_high6 = pos5 >> 31;
				var b_low6 = pos5;
				var high6 = p.high + b_high6 | 0;
				var low6 = p.low + b_low6 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low6,p.low) < 0) {
					var ret6 = high6++;
					high6 = high6 | 0;
				}
				var this13 = new haxe__$Int64__$_$_$Int64(high6,low6);
				var this14 = this13;
				var length = this.readI32(this14);
				var str = this.readUCS2(bytes,length);
				v = hld_ValueRepr.VString(str,p);
				break;
			case "haxe.ds.IntMap":
				var pos6 = this.align.ptrSize;
				var b_high7 = pos6 >> 31;
				var b_low7 = pos6;
				var high7 = p.high + b_high7 | 0;
				var low7 = p.low + b_low7 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low7,p.low) < 0) {
					var ret7 = high7++;
					high7 = high7 | 0;
				}
				var this15 = new haxe__$Int64__$_$_$Int64(high7,low7);
				var this16 = this15;
				v = this.makeMap(this.readPointer(this16),format_hl_HLType.HI32);
				break;
			case "haxe.ds.ObjectMap":
				var pos7 = this.align.ptrSize;
				var b_high8 = pos7 >> 31;
				var b_low8 = pos7;
				var high8 = p.high + b_high8 | 0;
				var low8 = p.low + b_low8 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low8,p.low) < 0) {
					var ret8 = high8++;
					high8 = high8 | 0;
				}
				var this17 = new haxe__$Int64__$_$_$Int64(high8,low8);
				var this18 = this17;
				v = this.makeMap(this.readPointer(this18),format_hl_HLType.HDyn);
				break;
			case "haxe.ds.StringMap":
				var pos8 = this.align.ptrSize;
				var b_high9 = pos8 >> 31;
				var b_low9 = pos8;
				var high9 = p.high + b_high9 | 0;
				var low9 = p.low + b_low9 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low9,p.low) < 0) {
					var ret9 = high9++;
					high9 = high9 | 0;
				}
				var this19 = new haxe__$Int64__$_$_$Int64(high9,low9);
				var this20 = this19;
				v = this.makeMap(this.readPointer(this20),format_hl_HLType.HBytes);
				break;
			case "haxe.io.Bytes":
				var pos9 = this.align.ptrSize;
				var b_high10 = pos9 >> 31;
				var b_low10 = pos9;
				var high10 = p.high + b_high10 | 0;
				var low10 = p.low + b_low10 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low10,p.low) < 0) {
					var ret10 = high10++;
					high10 = high10 | 0;
				}
				var this21 = new haxe__$Int64__$_$_$Int64(high10,low10);
				var this22 = this21;
				var length1 = this.readI32(this22);
				var pos10 = this.align.ptrSize * 2;
				var b_high11 = pos10 >> 31;
				var b_low11 = pos10;
				var high11 = p.high + b_high11 | 0;
				var low11 = p.low + b_low11 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low11,p.low) < 0) {
					var ret11 = high11++;
					high11 = high11 | 0;
				}
				var this23 = new haxe__$Int64__$_$_$Int64(high11,low11);
				var this24 = this23;
				var bytes1 = this.readPointer(this24);
				v = hld_ValueRepr.VBytes(length1,function(i) {
					var b_high12 = i >> 31;
					var b_low12 = i;
					var high12 = bytes1.high + b_high12 | 0;
					var low12 = bytes1.low + b_low12 | 0;
					if(haxe__$Int32_Int32_$Impl_$.ucompare(low12,bytes1.low) < 0) {
						var ret12 = high12++;
						high12 = high12 | 0;
					}
					var this25 = new haxe__$Int64__$_$_$Int64(high12,low12);
					var this26 = this25;
					return _gthis.readMem(this26,1).readUInt8(0);
				},p);
				break;
			case "hl.types.ArrayBytes_Float":
				v = this.makeArrayBytes(p,format_hl_HLType.HF64);
				break;
			case "hl.types.ArrayBytes_Int":
				v = this.makeArrayBytes(p,format_hl_HLType.HI32);
				break;
			case "hl.types.ArrayBytes_Single":
				v = this.makeArrayBytes(p,format_hl_HLType.HF32);
				break;
			case "hl.types.ArrayBytes_hl_UI16":
				v = this.makeArrayBytes(p,format_hl_HLType.HUi16);
				break;
			case "hl.types.ArrayDyn":
				v = this.readField({ v : v, t : t},"array").v;
				break;
			case "hl.types.ArrayObj":
				var pos11 = this.align.ptrSize;
				var b_high13 = pos11 >> 31;
				var b_low13 = pos11;
				var high13 = p.high + b_high13 | 0;
				var low13 = p.low + b_low13 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low13,p.low) < 0) {
					var ret13 = high13++;
					high13 = high13 | 0;
				}
				var this27 = new haxe__$Int64__$_$_$Int64(high13,low13);
				var this28 = this27;
				var length2 = this.readI32(this28);
				var pos12 = this.align.ptrSize * 2;
				var b_high14 = pos12 >> 31;
				var b_low14 = pos12;
				var high14 = p.high + b_high14 | 0;
				var low14 = p.low + b_low14 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low14,p.low) < 0) {
					var ret14 = high14++;
					high14 = high14 | 0;
				}
				var this29 = new haxe__$Int64__$_$_$Int64(high14,low14);
				var this30 = this29;
				var nativeArray = this.readPointer(this30);
				var pos13 = this.align.ptrSize;
				var b_high15 = pos13 >> 31;
				var b_low15 = pos13;
				var high15 = nativeArray.high + b_high15 | 0;
				var low15 = nativeArray.low + b_low15 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low15,nativeArray.low) < 0) {
					var ret15 = high15++;
					high15 = high15 | 0;
				}
				var this31 = new haxe__$Int64__$_$_$Int64(high15,low15);
				var this32 = this31;
				var type = this.readType(this32);
				v = hld_ValueRepr.VArray(type,length2,function(i1) {
					var pos14 = _gthis.sizeofVArray + i1 * _gthis.align.ptrSize;
					var b_high16 = pos14 >> 31;
					var b_low16 = pos14;
					var high16 = nativeArray.high + b_high16 | 0;
					var low16 = nativeArray.low + b_low16 | 0;
					if(haxe__$Int32_Int32_$Impl_$.ucompare(low16,nativeArray.low) < 0) {
						var ret16 = high16++;
						high16 = high16 | 0;
					}
					var this33 = new haxe__$Int64__$_$_$Int64(high16,low16);
					var this34 = this33;
					return _gthis.readVal(this34,type);
				},p);
				break;
			default:
			}
			break;
		case 13:
			v = hld_ValueRepr.VType(this.readType(p,true));
			break;
		case 14:
			var t1 = t.t;
			v = this.readVal(p,t1).v;
			break;
		case 15:
			var pos15 = this.align.ptrSize;
			var b_high17 = pos15 >> 31;
			var b_low17 = pos15;
			var high17 = p.high + b_high17 | 0;
			var low17 = p.low + b_low17 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low17,p.low) < 0) {
				var ret17 = high17++;
				high17 = high17 | 0;
			}
			var this35 = new haxe__$Int64__$_$_$Int64(high17,low17);
			var this36 = this35;
			var v1 = this.readPointer(this36);
			if(!(v1 == null || v1.low == 0 && v1.high == 0)) {
				return this.valueCast(v1,format_hl_HLType.HDyn);
			}
			break;
		case 18:
			var e2 = t.proto;
			var pos16 = this.align.ptrSize;
			var b_high18 = pos16 >> 31;
			var b_low18 = pos16;
			var high18 = p.high + b_high18 | 0;
			var low18 = p.low + b_low18 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low18,p.low) < 0) {
				var ret18 = high18++;
				high18 = high18 | 0;
			}
			var this37 = new haxe__$Int64__$_$_$Int64(high18,low18);
			var this38 = this37;
			var index = this.readI32(this38);
			var c1 = this.module.getEnumProto(e2)[index];
			var c2 = c1.name;
			var _g = [];
			var _g1 = 0;
			var _g2 = c1.params;
			while(_g1 < _g2.length) {
				var a = _g2[_g1];
				++_g1;
				var pos17 = a.offset;
				var b_high19 = pos17 >> 31;
				var b_low19 = pos17;
				var high19 = p.high + b_high19 | 0;
				var low19 = p.low + b_low19 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low19,p.low) < 0) {
					var ret19 = high19++;
					high19 = high19 | 0;
				}
				var this39 = new haxe__$Int64__$_$_$Int64(high19,low19);
				var this40 = this39;
				_g.push(this.readVal(this40,a.t));
			}
			v = hld_ValueRepr.VEnum(c2,_g,p);
			break;
		case 19:
			var t2 = t.t;
			var b_high20 = 0;
			var b_low20 = 8;
			var high20 = p.high + b_high20 | 0;
			var low20 = p.low + b_low20 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low20,p.low) < 0) {
				var ret20 = high20++;
				high20 = high20 | 0;
			}
			var this41 = new haxe__$Int64__$_$_$Int64(high20,low20);
			var this42 = this41;
			v = this.readVal(this42,t2).v;
			break;
		default:
		}
		return { v : v, t : t};
	}
	,makeArrayBytes: function(p,t) {
		var _gthis = this;
		var pos = this.align.ptrSize;
		var b_high = pos >> 31;
		var b_low = pos;
		var high = p.high + b_high | 0;
		var low = p.low + b_low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		var length = this.readI32(this2);
		var pos1 = this.align.ptrSize * 2;
		var b_high1 = pos1 >> 31;
		var b_low1 = pos1;
		var high1 = p.high + b_high1 | 0;
		var low1 = p.low + b_low1 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p.low) < 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this3 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this4 = this3;
		var bytes = this.readPointer(this4);
		var size = this.align.typeSize(t);
		return hld_ValueRepr.VArray(t,length,function(i) {
			var pos2 = i * size;
			var b_high2 = pos2 >> 31;
			var b_low2 = pos2;
			var high2 = bytes.high + b_high2 | 0;
			var low2 = bytes.low + b_low2 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,bytes.low) < 0) {
				var ret2 = high2++;
				high2 = high2 | 0;
			}
			var this5 = new haxe__$Int64__$_$_$Int64(high2,low2);
			var this6 = this5;
			return _gthis.readVal(this6,t);
		},p);
	}
	,makeMap: function(p,tkey) {
		var _gthis = this;
		var cells = this.readPointer(p);
		var pos = this.align.ptrSize;
		var b_high = pos >> 31;
		var b_low = pos;
		var high = p.high + b_high | 0;
		var low = p.low + b_low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		var entries = this.readPointer(this2);
		var pos1 = this.align.ptrSize * 2;
		var b_high1 = pos1 >> 31;
		var b_low1 = pos1;
		var high1 = p.high + b_high1 | 0;
		var low1 = p.low + b_low1 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,p.low) < 0) {
			var ret1 = high1++;
			high1 = high1 | 0;
		}
		var this3 = new haxe__$Int64__$_$_$Int64(high1,low1);
		var this4 = this3;
		var values = this.readPointer(this4);
		var freelist_size = this.align.ptrSize + 4 + 4;
		var pos2 = this.align.ptrSize * 3 + freelist_size;
		var b_high2 = pos2 >> 31;
		var b_low2 = pos2;
		var high2 = p.high + b_high2 | 0;
		var low2 = p.low + b_low2 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p.low) < 0) {
			var ret2 = high2++;
			high2 = high2 | 0;
		}
		var this5 = new haxe__$Int64__$_$_$Int64(high2,low2);
		var this6 = this5;
		var ncells = this.readI32(this6);
		var pos3 = pos2 + 4;
		var b_high3 = pos3 >> 31;
		var b_low3 = pos3;
		var high3 = p.high + b_high3 | 0;
		var low3 = p.low + b_low3 | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,p.low) < 0) {
			var ret3 = high3++;
			high3 = high3 | 0;
		}
		var this7 = new haxe__$Int64__$_$_$Int64(high3,low3);
		var this8 = this7;
		var nentries = this.readI32(this8);
		var content = [];
		var curCell = 0;
		var keyInValue;
		var keyPos;
		var valuePos;
		var keyStride;
		var valueStride;
		switch(tkey._hx_index) {
		case 3:
			keyInValue = false;
			keyPos = 0;
			valuePos = 0;
			keyStride = 8;
			valueStride = this.align.ptrSize;
			break;
		case 8:
			keyInValue = true;
			keyPos = 0;
			valuePos = this.align.ptrSize;
			keyStride = 8;
			valueStride = this.align.ptrSize * 2;
			break;
		case 9:
			keyInValue = true;
			keyPos = 0;
			valuePos = this.align.ptrSize;
			keyStride = 4;
			valueStride = this.align.ptrSize * 2;
			break;
		default:
			throw new js__$Boot_HaxeError("Unsupported map " + format_hl_Tools.toString(tkey));
		}
		var fetch = function(k) {
			while(content.length <= k) {
				if(curCell == ncells) {
					throw new js__$Boot_HaxeError("assert");
				}
				curCell += 1;
				var pos4 = curCell - 1 << 2;
				var b_high4 = pos4 >> 31;
				var b_low4 = pos4;
				var high4 = cells.high + b_high4 | 0;
				var low4 = cells.low + b_low4 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,cells.low) < 0) {
					var ret4 = high4++;
					high4 = high4 | 0;
				}
				var this9 = new haxe__$Int64__$_$_$Int64(high4,low4);
				var this10 = this9;
				var c = _gthis.readI32(this10);
				while(c >= 0) {
					var pos5 = c * valueStride + valuePos;
					var b_high5 = pos5 >> 31;
					var b_low5 = pos5;
					var high5 = values.high + b_high5 | 0;
					var low5 = values.low + b_low5 | 0;
					if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,values.low) < 0) {
						var ret5 = high5++;
						high5 = high5 | 0;
					}
					var this11 = new haxe__$Int64__$_$_$Int64(high5,low5);
					var this12 = this11;
					var value = _gthis.readVal(this12,format_hl_HLType.HDyn);
					var keyPtr;
					if(keyInValue) {
						var pos6 = c * valueStride + keyPos;
						var b_high6 = pos6 >> 31;
						var b_low6 = pos6;
						var high6 = values.high + b_high6 | 0;
						var low6 = values.low + b_low6 | 0;
						if(haxe__$Int32_Int32_$Impl_$.ucompare(low6,values.low) < 0) {
							var ret6 = high6++;
							high6 = high6 | 0;
						}
						var this13 = new haxe__$Int64__$_$_$Int64(high6,low6);
						var this14 = this13;
						keyPtr = this14;
					} else {
						var pos7 = c * keyStride + keyPos;
						var b_high7 = pos7 >> 31;
						var b_low7 = pos7;
						var high7 = entries.high + b_high7 | 0;
						var low7 = entries.low + b_low7 | 0;
						if(haxe__$Int32_Int32_$Impl_$.ucompare(low7,entries.low) < 0) {
							var ret7 = high7++;
							high7 = high7 | 0;
						}
						var this15 = new haxe__$Int64__$_$_$Int64(high7,low7);
						var this16 = this15;
						keyPtr = this16;
					}
					var key;
					switch(tkey._hx_index) {
					case 3:
						key = { v : hld_ValueRepr.VInt(_gthis.readI32(keyPtr)), t : format_hl_HLType.HI32};
						break;
					case 8:
						var key1 = _gthis.readPointer(keyPtr);
						key = { v : hld_ValueRepr.VString(_gthis.readUCSBytes(key1),null), t : _gthis.t_string};
						break;
					case 9:
						key = _gthis.readVal(keyPtr,format_hl_HLType.HDyn);
						break;
					default:
						throw new js__$Boot_HaxeError("Unsupported map " + format_hl_Tools.toString(tkey));
					}
					content.push({ key : key, value : value});
					var pos8 = c * keyStride + keyStride - 4;
					var b_high8 = pos8 >> 31;
					var b_low8 = pos8;
					var high8 = entries.high + b_high8 | 0;
					var low8 = entries.low + b_low8 | 0;
					if(haxe__$Int32_Int32_$Impl_$.ucompare(low8,entries.low) < 0) {
						var ret8 = high8++;
						high8 = high8 | 0;
					}
					var this17 = new haxe__$Int64__$_$_$Int64(high8,low8);
					var this18 = this17;
					c = _gthis.readI32(this18);
				}
			}
			return content[k];
		};
		var getKey = function(k1) {
			if(k1 < 0 || k1 >= nentries) {
				return { v : hld_ValueRepr.VUndef, t : tkey};
			} else {
				return fetch(k1).key;
			}
		};
		var getValue = function(k2) {
			if(k2 < 0 || k2 >= nentries) {
				return { v : hld_ValueRepr.VUndef, t : format_hl_HLType.HDyn};
			} else {
				return fetch(k2).value;
			}
		};
		return hld_ValueRepr.VMap(tkey == format_hl_HLType.HBytes ? this.t_string : tkey,nentries,getKey,getValue,p);
	}
	,getFields: function(v) {
		var ptr;
		var _g = v.v;
		switch(_g._hx_index) {
		case 5:
			var p = _g.v;
			ptr = p;
			break;
		case 12:
			var values = _g.values;
			var _g1 = [];
			var _g11 = 0;
			var _g2 = values.length;
			while(_g11 < _g2) {
				var i = _g11++;
				if(format_hl_Tools.isPtr(values[i].t)) {
					_g1.push("$" + i);
				}
			}
			return _g1;
		default:
			return null;
		}
		var _g12 = v.t;
		switch(_g12._hx_index) {
		case 11:
			var o = _g12.proto;
			var getRec = null;
			getRec = function(o1) {
				var fields;
				if(o1.tsuper == null) {
					fields = [];
				} else {
					var _g13 = o1.tsuper;
					var fields1;
					if(_g13._hx_index == 11) {
						var o2 = _g13.proto;
						fields1 = o2;
					} else {
						throw new js__$Boot_HaxeError("assert");
					}
					fields = getRec(fields1);
				}
				var _g14 = 0;
				var _g21 = o1.fields;
				while(_g14 < _g21.length) {
					var f = _g21[_g14];
					++_g14;
					if(f.name != "") {
						fields.push(f.name);
					}
				}
				return fields;
			};
			return getRec(o);
		case 15:
			var fields2 = _g12.fields;
			var _g15 = [];
			var _g22 = 0;
			while(_g22 < fields2.length) {
				var f1 = fields2[_g22];
				++_g22;
				_g15.push(f1.name);
			}
			return _g15;
		case 16:
			var pos = this.align.ptrSize;
			var b_high = pos >> 31;
			var b_low = pos;
			var high = ptr.high + b_high | 0;
			var low = ptr.low + b_low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,ptr.low) < 0) {
				var ret = high++;
				high = high | 0;
			}
			var this1 = new haxe__$Int64__$_$_$Int64(high,low);
			var this2 = this1;
			var lookup = this.readPointer(this2);
			var pos1 = this.align.ptrSize * 4;
			var b_high1 = pos1 >> 31;
			var b_low1 = pos1;
			var high1 = ptr.high + b_high1 | 0;
			var low1 = ptr.low + b_low1 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,ptr.low) < 0) {
				var ret1 = high1++;
				high1 = high1 | 0;
			}
			var this3 = new haxe__$Int64__$_$_$Int64(high1,low1);
			var this4 = this3;
			var nfields = this.readI32(this4);
			var fields3 = [];
			var _g16 = 0;
			var _g23 = nfields;
			while(_g16 < _g23) {
				var i1 = _g16++;
				var pos2 = i1 * (this.align.ptrSize + 8);
				var b_high2 = pos2 >> 31;
				var b_low2 = pos2;
				var high2 = lookup.high + b_high2 | 0;
				var low2 = lookup.low + b_low2 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,lookup.low) < 0) {
					var ret2 = high2++;
					high2 = high2 | 0;
				}
				var l_high = high2;
				var l_low = low2;
				var pos3 = this.align.ptrSize;
				var b_high3 = pos3 >> 31;
				var b_low3 = pos3;
				var high3 = l_high + b_high3 | 0;
				var low3 = l_low + b_low3 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,l_low) < 0) {
					var ret3 = high3++;
					high3 = high3 | 0;
				}
				var this5 = new haxe__$Int64__$_$_$Int64(high3,low3);
				var this6 = this5;
				var h = this.readI32(this6);
				var name = this.module.reverseHash(h);
				if(name == null) {
					name = hld_Eval.HASH_PREFIX + h;
				}
				fields3.push(name);
			}
			return fields3;
		default:
			return null;
		}
	}
	,readField: function(v,name) {
		var _g = v.v;
		if(_g._hx_index == 12) {
			var values = _g.values;
			if(HxOverrides.cca(name,0) == 36) {
				return values[Std.parseInt(HxOverrides.substr(name,1,null))];
			}
		}
		var a = this.readFieldAddress(v,name);
		return this.fetch(a);
	}
	,fetch: function(addr) {
		if(addr == null) {
			return null;
		}
		if(addr.ptr == null) {
			return { v : hld_ValueRepr.VUndef, t : addr.t};
		}
		return this.readVal(addr.ptr,addr.t);
	}
	,readFieldAddress: function(v,name) {
		var ptr;
		var _g = v.v;
		switch(_g._hx_index) {
		case 0:case 1:
			ptr = null;
			break;
		case 5:
			var p = _g.v;
			ptr = p;
			break;
		case 6:
			var p1 = _g.p;
			ptr = p1;
			break;
		case 9:
			var p2 = _g.p;
			ptr = p2;
			break;
		case 10:
			var p3 = _g.p;
			ptr = p3;
			break;
		default:
			return null;
		}
		var _g1 = v.t;
		switch(_g1._hx_index) {
		case 9:
			if(ptr == null) {
				return { ptr : null, t : format_hl_HLType.HDyn};
			}
			return this.readFieldAddress({ v : v.v, t : this.readType(ptr)},name);
		case 11:
			var o = _g1.proto;
			var _this = this.module.getObjectProto(o).fields;
			var f = __map_reserved[name] != null ? _this.getReserved(name) : _this.h[name];
			if(f == null) {
				return null;
			}
			var tmp;
			if(ptr == null) {
				tmp = null;
			} else {
				var pos = f.offset;
				var b_high = pos >> 31;
				var b_low = pos;
				var high = ptr.high + b_high | 0;
				var low = ptr.low + b_low | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low,ptr.low) < 0) {
					var ret = high++;
					high = high | 0;
				}
				var this1 = new haxe__$Int64__$_$_$Int64(high,low);
				var this2 = this1;
				tmp = this2;
			}
			return { ptr : tmp, t : f.t};
		case 15:
			var fl = _g1.fields;
			var _g11 = 0;
			var _g2 = fl.length;
			while(_g11 < _g2) {
				var i = _g11++;
				if(fl[i].name == name) {
					var t = fl[i].t;
					if(ptr == null) {
						return { ptr : null, t : t};
					}
					var pos1 = this.align.ptrSize * (3 + i);
					var b_high1 = pos1 >> 31;
					var b_low1 = pos1;
					var high1 = ptr.high + b_high1 | 0;
					var low1 = ptr.low + b_low1 | 0;
					if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,ptr.low) < 0) {
						var ret1 = high1++;
						high1 = high1 | 0;
					}
					var this3 = new haxe__$Int64__$_$_$Int64(high1,low1);
					var this4 = this3;
					var addr = this.readPointer(this4);
					if(addr != null) {
						return { ptr : addr, t : t};
					}
				}
			}
			if(ptr == null) {
				return null;
			}
			var pos2 = this.align.ptrSize;
			var b_high2 = pos2 >> 31;
			var b_low2 = pos2;
			var high2 = ptr.high + b_high2 | 0;
			var low2 = ptr.low + b_low2 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,ptr.low) < 0) {
				var ret2 = high2++;
				high2 = high2 | 0;
			}
			var this5 = new haxe__$Int64__$_$_$Int64(high2,low2);
			var this6 = this5;
			var realValue = this.readPointer(this6);
			if(realValue == null) {
				return null;
			}
			return this.readFieldAddress({ v : hld_ValueRepr.VPointer(realValue), t : format_hl_HLType.HDyn},name);
		case 16:
			if(ptr == null) {
				return { ptr : null, t : format_hl_HLType.HDyn};
			}
			var pos3 = this.align.ptrSize;
			var b_high3 = pos3 >> 31;
			var b_low3 = pos3;
			var high3 = ptr.high + b_high3 | 0;
			var low3 = ptr.low + b_low3 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,ptr.low) < 0) {
				var ret3 = high3++;
				high3 = high3 | 0;
			}
			var this7 = new haxe__$Int64__$_$_$Int64(high3,low3);
			var this8 = this7;
			var lookup = this.readPointer(this8);
			var pos4 = this.align.ptrSize * 2;
			var b_high4 = pos4 >> 31;
			var b_low4 = pos4;
			var high4 = ptr.high + b_high4 | 0;
			var low4 = ptr.low + b_low4 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low4,ptr.low) < 0) {
				var ret4 = high4++;
				high4 = high4 | 0;
			}
			var this9 = new haxe__$Int64__$_$_$Int64(high4,low4);
			var this10 = this9;
			var raw_data = this.readPointer(this10);
			var pos5 = this.align.ptrSize * 3;
			var b_high5 = pos5 >> 31;
			var b_low5 = pos5;
			var high5 = ptr.high + b_high5 | 0;
			var low5 = ptr.low + b_low5 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low5,ptr.low) < 0) {
				var ret5 = high5++;
				high5 = high5 | 0;
			}
			var this11 = new haxe__$Int64__$_$_$Int64(high5,low5);
			var this12 = this11;
			var values = this.readPointer(this12);
			var pos6 = this.align.ptrSize * 4;
			var b_high6 = pos6 >> 31;
			var b_low6 = pos6;
			var high6 = ptr.high + b_high6 | 0;
			var low6 = ptr.low + b_low6 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low6,ptr.low) < 0) {
				var ret6 = high6++;
				high6 = high6 | 0;
			}
			var this13 = new haxe__$Int64__$_$_$Int64(high6,low6);
			var this14 = this13;
			var nfields = this.readI32(this14);
			var hash = StringTools.startsWith(name,hld_Eval.HASH_PREFIX) ? Std.parseInt(HxOverrides.substr(name,hld_Eval.HASH_PREFIX.length,null)) : format_hl_Tools.hash(name);
			var min = 0;
			var max = nfields;
			while(min < max) {
				var mid = min + max >> 1;
				var pos7 = mid * (this.align.ptrSize + 8);
				var b_high7 = pos7 >> 31;
				var b_low7 = pos7;
				var high7 = lookup.high + b_high7 | 0;
				var low7 = lookup.low + b_low7 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low7,lookup.low) < 0) {
					var ret7 = high7++;
					high7 = high7 | 0;
				}
				var this15 = new haxe__$Int64__$_$_$Int64(high7,low7);
				var this16 = this15;
				var lid = this16;
				var pos8 = this.align.ptrSize;
				var b_high8 = pos8 >> 31;
				var b_low8 = pos8;
				var high8 = lid.high + b_high8 | 0;
				var low8 = lid.low + b_low8 | 0;
				if(haxe__$Int32_Int32_$Impl_$.ucompare(low8,lid.low) < 0) {
					var ret8 = high8++;
					high8 = high8 | 0;
				}
				var this17 = new haxe__$Int64__$_$_$Int64(high8,low8);
				var this18 = this17;
				var h = this.readI32(this18);
				if(h < hash) {
					min = mid + 1;
				} else if(h > hash) {
					max = mid;
				} else {
					var t1 = this.readType(lid);
					var pos9 = this.align.ptrSize + 4;
					var b_high9 = pos9 >> 31;
					var b_low9 = pos9;
					var high9 = lid.high + b_high9 | 0;
					var low9 = lid.low + b_low9 | 0;
					if(haxe__$Int32_Int32_$Impl_$.ucompare(low9,lid.low) < 0) {
						var ret9 = high9++;
						high9 = high9 | 0;
					}
					var this19 = new haxe__$Int64__$_$_$Int64(high9,low9);
					var this20 = this19;
					var offset = this.readI32(this20);
					var tmp1;
					if(format_hl_Tools.isPtr(t1)) {
						var pos10 = offset * this.align.ptrSize;
						var b_high10 = pos10 >> 31;
						var b_low10 = pos10;
						var high10 = values.high + b_high10 | 0;
						var low10 = values.low + b_low10 | 0;
						if(haxe__$Int32_Int32_$Impl_$.ucompare(low10,values.low) < 0) {
							var ret10 = high10++;
							high10 = high10 | 0;
						}
						var this21 = new haxe__$Int64__$_$_$Int64(high10,low10);
						var this22 = this21;
						tmp1 = this22;
					} else {
						var b_high11 = offset >> 31;
						var b_low11 = offset;
						var high11 = raw_data.high + b_high11 | 0;
						var low11 = raw_data.low + b_low11 | 0;
						if(haxe__$Int32_Int32_$Impl_$.ucompare(low11,raw_data.low) < 0) {
							var ret11 = high11++;
							high11 = high11 | 0;
						}
						var this23 = new haxe__$Int64__$_$_$Int64(high11,low11);
						var this24 = this23;
						tmp1 = this24;
					}
					return { ptr : tmp1, t : t1};
				}
			}
			return null;
		default:
			return null;
		}
	}
	,readPointer: function(p) {
		if(this.align.is64) {
			var m = this.readMem(p,8);
			return hld__$Buffer_Buffer_$Impl_$.getPointer(m,0,this.align);
		}
		return hld__$Pointer_Pointer_$Impl_$.make(this.readI32(p),0);
	}
	,writePointer: function(p,v) {
		if(this.align.is64) {
			var buf = hld__$Buffer_Buffer_$Impl_$._new(8);
			hld__$Buffer_Buffer_$Impl_$.setPointer(buf,0,v,this.align);
			this.writeMem(p,buf,8);
		} else {
			this.writeI32(p,hld__$Pointer_Pointer_$Impl_$.toInt(v));
		}
	}
	,readMem: function(p,size) {
		var b = hld__$Buffer_Buffer_$Impl_$._new(size);
		if(!this.api.read(p,b,size)) {
			throw new js__$Boot_HaxeError("Failed to read @" + hld__$Pointer_Pointer_$Impl_$.toString(p) + ":" + size);
		}
		return b;
	}
	,readUCS2: function(ptr,length) {
		var mem = this.readMem(ptr,length + 1 << 2);
		return hld__$Buffer_Buffer_$Impl_$.readStringUCS2(mem,0,length);
	}
	,readUCSBytes: function(ptr) {
		var len = 0;
		while(true) {
			var pos = len << 1;
			var b_high = pos >> 31;
			var b_low = pos;
			var high = ptr.high + b_high | 0;
			var low = ptr.low + b_low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,ptr.low) < 0) {
				var ret = high++;
				high = high | 0;
			}
			var this1 = new haxe__$Int64__$_$_$Int64(high,low);
			var this2 = this1;
			var v = this.readI32(this2);
			var low1 = v & 65535;
			var high1 = v >>> 16;
			if(low1 == 0) {
				break;
			}
			++len;
			if(high1 == 0) {
				break;
			}
			++len;
		}
		return this.readUCS2(ptr,len);
	}
	,readI32: function(p) {
		return this.readMem(p,4).readInt32LE(0);
	}
	,writeI32: function(p,v) {
		var buf = hld__$Buffer_Buffer_$Impl_$._new(4);
		buf.writeInt32LE(v,0);
		this.writeMem(p,buf,4);
	}
	,writeMem: function(p,b,size) {
		if(!this.api.write(p,b,size)) {
			throw new js__$Boot_HaxeError("Failed to write @" + hld__$Pointer_Pointer_$Impl_$.toString(p) + ":" + size);
		}
	}
	,readType: function(p,direct) {
		if(direct == null) {
			direct = false;
		}
		if(!direct) {
			p = this.readPointer(p);
		}
		var _g = this.readI32(p);
		switch(_g) {
		case 0:
			return format_hl_HLType.HVoid;
		case 1:
			return format_hl_HLType.HUi8;
		case 2:
			return format_hl_HLType.HUi16;
		case 3:
			return format_hl_HLType.HI32;
		case 4:
			return format_hl_HLType.HI64;
		case 5:
			return format_hl_HLType.HF32;
		case 6:
			return format_hl_HLType.HF64;
		case 7:
			return format_hl_HLType.HBool;
		case 8:
			return format_hl_HLType.HBytes;
		case 9:
			return format_hl_HLType.HDyn;
		case 10:
			var t = this.typeFromAddr(p);
			if(t != null) {
				return t;
			}
			var pos = this.align.ptrSize;
			var b_high = pos >> 31;
			var b_low = pos;
			var high = p.high + b_high | 0;
			var low = p.low + b_low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,p.low) < 0) {
				var ret = high++;
				high = high | 0;
			}
			var this1 = new haxe__$Int64__$_$_$Int64(high,low);
			var this2 = this1;
			var tfun = this.readPointer(this2);
			var pos1 = this.align.ptrSize * 3;
			var b_high1 = pos1 >> 31;
			var b_low1 = pos1;
			var high1 = tfun.high + b_high1 | 0;
			var low1 = tfun.low + b_low1 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low1,tfun.low) < 0) {
				var ret1 = high1++;
				high1 = high1 | 0;
			}
			var this3 = new haxe__$Int64__$_$_$Int64(high1,low1);
			var this4 = this3;
			var tparent = this.readType(this4);
			if(tparent._hx_index == 10) {
				var f = tparent.fun;
				var args = f.args.slice();
				args.shift();
				return format_hl_HLType.HFun({ args : args, ret : f.ret});
			} else {
				throw new js__$Boot_HaxeError("assert");
			}
			break;
		case 12:
			return format_hl_HLType.HArray;
		case 13:
			return format_hl_HLType.HType;
		case 14:
			var pos2 = this.align.ptrSize;
			var b_high2 = pos2 >> 31;
			var b_low2 = pos2;
			var high2 = p.high + b_high2 | 0;
			var low2 = p.low + b_low2 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low2,p.low) < 0) {
				var ret2 = high2++;
				high2 = high2 | 0;
			}
			var this5 = new haxe__$Int64__$_$_$Int64(high2,low2);
			var this6 = this5;
			return format_hl_HLType.HRef(this.readType(this6));
		case 16:
			return format_hl_HLType.HDynObj;
		case 11:case 15:case 17:case 18:
			return this.typeFromAddr(p);
		case 19:
			var pos3 = this.align.ptrSize;
			var b_high3 = pos3 >> 31;
			var b_low3 = pos3;
			var high3 = p.high + b_high3 | 0;
			var low3 = p.low + b_low3 | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low3,p.low) < 0) {
				var ret3 = high3++;
				high3 = high3 | 0;
			}
			var this7 = new haxe__$Int64__$_$_$Int64(high3,low3);
			var this8 = this7;
			return format_hl_HLType.HNull(this.readType(this8));
		default:
			var x = _g;
			throw new js__$Boot_HaxeError("Unknown type #" + x);
		}
	}
	,typeStructSize: function() {
		return this.align.ptrSize * 4;
	}
	,typeFromAddr: function(p) {
		var b = this.jit.allTypes;
		var high = p.high - b.high | 0;
		var low = p.low - b.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(p.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var x_high = high;
		var x_low = low;
		if(x_high != x_low >> 31) {
			throw new js__$Boot_HaxeError("Overflow");
		}
		var tid = x_low / (this.align.ptrSize * 4) | 0;
		return this.module.code.types[tid];
	}
	,__class__: hld_Eval
};
var hld__$JitInfo_DebugFlag = $hxEnums["hld._JitInfo.DebugFlag"] = { __ename__ : true, __constructs__ : ["Is64","Bool4","Threads"]
	,Is64: {_hx_index:0,__enum__:"hld._JitInfo.DebugFlag",toString:$estr}
	,Bool4: {_hx_index:1,__enum__:"hld._JitInfo.DebugFlag",toString:$estr}
	,Threads: {_hx_index:2,__enum__:"hld._JitInfo.DebugFlag",toString:$estr}
};
var hld_JitInfo = function() {
	this.pid = 0;
};
hld_JitInfo.__name__ = true;
hld_JitInfo.prototype = {
	get_hasThreads: function() {
		if(this.oldThreadInfos == null) {
			return (this.flags & 1 << hld__$JitInfo_DebugFlag.Threads._hx_index) != 0;
		} else {
			return true;
		}
	}
	,readPointer: function() {
		if(this.is64) {
			return hld__$Pointer_Pointer_$Impl_$.make(this.input.readInt32(),this.input.readInt32());
		}
		return hld__$Pointer_Pointer_$Impl_$.make(this.input.readInt32(),0);
	}
	,read: function(input,$module) {
		this.input = input;
		this.module = $module;
		if(input.readString(3) != "HLD") {
			return false;
		}
		var version = input.readByte() - 48;
		if(version > 1) {
			return false;
		}
		var this1 = input.readInt32();
		this.flags = this1;
		this.is64 = (this.flags & 1 << hld__$JitInfo_DebugFlag.Is64._hx_index) != 0;
		this.align = new hld_Align(this.is64,(this.flags & 1 << hld__$JitInfo_DebugFlag.Bool4._hx_index) != 0 ? 4 : 1);
		if(version == 0) {
			var mainThread = input.readInt32();
			this.globals = this.readPointer();
			var debugExc = this.readPointer();
			var stackTop = this.readPointer();
			this.oldThreadInfos = { id : mainThread, stackTop : stackTop, debugExc : debugExc};
			this.hlVersion = 336;
		} else {
			this.hlVersion = input.readInt32();
			if(this.hlVersion >= 368) {
				this.pid = input.readInt32();
			}
			this.threads = this.readPointer();
			this.globals = this.readPointer();
		}
		this.codeStart = this.readPointer();
		this.codeSize = input.readInt32();
		var this2 = this.codeStart;
		var pos = this.codeSize;
		var b_high = pos >> 31;
		var b_low = pos;
		var high = this2.high + b_high | 0;
		var low = this2.low + b_low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this2.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this3 = new haxe__$Int64__$_$_$Int64(high,low);
		var this4 = this3;
		this.codeEnd = this4;
		this.allTypes = this.readPointer();
		this.functions = [];
		var structSizes = [0];
		structSizes[1] = input.readInt32();
		structSizes[2] = input.readInt32();
		structSizes[3] = input.readInt32();
		structSizes[4] = input.readInt32();
		structSizes[5] = input.readInt32();
		structSizes[6] = input.readInt32();
		structSizes[7] = input.readInt32();
		structSizes[8] = input.readInt32();
		this.align.structSizes = structSizes;
		var nfunctions = input.readInt32();
		if(nfunctions != $module.code.functions.length) {
			return false;
		}
		this.functionByCodePos = new haxe_ds_IntMap();
		var _g = 0;
		var _g1 = nfunctions;
		while(_g < _g1) {
			var i = _g++;
			var nops = input.readInt32();
			if($module.code.functions[i].debug.length >> 1 != nops) {
				return false;
			}
			var start = input.readInt32();
			var large = input.readByte() != 0;
			var offsets = input.read((nops + 1) * (large ? 4 : 2));
			this.functionByCodePos.h[start] = i;
			this.functions.push({ start : start, large : large, offsets : offsets});
		}
		return true;
	}
	,getFunctionPos: function(fidx) {
		return this.functions[fidx].start;
	}
	,getCodePos: function(fidx,pos) {
		var dbg = this.functions[fidx];
		return dbg.start + (dbg.large ? dbg.offsets.getInt32(pos << 2) : dbg.offsets.getUInt16(pos << 1));
	}
	,resolveAsmPos: function(asmPos) {
		if(asmPos < 0 || asmPos > this.codeSize) {
			return null;
		}
		var min = 0;
		var max = this.functions.length;
		while(min < max) {
			var mid = min + max >> 1;
			var p = this.functions[mid];
			if(p.start <= asmPos) {
				min = mid + 1;
			} else {
				max = mid;
			}
		}
		if(min == 0) {
			return null;
		}
		var fidx = min - 1;
		var dbg = this.functions[fidx];
		var fdebug = this.module.code.functions[fidx];
		min = 0;
		max = fdebug.debug.length >> 1;
		var relPos = asmPos - dbg.start;
		while(min < max) {
			var mid1 = min + max >> 1;
			var offset = dbg.large ? dbg.offsets.getInt32(mid1 * 4) : dbg.offsets.getUInt16(mid1 * 2);
			if(offset <= relPos) {
				min = mid1 + 1;
			} else {
				max = mid1;
			}
		}
		return { fidx : fidx, fpos : min - 1, codePos : asmPos, ebp : null};
	}
	,functionFromAddr: function(p) {
		var this1 = this.functionByCodePos;
		var b = this.codeStart;
		var high = p.high - b.high | 0;
		var low = p.low - b.low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(p.low,b.low) < 0) {
			var ret = high--;
			high = high | 0;
		}
		var x_high = high;
		var x_low = low;
		if(x_high != x_low >> 31) {
			throw new js__$Boot_HaxeError("Overflow");
		}
		return this1.h[x_low];
	}
	,__class__: hld_JitInfo
};
var hld_Module = function() {
	this.protoCache = new haxe_ds_StringMap();
	this.eprotoCache = new haxe_ds_StringMap();
	this.graphCache = new haxe_ds_IntMap();
	this.functionsIndexes = new haxe_ds_IntMap();
	this.functionRegsCache = [];
	this.methods = [];
};
hld_Module.__name__ = true;
hld_Module.prototype = {
	getMethodContext: function(fidx) {
		var f = this.code.functions[fidx];
		if(f == null) {
			return null;
		}
		return this.methods[f.findex];
	}
	,load: function(data) {
		this.code = new format_hl_Reader().read(new haxe_io_BytesInput(data));
		var _g = 0;
		var _g1 = this.code.types;
		while(_g < _g1.length) {
			var t = _g1[_g];
			++_g;
			if(t._hx_index == 11) {
				var o = t.proto;
				var _g2 = 0;
				var _g11 = o.proto;
				while(_g2 < _g11.length) {
					var f = _g11[_g2];
					++_g2;
					this.methods[f.findex] = { obj : o, field : f.name};
				}
				var _g21 = 0;
				var _g3 = o.bindings;
				while(_g21 < _g3.length) {
					var b = _g3[_g21];
					++_g21;
					this.methods[b.mid] = { obj : o, field : this.fetchField(o,b.fid).name};
				}
			}
		}
		this.fileIndexes = new haxe_ds_StringMap();
		var _g22 = 0;
		var _g31 = this.code.debugFiles.length;
		while(_g22 < _g31) {
			var i = _g22++;
			var f1 = this.code.debugFiles[i];
			var _this = this.fileIndexes;
			if(__map_reserved[f1] != null) {
				_this.setReserved(f1,i);
			} else {
				_this.h[f1] = i;
			}
			var low = f1.split("\\").join("/").toLowerCase();
			var _this1 = this.fileIndexes;
			if(__map_reserved[low] != null) {
				_this1.setReserved(low,i);
			} else {
				_this1.h[low] = i;
			}
			var fileOnly = low.split("/").pop();
			var _this2 = this.fileIndexes;
			if(!(__map_reserved[fileOnly] != null ? _this2.existsReserved(fileOnly) : _this2.h.hasOwnProperty(fileOnly))) {
				var _this3 = this.fileIndexes;
				if(__map_reserved[fileOnly] != null) {
					_this3.setReserved(fileOnly,i);
				} else {
					_this3.h[fileOnly] = i;
				}
				if(StringTools.endsWith(fileOnly,".hx")) {
					var key = HxOverrides.substr(fileOnly,0,-3);
					var _this4 = this.fileIndexes;
					if(__map_reserved[key] != null) {
						_this4.setReserved(key,i);
					} else {
						_this4.h[key] = i;
					}
				}
			}
		}
		this.functionsByFile = new haxe_ds_IntMap();
		var _g4 = 0;
		var _g5 = this.code.functions.length;
		while(_g4 < _g5) {
			var ifun = _g4++;
			var f2 = this.code.functions[ifun];
			var files_h = { };
			this.functionsIndexes.h[f2.findex] = ifun;
			var _g41 = 0;
			var _g51 = f2.debug.length >> 1;
			while(_g41 < _g51) {
				var i1 = _g41++;
				var ifile = f2.debug[i1 << 1];
				var dline = f2.debug[(i1 << 1) + 1];
				var inf = files_h[ifile];
				if(inf == null) {
					inf = { f : f2, ifun : ifun, lmin : 1000000, lmax : -1};
					files_h[ifile] = inf;
					var fl = this.functionsByFile.h[ifile];
					if(fl == null) {
						fl = [];
						this.functionsByFile.h[ifile] = fl;
					}
					fl.push(inf);
				}
				if(dline < inf.lmin) {
					inf.lmin = dline;
				}
				if(dline > inf.lmax) {
					inf.lmax = dline;
				}
			}
		}
	}
	,fetchField: function(o,fid) {
		var pl = [];
		var fcount = 0;
		while(true) {
			pl.push(o);
			fcount += o.fields.length;
			if(o.tsuper == null) {
				break;
			}
			var _g = o.tsuper;
			if(_g._hx_index == 11) {
				var s = _g.proto;
				o = s;
			} else {
				throw new js__$Boot_HaxeError("assert");
			}
		}
		if(fid < 0 || fid >= fcount) {
			return null;
		}
		var _g1 = 0;
		var _g11 = pl.length;
		while(_g1 < _g11) {
			var i = _g1++;
			var o1 = pl[pl.length - i - 1];
			if(fid < o1.fields.length) {
				return o1.fields[fid];
			}
			fid -= o1.fields.length;
		}
		return null;
	}
	,init: function(align) {
		var _gthis = this;
		this.align = align;
		var globalsPos = 0;
		this.globalsOffsets = [];
		var _g = 0;
		var _g1 = this.code.globals;
		while(_g < _g1.length) {
			var g = _g1[_g];
			++_g;
			globalsPos += align.padSize(globalsPos,g);
			this.globalsOffsets.push(globalsPos);
			globalsPos += align.typeSize(g);
		}
		this.globalTable = { sub : new haxe_ds_StringMap(), gid : null};
		var addGlobal = function(path,gid) {
			var t = _gthis.globalTable;
			var _g2 = 0;
			while(_g2 < path.length) {
				var p = path[_g2];
				++_g2;
				if(t.sub == null) {
					t.sub = new haxe_ds_StringMap();
				}
				var _this = t.sub;
				var next = __map_reserved[p] != null ? _this.getReserved(p) : _this.h[p];
				if(next == null) {
					next = { sub : null, gid : null};
					var _this1 = t.sub;
					if(__map_reserved[p] != null) {
						_this1.setReserved(p,next);
					} else {
						_this1.h[p] = next;
					}
				}
				t = next;
			}
			t.gid = gid;
		};
		var _g21 = 0;
		var _g3 = this.code.types;
		while(_g21 < _g3.length) {
			var t1 = _g3[_g21];
			++_g21;
			switch(t1._hx_index) {
			case 11:
				var o = t1.proto;
				if(o.globalValue != null) {
					addGlobal(o.name.split("."),o.globalValue);
				}
				break;
			case 18:
				var e = t1.proto;
				if(e.globalValue != null) {
					addGlobal(e.name.split("."),e.globalValue);
				}
				break;
			default:
			}
		}
	}
	,getObjectProto: function(o) {
		var key = o.name;
		var _this = this.protoCache;
		var p = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(p != null) {
			return p;
		}
		var parent;
		if(o.tsuper == null) {
			parent = null;
		} else {
			var _g = o.tsuper;
			if(_g._hx_index == 11) {
				var o1 = _g.proto;
				parent = this.getObjectProto(o1);
			} else {
				throw new js__$Boot_HaxeError("assert");
			}
		}
		var size = parent == null ? this.align.ptrSize : parent.size;
		var fields;
		if(parent == null) {
			fields = new haxe_ds_StringMap();
		} else {
			var _g1 = new haxe_ds_StringMap();
			var k = parent.fields.keys();
			while(k.hasNext()) {
				var k1 = k.next();
				var _this1 = parent.fields;
				var value = __map_reserved[k1] != null ? _this1.getReserved(k1) : _this1.h[k1];
				if(__map_reserved[k1] != null) {
					_g1.setReserved(k1,value);
				} else {
					_g1.h[k1] = value;
				}
			}
			fields = _g1;
		}
		var _g2 = 0;
		var _g11 = o.fields;
		while(_g2 < _g11.length) {
			var f = _g11[_g2];
			++_g2;
			size += this.align.padStruct(size,f.t);
			var key1 = f.name;
			var value1 = { name : f.name, t : f.t, offset : size};
			if(__map_reserved[key1] != null) {
				fields.setReserved(key1,value1);
			} else {
				fields.h[key1] = value1;
			}
			size += this.align.typeSize(f.t);
		}
		var o2 = o.name;
		var _g21 = [];
		var _g3 = 0;
		var _g4 = o.fields;
		while(_g3 < _g4.length) {
			var o3 = _g4[_g3];
			++_g3;
			_g21.push(o3.name);
		}
		p = { name : o2, size : size, parent : parent, fields : fields, fieldNames : _g21};
		var key2 = p.name;
		var _this2 = this.protoCache;
		if(__map_reserved[key2] != null) {
			_this2.setReserved(key2,p);
		} else {
			_this2.h[key2] = p;
		}
		return p;
	}
	,getEnumProto: function(e) {
		var key = e.name;
		var _this = this.eprotoCache;
		var p = __map_reserved[key] != null ? _this.getReserved(key) : _this.h[key];
		if(p != null) {
			return p;
		}
		p = [];
		var _g = 0;
		var _g1 = e.constructs;
		while(_g < _g1.length) {
			var c = _g1[_g];
			++_g;
			var size = this.align.ptrSize;
			size += this.align.padStruct(size,format_hl_HLType.HI32);
			size += 4;
			var params = [];
			var _g2 = 0;
			var _g11 = c.params;
			while(_g2 < _g11.length) {
				var t = _g11[_g2];
				++_g2;
				size += this.align.padStruct(size,t);
				params.push({ offset : size, t : t});
				size += this.align.typeSize(t);
			}
			p.push({ name : c.name, size : size, params : params});
		}
		var key1 = e.name;
		var _this1 = this.eprotoCache;
		if(__map_reserved[key1] != null) {
			_this1.setReserved(key1,p);
		} else {
			_this1.h[key1] = p;
		}
		return p;
	}
	,resolveGlobal: function(path) {
		var g = this.globalTable;
		while(path.length > 0) {
			if(g.sub == null) {
				break;
			}
			var p = path[0];
			var _this = g.sub;
			var n = __map_reserved[p] != null ? _this.getReserved(p) : _this.h[p];
			if(n == null) {
				break;
			}
			path.shift();
			g = n;
		}
		if(g == this.globalTable || g.gid == null) {
			return null;
		} else {
			return { type : this.code.globals[g.gid], offset : this.globalsOffsets[g.gid]};
		}
	}
	,getFileFunctions: function(file) {
		var _this = this.fileIndexes;
		var ifile = __map_reserved[file] != null ? _this.getReserved(file) : _this.h[file];
		if(ifile == null) {
			var this1 = this.fileIndexes;
			var key = file.split("\\").join("/").toLowerCase();
			var _this1 = this1;
			ifile = __map_reserved[key] != null ? _this1.getReserved(key) : _this1.h[key];
		}
		if(ifile == null) {
			return null;
		}
		var functions = this.functionsByFile.h[ifile];
		if(functions == null) {
			return null;
		}
		return { functions : functions, fidx : ifile};
	}
	,getBreaks: function(file,line) {
		var ffuns = this.getFileFunctions(file);
		if(ffuns == null) {
			return null;
		}
		var breaks = [];
		var funs = ffuns.functions;
		var matched = [];
		while(breaks.length == 0 && funs.length > 0) {
			var _g = 0;
			while(_g < funs.length) {
				var f = funs[_g];
				++_g;
				if(f.lmin > line || f.lmax < line) {
					continue;
				}
				matched.push(f);
				var ifun = f.ifun;
				var f1 = f.f;
				var i = 0;
				var len = f1.debug.length >> 1;
				while(i < len) {
					var dfile = f1.debug[i << 1];
					if(dfile != ffuns.fidx) {
						++i;
						continue;
					}
					var dline = f1.debug[(i << 1) + 1];
					if(dline != line) {
						++i;
						continue;
					}
					breaks.push({ ifun : ifun, pos : i});
					++i;
					while(i < len) {
						var dfile1 = f1.debug[i << 1];
						var dline1 = f1.debug[(i << 1) + 1];
						if(dfile1 == ffuns.fidx && dline1 != line) {
							break;
						}
						++i;
					}
				}
			}
			if(breaks.length == 0) {
				funs = matched;
				matched = [];
				++line;
			}
		}
		return { breaks : breaks, line : line};
	}
	,resolveSymbol: function(fidx,fpos) {
		var f = this.code.functions[fidx];
		var fid = f.debug[fpos << 1];
		var fline = f.debug[(fpos << 1) + 1];
		return { file : this.code.debugFiles[fid], line : fline};
	}
	,getFunctionRegs: function(fidx) {
		var regs = this.functionRegsCache[fidx];
		if(regs != null) {
			return regs;
		}
		var f = this.code.functions[fidx];
		var nargs;
		var _g = f.t;
		if(_g._hx_index == 10) {
			var f1 = _g.fun;
			nargs = f1.args.length;
		} else {
			throw new js__$Boot_HaxeError("assert");
		}
		regs = [];
		var argsSize = 0;
		var size = 0;
		var _g1 = 0;
		var _g2 = nargs;
		while(_g1 < _g2) {
			var i = _g1++;
			if(this.align.is64) {
				throw new js__$Boot_HaxeError("TODO : handle x64 calling conventions");
			}
			var t = f.regs[i];
			regs[i] = { t : t, offset : argsSize + this.align.ptrSize * 2};
			argsSize += this.align.stackSize(t);
		}
		var _g3 = nargs;
		var _g4 = f.regs.length;
		while(_g3 < _g4) {
			var i1 = _g3++;
			var t1 = f.regs[i1];
			size += this.align.typeSize(t1);
			size += this.align.padSize(size,t1);
			regs[i1] = { t : t1, offset : -size};
		}
		this.functionRegsCache[fidx] = regs;
		return regs;
	}
	,reverseHash: function(h) {
		if(this.reversedHashes == null) {
			this.reversedHashes = new haxe_ds_IntMap();
			var _g = 0;
			var _g1 = this.code.strings;
			while(_g < _g1.length) {
				var s = _g1[_g];
				++_g;
				var this1 = this.reversedHashes;
				var key = format_hl_Tools.hash(s);
				this1.h[key] = s;
			}
		}
		return this.reversedHashes.h[h];
	}
	,getGraph: function(fidx) {
		var g = this.graphCache.h[fidx];
		if(g != null) {
			return g;
		}
		g = new hld_CodeGraph(this.code,this.code.functions[fidx]);
		this.graphCache.h[fidx] = g;
		return g;
	}
	,__class__: hld_Module
};
var hld_NodeDebugApi = function(pid,is64) {
	this.hthreads = new haxe_ds_IntMap();
	this.pid = pid;
	this.is64 = is64;
	this.isNode64 = process.arch == "x64";
	if(!this.isNode64 && is64) {
		throw new js__$Boot_HaxeError("Can't debug HL 64 bit process with Node 32 bit host");
	}
	this.tmp = hld__$Buffer_Buffer_$Impl_$._new(8);
	this.tmpByte = hld__$Buffer_Buffer_$Impl_$._new(4);
	this.winApi = hld_NodeFFI.Library("Kernel32.dll",{ DebugActiveProcess : ["bool",["int"]], DebugActiveProcessStop : ["bool",["int"]], DebugBreakProcess : ["bool",["pointer"]], WaitForDebugEvent : ["bool",["pointer","int"]], ContinueDebugEvent : ["bool",["int","int","int"]], GetThreadContext : ["bool",["pointer","pointer"]], SetThreadContext : ["bool",["pointer","pointer"]], OpenThread : ["pointer",["int","int","int"]], OpenProcess : ["pointer",["int","int","int"]], ReadProcessMemory : ["bool",["pointer","pointer","pointer","size_t","pointer"]], WriteProcessMemory : ["bool",["pointer","pointer","pointer","size_t","pointer"]], FlushInstructionCache : ["bool",["pointer","pointer","size_t"]]});
	if(this.isNode64 && !is64) {
		var wow64 = hld_NodeFFI.Library("Kernel32.dll",{ Wow64GetThreadContext : ["bool",["pointer","pointer"]], Wow64SetThreadContext : ["bool",["pointer","pointer"]]});
		this.winApi.GetThreadContext = wow64.Wow64GetThreadContext;
		this.winApi.SetThreadContext = wow64.Wow64SetThreadContext;
	}
	this.phandle = this.winApi.OpenProcess(2097151,0,pid);
	var dev = hld__$NodeFFI_CStruct_$Impl_$._new();
	dev.defineProperty("debugEventCode","int");
	dev.defineProperty("processId","int");
	dev.defineProperty("threadId","int");
	if(this.isNode64) {
		dev.defineProperty("_align","int");
	}
	dev.defineProperty("exceptionCode","int");
	var _g = 0;
	var _g1 = 39;
	while(_g < _g1) {
		var i = _g++;
		dev.defineProperty("pad" + i,"int");
	}
	this.context = new js_node_buffer_Buffer(2048);
	var flagsPos = is64 ? 48 : 0;
	var flags = 27;
	if(is64) {
		flags |= 1048576;
	}
	this.context.writeUInt32LE(flags,flagsPos);
	this.regPositions = is64 ? [152,160,248,68,72,80,88,96,104,112] : [196,180,184,192,4,8,12,16,20,24];
	this.debugEvent = new dev([{ }]);
};
hld_NodeDebugApi.__name__ = true;
hld_NodeDebugApi.__interfaces__ = [hld_Api];
hld_NodeDebugApi.prototype = {
	start: function() {
		return this.winApi.DebugActiveProcess(this.pid);
	}
	,stop: function() {
		this.winApi.DebugActiveProcessStop(this.pid);
	}
	,breakpoint: function() {
		return this.winApi.DebugBreakProcess(this.phandle);
	}
	,makePointer: function(ptr) {
		this.tmp.writeInt32LE(ptr.low,0);
		this.tmp.writeInt32LE(ptr.high,4);
		return hld_Ref.readPointer(this.tmp,0);
	}
	,read: function(ptr,buffer,size) {
		return this.winApi.ReadProcessMemory(this.phandle,this.makePointer(ptr),buffer,size,null);
	}
	,readByte: function(ptr,pos) {
		var b_high = pos >> 31;
		var b_low = pos;
		var high = ptr.high + b_high | 0;
		var low = ptr.low + b_low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,ptr.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		if(!this.read(this2,this.tmpByte,1)) {
			throw new js__$Boot_HaxeError("Failed to read process memory");
		}
		return this.tmpByte.readUInt8(0);
	}
	,write: function(ptr,buffer,size) {
		return this.winApi.WriteProcessMemory(this.phandle,this.makePointer(ptr),buffer,size,null);
	}
	,writeByte: function(ptr,pos,value) {
		this.tmpByte.writeInt32LE(value,0);
		var b_high = pos >> 31;
		var b_low = pos;
		var high = ptr.high + b_high | 0;
		var low = ptr.low + b_low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,ptr.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		if(!this.write(this2,this.tmpByte,1)) {
			throw new js__$Boot_HaxeError("Failed to write process memory");
		}
	}
	,flush: function(ptr,size) {
		return this.winApi.FlushInstructionCache(this.phandle,this.makePointer(ptr),size);
	}
	,wait: function(timeout) {
		var e = this.debugEvent;
		if(!this.winApi.WaitForDebugEvent(e.ref(),timeout)) {
			return { r : -1, tid : 0};
		}
		var e1 = e;
		var tid = e1.threadId;
		var result;
		switch(e1.debugEventCode) {
		case 1:
			switch(e1.exceptionCode) {
			case -529697949:
				this.winApi.ContinueDebugEvent(this.pid,tid,-2147418111);
				result = 4;
				break;
			case -2147483644:case 1073741854:
				result = 2;
				break;
			case -2147483645:case 1073741855:
				result = 1;
				break;
			case 1080890248:
				this.resume(tid);
				result = 4;
				break;
			default:
				var v = "Unknown error 0x" + StringTools.hex(e1.exceptionCode);
				process.stdout.write(Std.string(v));
				process.stdout.write("\n");
				result = 3;
			}
			break;
		case 5:
			result = 0;
			break;
		default:
			this.resume(tid);
			result = 4;
		}
		return { r : result, tid : tid};
	}
	,openThread: function(tid) {
		var th = this.hthreads.h[tid];
		if(th != null) {
			return th;
		}
		th = this.winApi.OpenThread(2097151,0,tid);
		this.hthreads.h[tid] = th;
		return th;
	}
	,resume: function(tid) {
		return this.winApi.ContinueDebugEvent(this.pid,tid,65538);
	}
	,readRegister: function(tid,register) {
		if(!this.winApi.GetThreadContext(this.openThread(tid),this.context)) {
			throw new js__$Boot_HaxeError("Failed to read registers for thread " + tid);
		}
		var pos = this.regPositions[register];
		if(register == 3) {
			return hld__$Pointer_Pointer_$Impl_$.make(this.context.readUInt16LE(pos),0);
		}
		if(!this.is64) {
			return hld__$Pointer_Pointer_$Impl_$.make(this.context.readInt32LE(pos),0);
		}
		return hld__$Pointer_Pointer_$Impl_$.make(this.context.readInt32LE(pos),this.context.readInt32LE(pos + 4));
	}
	,writeRegister: function(tid,register,v) {
		if(!this.winApi.GetThreadContext(this.openThread(tid),this.context)) {
			return false;
		}
		var pos = this.regPositions[register];
		if(register == 3) {
			this.context.writeUInt16LE(hld__$Pointer_Pointer_$Impl_$.toInt(v),pos);
		}
		this.context.writeInt32LE(v.low,pos);
		if(this.is64) {
			this.context.writeInt32LE(v.high,pos + 4);
		}
		return this.winApi.SetThreadContext(this.openThread(tid),this.context);
	}
	,__class__: hld_NodeDebugApi
};
var hld_NodeDebugApiLinux = function(pid,is64) {
	this.pid = pid;
	this.is64 = is64;
	this.isNode64 = process.arch == "x64";
	if(!this.isNode64 || !is64) {
		throw new js__$Boot_HaxeError("Can't debug when HL or Node is 32 bit");
	}
	this.tmp = hld__$Buffer_Buffer_$Impl_$._new(8);
	this.tmpByte = hld__$Buffer_Buffer_$Impl_$._new(4);
	this.libc = hld_NodeFFI.Library("libc",{ ptrace : ["pointer",["int","int","pointer","pointer"]], waitpid : ["int",["int","pointer","int"]]});
};
hld_NodeDebugApiLinux.__name__ = true;
hld_NodeDebugApiLinux.__interfaces__ = [hld_Api];
hld_NodeDebugApiLinux.WIFEXITED = function(status) {
	return (status & 127) == 0;
};
hld_NodeDebugApiLinux.WIFSTOPPED = function(status) {
	return (status & 127) == 127;
};
hld_NodeDebugApiLinux.WSTOPSIG = function(status) {
	return status >> 8;
};
hld_NodeDebugApiLinux.prototype = {
	start: function() {
		return this.libc.ptrace(16,this.pid,null,null).address() >= 0;
	}
	,stop: function() {
		this.libc.ptrace(17,this.pid,null,null);
	}
	,breakpoint: function() {
		throw new js__$Boot_HaxeError("BREAK");
	}
	,makePointer: function(ptr) {
		this.tmp.writeInt32LE(ptr.low,0);
		this.tmp.writeInt32LE(ptr.high,4);
		return hld_Ref.readPointer(this.tmp,0);
	}
	,intPtr: function(i) {
		var this1 = new haxe__$Int64__$_$_$Int64(i >> 31,i);
		return this.makePointer(hld__$Pointer_Pointer_$Impl_$.ofPtr(this1));
	}
	,read: function(ptr,buffer,size) {
		var pos = 0;
		while(size > 0) {
			var v = this.libc;
			var v1 = this.pid;
			var b_high = pos >> 31;
			var b_low = pos;
			var high = ptr.high + b_high | 0;
			var low = ptr.low + b_low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,ptr.low) < 0) {
				var ret = high++;
				high = high | 0;
			}
			var this1 = new haxe__$Int64__$_$_$Int64(high,low);
			var this2 = this1;
			var v2 = v.ptrace(2,v1,this.makePointer(this2),null);
			if(size >= 8) {
				var a = v2.ref();
				buffer.writeInt32LE(a.readInt32LE(0),pos);
				buffer.writeInt32LE(a.readInt32LE(4),pos + 4);
				pos += 8;
			} else {
				var a1 = v2.ref();
				var apos = 0;
				if(size >= 4) {
					buffer.writeInt32LE(a1.readInt32LE(apos),pos);
					pos += 4;
					apos += 4;
					size -= 4;
				}
				if(size >= 2) {
					buffer.writeUInt16LE(a1.readUInt16LE(apos),pos);
					pos += 2;
					apos += 2;
					size -= 2;
				}
				if(size >= 1) {
					buffer.writeUInt8(a1.readUInt8(apos),pos);
				}
				break;
			}
			size -= 8;
		}
		return true;
	}
	,readByte: function(ptr,pos) {
		var b_high = pos >> 31;
		var b_low = pos;
		var high = ptr.high + b_high | 0;
		var low = ptr.low + b_low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,ptr.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		if(!this.read(this2,this.tmpByte,1)) {
			throw new js__$Boot_HaxeError("Failed to read process memory");
		}
		return this.tmpByte.readUInt8(0);
	}
	,write: function(ptr,buffer,size) {
		var pos = 0;
		while(size > 0) {
			var sz = size >= 8 ? 8 : size;
			var v = null;
			var b_high = pos >> 31;
			var b_low = pos;
			var high = ptr.high + b_high | 0;
			var low = ptr.low + b_low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(low,ptr.low) < 0) {
				var ret = high++;
				high = high | 0;
			}
			var this1 = new haxe__$Int64__$_$_$Int64(high,low);
			var this2 = this1;
			var addr = this.makePointer(this2);
			if(sz < 8) {
				v = this.libc.ptrace(2,this.pid,addr,null);
				v = v.ref();
				var _g = 0;
				var _g1 = sz;
				while(_g < _g1) {
					var i = _g++;
					v.writeUInt8(buffer.readUInt8(pos++),i);
				}
				v = v.deref();
			} else {
				v = this.makePointer(hld__$Pointer_Pointer_$Impl_$.make(buffer.readInt32LE(pos),buffer.readInt32LE(pos + 4)));
			}
			if(this.libc.ptrace(5,this.pid,addr,v).address() < 0) {
				return false;
			}
			pos += sz;
			size -= sz;
		}
		return true;
	}
	,writeByte: function(ptr,pos,value) {
		this.tmpByte.writeInt32LE(value,0);
		var b_high = pos >> 31;
		var b_low = pos;
		var high = ptr.high + b_high | 0;
		var low = ptr.low + b_low | 0;
		if(haxe__$Int32_Int32_$Impl_$.ucompare(low,ptr.low) < 0) {
			var ret = high++;
			high = high | 0;
		}
		var this1 = new haxe__$Int64__$_$_$Int64(high,low);
		var this2 = this1;
		if(!this.write(this2,this.tmpByte,1)) {
			throw new js__$Boot_HaxeError("Failed to write process memory");
		}
	}
	,flush: function(ptr,size) {
		return true;
	}
	,wait: function(timeout) {
		var tid = this.libc.waitpid(this.pid,this.tmp,0);
		var status = this.tmp.readInt32LE(0);
		var kind = 3;
		if(hld_NodeDebugApiLinux.WIFEXITED(status)) {
			kind = 0;
		} else if(hld_NodeDebugApiLinux.WIFSTOPPED(status)) {
			var sig = hld_NodeDebugApiLinux.WSTOPSIG(status);
			if(sig == 19 || sig == 5) {
				kind = 1;
			}
		}
		return { r : kind, tid : tid};
	}
	,resume: function(tid) {
		return this.libc.ptrace(7,this.pid,null,null).address() >= 0;
	}
	,readRegister: function(tid,register) {
		var v = this.libc.ptrace(3,tid,this.intPtr(hld_NodeDebugApiLinux.REG_ADDR[register] * 8),null);
		var a = v.ref();
		return hld__$Pointer_Pointer_$Impl_$.make(a.readInt32LE(0),a.readInt32LE(4));
	}
	,writeRegister: function(tid,register,v) {
		return this.libc.ptrace(6,tid,this.intPtr(hld_NodeDebugApiLinux.REG_ADDR[register] * 8),this.makePointer(v)).address() >= 0;
	}
	,__class__: hld_NodeDebugApiLinux
};
var hld__$NodeFFI_CType_$Impl_$ = {};
hld__$NodeFFI_CType_$Impl_$.__name__ = true;
hld__$NodeFFI_CType_$Impl_$._new = function(v) {
	var this1 = v;
	return this1;
};
hld__$NodeFFI_CType_$Impl_$.get_self = function(this1) {
	var this2 = this1;
	return this2;
};
hld__$NodeFFI_CType_$Impl_$.ref = function(this1) {
	var this2 = this1;
	return hld_Ref.refType(this2);
};
hld__$NodeFFI_CType_$Impl_$.alloc = function(this1) {
	var this2 = this1;
	return hld_Ref.alloc(this2);
};
var js_node_buffer_Buffer = require("buffer").Buffer;
var hld__$NodeFFI_CStruct_$Impl_$ = {};
hld__$NodeFFI_CStruct_$Impl_$.__name__ = true;
hld__$NodeFFI_CStruct_$Impl_$._new = function() {
	var this1 = (require("ref-struct"))();
	return this1;
};
hld__$NodeFFI_CStruct_$Impl_$.defineProperty = function(this1,name,t) {
	this1.defineProperty(name,t);
};
hld__$NodeFFI_CStruct_$Impl_$.alloc = function(this1,obj) {
	return new this1([obj]);
};
var hld_Ref = require("ref");
var hld_NodeFFI = require("ffi");
var hld__$Pointer_Pointer_$Impl_$ = {};
hld__$Pointer_Pointer_$Impl_$.__name__ = true;
hld__$Pointer_Pointer_$Impl_$._new = function(b) {
	var this1 = b;
	return this1;
};
hld__$Pointer_Pointer_$Impl_$.get_i64 = function(this1) {
	return this1;
};
hld__$Pointer_Pointer_$Impl_$.offset = function(this1,pos) {
	var b_high = pos >> 31;
	var b_low = pos;
	var high = this1.high + b_high | 0;
	var low = this1.low + b_low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(low,this1.low) < 0) {
		var ret = high++;
		high = high | 0;
	}
	var this2 = new haxe__$Int64__$_$_$Int64(high,low);
	var this3 = this2;
	return this3;
};
hld__$Pointer_Pointer_$Impl_$.sub = function(this1,p) {
	var b = p;
	var high = this1.high - b.high | 0;
	var low = this1.low - b.low | 0;
	if(haxe__$Int32_Int32_$Impl_$.ucompare(this1.low,b.low) < 0) {
		var ret = high--;
		high = high | 0;
	}
	var x_high = high;
	var x_low = low;
	if(x_high != x_low >> 31) {
		throw new js__$Boot_HaxeError("Overflow");
	}
	return x_low;
};
hld__$Pointer_Pointer_$Impl_$.toInt = function(this1) {
	return this1.low;
};
hld__$Pointer_Pointer_$Impl_$.isNull = function(this1) {
	if(this1 != null) {
		if(this1.low == 0) {
			return this1.high == 0;
		} else {
			return false;
		}
	} else {
		return true;
	}
};
hld__$Pointer_Pointer_$Impl_$.opGt = function(a,b) {
	var a1 = a;
	var b1 = b;
	var v = a1.high - b1.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b1.low);
	return (a1.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) > 0;
};
hld__$Pointer_Pointer_$Impl_$.opLt = function(a,b) {
	var a1 = a;
	var b1 = b;
	var v = a1.high - b1.high | 0;
	v = v != 0 ? v : haxe__$Int32_Int32_$Impl_$.ucompare(a1.low,b1.low);
	return (a1.high < 0 ? b1.high < 0 ? v : -1 : b1.high >= 0 ? v : 1) < 0;
};
hld__$Pointer_Pointer_$Impl_$.toString = function(this1) {
	if(this1.high == 0) {
		return "0x" + StringTools.hex(this1.low);
	}
	return "0x" + StringTools.hex(this1.high) + StringTools.hex(this1.low,8);
};
hld__$Pointer_Pointer_$Impl_$.ofPtr = function(p) {
	return p;
};
hld__$Pointer_Pointer_$Impl_$.make = function(low,high) {
	var this1 = new haxe__$Int64__$_$_$Int64(high,low);
	var this2 = this1;
	return this2;
};
var hld_ValueRepr = $hxEnums["hld.ValueRepr"] = { __ename__ : true, __constructs__ : ["VUndef","VNull","VInt","VFloat","VBool","VPointer","VString","VClosure","VFunction","VArray","VMap","VType","VEnum","VBytes"]
	,VUndef: {_hx_index:0,__enum__:"hld.ValueRepr",toString:$estr}
	,VNull: {_hx_index:1,__enum__:"hld.ValueRepr",toString:$estr}
	,VInt: ($_=function(i) { return {_hx_index:2,i:i,__enum__:"hld.ValueRepr",toString:$estr}; },$_.__params__ = ["i"],$_)
	,VFloat: ($_=function(v) { return {_hx_index:3,v:v,__enum__:"hld.ValueRepr",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VBool: ($_=function(b) { return {_hx_index:4,b:b,__enum__:"hld.ValueRepr",toString:$estr}; },$_.__params__ = ["b"],$_)
	,VPointer: ($_=function(v) { return {_hx_index:5,v:v,__enum__:"hld.ValueRepr",toString:$estr}; },$_.__params__ = ["v"],$_)
	,VString: ($_=function(v,p) { return {_hx_index:6,v:v,p:p,__enum__:"hld.ValueRepr",toString:$estr}; },$_.__params__ = ["v","p"],$_)
	,VClosure: ($_=function(f,d,p) { return {_hx_index:7,f:f,d:d,p:p,__enum__:"hld.ValueRepr",toString:$estr}; },$_.__params__ = ["f","d","p"],$_)
	,VFunction: ($_=function(f,p) { return {_hx_index:8,f:f,p:p,__enum__:"hld.ValueRepr",toString:$estr}; },$_.__params__ = ["f","p"],$_)
	,VArray: ($_=function(t,length,read,p) { return {_hx_index:9,t:t,length:length,read:read,p:p,__enum__:"hld.ValueRepr",toString:$estr}; },$_.__params__ = ["t","length","read","p"],$_)
	,VMap: ($_=function(tkey,nkeys,readKey,readValue,p) { return {_hx_index:10,tkey:tkey,nkeys:nkeys,readKey:readKey,readValue:readValue,p:p,__enum__:"hld.ValueRepr",toString:$estr}; },$_.__params__ = ["tkey","nkeys","readKey","readValue","p"],$_)
	,VType: ($_=function(t) { return {_hx_index:11,t:t,__enum__:"hld.ValueRepr",toString:$estr}; },$_.__params__ = ["t"],$_)
	,VEnum: ($_=function(c,values,p) { return {_hx_index:12,c:c,values:values,p:p,__enum__:"hld.ValueRepr",toString:$estr}; },$_.__params__ = ["c","values","p"],$_)
	,VBytes: ($_=function(length,read,p) { return {_hx_index:13,length:length,read:read,p:p,__enum__:"hld.ValueRepr",toString:$estr}; },$_.__params__ = ["length","read","p"],$_)
};
var hld_FunRepr = $hxEnums["hld.FunRepr"] = { __ename__ : true, __constructs__ : ["FUnknown","FIndex"]
	,FUnknown: ($_=function(p) { return {_hx_index:0,p:p,__enum__:"hld.FunRepr",toString:$estr}; },$_.__params__ = ["p"],$_)
	,FIndex: ($_=function(i) { return {_hx_index:1,i:i,__enum__:"hld.FunRepr",toString:$estr}; },$_.__params__ = ["i"],$_)
};
var hscript_Const = $hxEnums["hscript.Const"] = { __ename__ : true, __constructs__ : ["CInt","CFloat","CString"]
	,CInt: ($_=function(v) { return {_hx_index:0,v:v,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["v"],$_)
	,CFloat: ($_=function(f) { return {_hx_index:1,f:f,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["f"],$_)
	,CString: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Const",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var hscript_Expr = $hxEnums["hscript.Expr"] = { __ename__ : true, __constructs__ : ["EConst","EIdent","EVar","EParent","EBlock","EField","EBinop","EUnop","ECall","EIf","EWhile","EFor","EBreak","EContinue","EFunction","EReturn","EArray","EArrayDecl","ENew","EThrow","ETry","EObject","ETernary","ESwitch","EDoWhile","EMeta"]
	,EConst: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["c"],$_)
	,EIdent: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EVar: ($_=function(n,t,e) { return {_hx_index:2,n:n,t:t,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["n","t","e"],$_)
	,EParent: ($_=function(e) { return {_hx_index:3,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EBlock: ($_=function(e) { return {_hx_index:4,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EField: ($_=function(e,f) { return {_hx_index:5,e:e,f:f,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","f"],$_)
	,EBinop: ($_=function(op,e1,e2) { return {_hx_index:6,op:op,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["op","e1","e2"],$_)
	,EUnop: ($_=function(op,prefix,e) { return {_hx_index:7,op:op,prefix:prefix,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["op","prefix","e"],$_)
	,ECall: ($_=function(e,params) { return {_hx_index:8,e:e,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","params"],$_)
	,EIf: ($_=function(cond,e1,e2) { return {_hx_index:9,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e1","e2"],$_)
	,EWhile: ($_=function(cond,e) { return {_hx_index:10,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e"],$_)
	,EFor: ($_=function(v,it,e) { return {_hx_index:11,v:v,it:it,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["v","it","e"],$_)
	,EBreak: {_hx_index:12,__enum__:"hscript.Expr",toString:$estr}
	,EContinue: {_hx_index:13,__enum__:"hscript.Expr",toString:$estr}
	,EFunction: ($_=function(args,e,name,ret) { return {_hx_index:14,args:args,e:e,name:name,ret:ret,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["args","e","name","ret"],$_)
	,EReturn: ($_=function(e) { return {_hx_index:15,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,EArray: ($_=function(e,index) { return {_hx_index:16,e:e,index:index,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","index"],$_)
	,EArrayDecl: ($_=function(e) { return {_hx_index:17,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,ENew: ($_=function(cl,params) { return {_hx_index:18,cl:cl,params:params,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cl","params"],$_)
	,EThrow: ($_=function(e) { return {_hx_index:19,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e"],$_)
	,ETry: ($_=function(e,v,t,ecatch) { return {_hx_index:20,e:e,v:v,t:t,ecatch:ecatch,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","v","t","ecatch"],$_)
	,EObject: ($_=function(fl) { return {_hx_index:21,fl:fl,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["fl"],$_)
	,ETernary: ($_=function(cond,e1,e2) { return {_hx_index:22,cond:cond,e1:e1,e2:e2,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e1","e2"],$_)
	,ESwitch: ($_=function(e,cases,defaultExpr) { return {_hx_index:23,e:e,cases:cases,defaultExpr:defaultExpr,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["e","cases","defaultExpr"],$_)
	,EDoWhile: ($_=function(cond,e) { return {_hx_index:24,cond:cond,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["cond","e"],$_)
	,EMeta: ($_=function(name,args,e) { return {_hx_index:25,name:name,args:args,e:e,__enum__:"hscript.Expr",toString:$estr}; },$_.__params__ = ["name","args","e"],$_)
};
var hscript_CType = $hxEnums["hscript.CType"] = { __ename__ : true, __constructs__ : ["CTPath","CTFun","CTAnon","CTParent"]
	,CTPath: ($_=function(path,params) { return {_hx_index:0,path:path,params:params,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["path","params"],$_)
	,CTFun: ($_=function(args,ret) { return {_hx_index:1,args:args,ret:ret,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["args","ret"],$_)
	,CTAnon: ($_=function(fields) { return {_hx_index:2,fields:fields,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["fields"],$_)
	,CTParent: ($_=function(t) { return {_hx_index:3,t:t,__enum__:"hscript.CType",toString:$estr}; },$_.__params__ = ["t"],$_)
};
var hscript_Error = $hxEnums["hscript.Error"] = { __ename__ : true, __constructs__ : ["EInvalidChar","EUnexpected","EUnterminatedString","EUnterminatedComment","EInvalidPreprocessor","EUnknownVariable","EInvalidIterator","EInvalidOp","EInvalidAccess","ECustom"]
	,EInvalidChar: ($_=function(c) { return {_hx_index:0,c:c,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["c"],$_)
	,EUnexpected: ($_=function(s) { return {_hx_index:1,s:s,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["s"],$_)
	,EUnterminatedString: {_hx_index:2,__enum__:"hscript.Error",toString:$estr}
	,EUnterminatedComment: {_hx_index:3,__enum__:"hscript.Error",toString:$estr}
	,EInvalidPreprocessor: ($_=function(msg) { return {_hx_index:4,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["msg"],$_)
	,EUnknownVariable: ($_=function(v) { return {_hx_index:5,v:v,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EInvalidIterator: ($_=function(v) { return {_hx_index:6,v:v,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["v"],$_)
	,EInvalidOp: ($_=function(op) { return {_hx_index:7,op:op,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["op"],$_)
	,EInvalidAccess: ($_=function(f) { return {_hx_index:8,f:f,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["f"],$_)
	,ECustom: ($_=function(msg) { return {_hx_index:9,msg:msg,__enum__:"hscript.Error",toString:$estr}; },$_.__params__ = ["msg"],$_)
};
var hscript_ModuleDecl = $hxEnums["hscript.ModuleDecl"] = { __ename__ : true, __constructs__ : ["DPackage","DImport","DClass","DTypedef"]
	,DPackage: ($_=function(path) { return {_hx_index:0,path:path,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["path"],$_)
	,DImport: ($_=function(path,everything) { return {_hx_index:1,path:path,everything:everything,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["path","everything"],$_)
	,DClass: ($_=function(c) { return {_hx_index:2,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["c"],$_)
	,DTypedef: ($_=function(c) { return {_hx_index:3,c:c,__enum__:"hscript.ModuleDecl",toString:$estr}; },$_.__params__ = ["c"],$_)
};
var hscript_FieldAccess = $hxEnums["hscript.FieldAccess"] = { __ename__ : true, __constructs__ : ["APublic","APrivate","AInline","AOverride","AStatic","AMacro"]
	,APublic: {_hx_index:0,__enum__:"hscript.FieldAccess",toString:$estr}
	,APrivate: {_hx_index:1,__enum__:"hscript.FieldAccess",toString:$estr}
	,AInline: {_hx_index:2,__enum__:"hscript.FieldAccess",toString:$estr}
	,AOverride: {_hx_index:3,__enum__:"hscript.FieldAccess",toString:$estr}
	,AStatic: {_hx_index:4,__enum__:"hscript.FieldAccess",toString:$estr}
	,AMacro: {_hx_index:5,__enum__:"hscript.FieldAccess",toString:$estr}
};
var hscript_FieldKind = $hxEnums["hscript.FieldKind"] = { __ename__ : true, __constructs__ : ["KFunction","KVar"]
	,KFunction: ($_=function(f) { return {_hx_index:0,f:f,__enum__:"hscript.FieldKind",toString:$estr}; },$_.__params__ = ["f"],$_)
	,KVar: ($_=function(v) { return {_hx_index:1,v:v,__enum__:"hscript.FieldKind",toString:$estr}; },$_.__params__ = ["v"],$_)
};
var hscript_Token = $hxEnums["hscript.Token"] = { __ename__ : true, __constructs__ : ["TEof","TConst","TId","TOp","TPOpen","TPClose","TBrOpen","TBrClose","TDot","TComma","TSemicolon","TBkOpen","TBkClose","TQuestion","TDoubleDot","TMeta","TPrepro"]
	,TEof: {_hx_index:0,__enum__:"hscript.Token",toString:$estr}
	,TConst: ($_=function(c) { return {_hx_index:1,c:c,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["c"],$_)
	,TId: ($_=function(s) { return {_hx_index:2,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TOp: ($_=function(s) { return {_hx_index:3,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TPOpen: {_hx_index:4,__enum__:"hscript.Token",toString:$estr}
	,TPClose: {_hx_index:5,__enum__:"hscript.Token",toString:$estr}
	,TBrOpen: {_hx_index:6,__enum__:"hscript.Token",toString:$estr}
	,TBrClose: {_hx_index:7,__enum__:"hscript.Token",toString:$estr}
	,TDot: {_hx_index:8,__enum__:"hscript.Token",toString:$estr}
	,TComma: {_hx_index:9,__enum__:"hscript.Token",toString:$estr}
	,TSemicolon: {_hx_index:10,__enum__:"hscript.Token",toString:$estr}
	,TBkOpen: {_hx_index:11,__enum__:"hscript.Token",toString:$estr}
	,TBkClose: {_hx_index:12,__enum__:"hscript.Token",toString:$estr}
	,TQuestion: {_hx_index:13,__enum__:"hscript.Token",toString:$estr}
	,TDoubleDot: {_hx_index:14,__enum__:"hscript.Token",toString:$estr}
	,TMeta: ($_=function(s) { return {_hx_index:15,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
	,TPrepro: ($_=function(s) { return {_hx_index:16,s:s,__enum__:"hscript.Token",toString:$estr}; },$_.__params__ = ["s"],$_)
};
var hscript_Parser = function() {
	this.uid = 0;
	this.preprocesorValues = new haxe_ds_StringMap();
	this.line = 1;
	this.opChars = "+*/-=!><&|^%~";
	this.identChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";
	var priorities = [["%"],["*","/"],["+","-"],["<<",">>",">>>"],["|","&","^"],["==","!=",">","<",">=","<="],["..."],["&&"],["||"],["=","+=","-=","*=","/=","%=","<<=",">>=",">>>=","|=","&=","^=","=>"]];
	this.opPriority = new haxe_ds_StringMap();
	this.opRightAssoc = new haxe_ds_StringMap();
	this.unops = new haxe_ds_StringMap();
	var _g = 0;
	var _g1 = priorities.length;
	while(_g < _g1) {
		var i = _g++;
		var _g2 = 0;
		var _g11 = priorities[i];
		while(_g2 < _g11.length) {
			var x = _g11[_g2];
			++_g2;
			var _this = this.opPriority;
			if(__map_reserved[x] != null) {
				_this.setReserved(x,i);
			} else {
				_this.h[x] = i;
			}
			if(i == 9) {
				var _this1 = this.opRightAssoc;
				if(__map_reserved[x] != null) {
					_this1.setReserved(x,true);
				} else {
					_this1.h[x] = true;
				}
			}
		}
	}
	var x1 = "!";
	var _this2 = this.unops;
	var value = x1 == "++" || x1 == "--";
	if(__map_reserved[x1] != null) {
		_this2.setReserved(x1,value);
	} else {
		_this2.h[x1] = value;
	}
	var x2 = "++";
	var _this3 = this.unops;
	var value1 = x2 == "++" || x2 == "--";
	if(__map_reserved[x2] != null) {
		_this3.setReserved(x2,value1);
	} else {
		_this3.h[x2] = value1;
	}
	var x3 = "--";
	var _this4 = this.unops;
	var value2 = x3 == "++" || x3 == "--";
	if(__map_reserved[x3] != null) {
		_this4.setReserved(x3,value2);
	} else {
		_this4.h[x3] = value2;
	}
	var x4 = "-";
	var _this5 = this.unops;
	var value3 = x4 == "++" || x4 == "--";
	if(__map_reserved[x4] != null) {
		_this5.setReserved(x4,value3);
	} else {
		_this5.h[x4] = value3;
	}
	var x5 = "~";
	var _this6 = this.unops;
	var value4 = x5 == "++" || x5 == "--";
	if(__map_reserved[x5] != null) {
		_this6.setReserved(x5,value4);
	} else {
		_this6.h[x5] = value4;
	}
};
hscript_Parser.__name__ = true;
hscript_Parser.prototype = {
	error: function(err,pmin,pmax) {
		throw new js__$Boot_HaxeError(err);
	}
	,invalidChar: function(c) {
		throw new js__$Boot_HaxeError(hscript_Error.EInvalidChar(c));
	}
	,initParser: function(origin) {
		this.preprocStack = [];
		this.tokens = new haxe_ds_GenericStack();
		this.char = -1;
		this.ops = [];
		this.idents = [];
		this.uid = 0;
		var _g = 0;
		var _g1 = this.opChars.length;
		while(_g < _g1) {
			var i = _g++;
			this.ops[HxOverrides.cca(this.opChars,i)] = true;
		}
		var _g2 = 0;
		var _g3 = this.identChars.length;
		while(_g2 < _g3) {
			var i1 = _g2++;
			this.idents[HxOverrides.cca(this.identChars,i1)] = true;
		}
	}
	,parseString: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		return this.parse(new haxe_io_StringInput(s),origin);
	}
	,parse: function(s,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = s;
		var a = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			this.parseFullExpr(a);
		}
		if(a.length == 1) {
			return a[0];
		} else {
			return hscript_Expr.EBlock(a);
		}
	}
	,unexpected: function(tk) {
		throw new js__$Boot_HaxeError(hscript_Error.EUnexpected(this.tokenString(tk)));
	}
	,push: function(tk) {
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
	}
	,ensure: function(tk) {
		var t = this.token();
		if(t != tk) {
			this.unexpected(t);
		}
	}
	,ensureToken: function(tk) {
		var t = this.token();
		if(!Type.enumEq(t,tk)) {
			this.unexpected(t);
		}
	}
	,maybe: function(tk) {
		var t = this.token();
		if(Type.enumEq(t,tk)) {
			return true;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(t,_this.head);
		return false;
	}
	,getIdent: function() {
		var tk = this.token();
		if(tk._hx_index == 2) {
			var id = tk.s;
			return id;
		} else {
			this.unexpected(tk);
			return null;
		}
	}
	,expr: function(e) {
		return e;
	}
	,pmin: function(e) {
		return 0;
	}
	,pmax: function(e) {
		return 0;
	}
	,mk: function(e,pmin,pmax) {
		return e;
	}
	,isBlock: function(e) {
		switch(e._hx_index) {
		case 2:
			var e1 = e.e;
			var t = e.t;
			if(e1 != null) {
				return this.isBlock(e1);
			} else if(t != null) {
				if(t == null) {
					return false;
				} else if(t._hx_index == 2) {
					return true;
				} else {
					return false;
				}
			} else {
				return false;
			}
			break;
		case 6:
			var e2 = e.e2;
			return this.isBlock(e2);
		case 7:
			var e3 = e.e;
			var prefix = e.prefix;
			if(!prefix) {
				return this.isBlock(e3);
			} else {
				return false;
			}
			break;
		case 9:
			var e21 = e.e2;
			var e11 = e.e1;
			if(e21 != null) {
				return this.isBlock(e21);
			} else {
				return this.isBlock(e11);
			}
			break;
		case 10:
			var e4 = e.e;
			return this.isBlock(e4);
		case 11:
			var e5 = e.e;
			return this.isBlock(e5);
		case 14:
			var e6 = e.e;
			return this.isBlock(e6);
		case 15:
			var e7 = e.e;
			if(e7 != null) {
				return this.isBlock(e7);
			} else {
				return false;
			}
			break;
		case 20:
			var e8 = e.ecatch;
			return this.isBlock(e8);
		case 4:case 21:case 23:
			return true;
		case 24:
			var e9 = e.e;
			return this.isBlock(e9);
		case 25:
			var e10 = e.e;
			return this.isBlock(e10);
		default:
			return false;
		}
	}
	,parseFullExpr: function(exprs) {
		var e = this.parseExpr();
		exprs.push(e);
		var tk = this.token();
		while(tk == hscript_Token.TComma && e._hx_index == 2) {
			e = this.parseStructure("var");
			exprs.push(e);
			tk = this.token();
		}
		if(tk != hscript_Token.TSemicolon && tk != hscript_Token.TEof) {
			if(this.isBlock(e)) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				this.unexpected(tk);
			}
		}
	}
	,parseObject: function(p1) {
		var fl = [];
		_hx_loop1: while(true) {
			var tk = this.token();
			var id = null;
			switch(tk._hx_index) {
			case 1:
				var c = tk.c;
				if(!this.allowJSON) {
					this.unexpected(tk);
				}
				if(c._hx_index == 2) {
					var s = c.s;
					id = s;
				} else {
					this.unexpected(tk);
				}
				break;
			case 2:
				var i = tk.s;
				id = i;
				break;
			case 7:
				break _hx_loop1;
			default:
				this.unexpected(tk);
			}
			var t = this.token();
			if(t != hscript_Token.TDoubleDot) {
				this.unexpected(t);
			}
			fl.push({ name : id, e : this.parseExpr()});
			tk = this.token();
			switch(tk._hx_index) {
			case 7:
				break _hx_loop1;
			case 9:
				break;
			default:
				this.unexpected(tk);
			}
		}
		return this.parseExprNext(hscript_Expr.EObject(fl));
	}
	,parseExpr: function() {
		var tk = this.token();
		switch(tk._hx_index) {
		case 1:
			var c = tk.c;
			return this.parseExprNext(hscript_Expr.EConst(c));
		case 2:
			var id = tk.s;
			var e = this.parseStructure(id);
			if(e == null) {
				e = hscript_Expr.EIdent(id);
			}
			return this.parseExprNext(e);
		case 3:
			var op = tk.s;
			var _this = this.unops;
			if(__map_reserved[op] != null ? _this.existsReserved(op) : _this.h.hasOwnProperty(op)) {
				var start = 0;
				var e1 = this.parseExpr();
				if(op == "-") {
					if(e1._hx_index == 0) {
						switch(e1.c._hx_index) {
						case 0:
							var i = e1.c.v;
							return hscript_Expr.EConst(hscript_Const.CInt(-i));
						case 1:
							var f = e1.c.f;
							return hscript_Expr.EConst(hscript_Const.CFloat(-f));
						default:
						}
					}
				}
				return this.makeUnop(op,e1);
			}
			return this.unexpected(tk);
		case 4:
			var e2 = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TPClose) {
				this.unexpected(t);
			}
			return this.parseExprNext(hscript_Expr.EParent(e2));
		case 6:
			tk = this.token();
			switch(tk._hx_index) {
			case 1:
				var c1 = tk.c;
				if(this.allowJSON) {
					if(c1._hx_index == 2) {
						var tk2 = this.token();
						var _this1 = this.tokens;
						_this1.head = new haxe_ds_GenericCell(tk2,_this1.head);
						var _this2 = this.tokens;
						_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
						if(tk2._hx_index == 14) {
							return this.parseExprNext(this.parseObject(0));
						}
					} else {
						var _this3 = this.tokens;
						_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
					}
				} else {
					var _this4 = this.tokens;
					_this4.head = new haxe_ds_GenericCell(tk,_this4.head);
				}
				break;
			case 2:
				var tk21 = this.token();
				var _this5 = this.tokens;
				_this5.head = new haxe_ds_GenericCell(tk21,_this5.head);
				var _this6 = this.tokens;
				_this6.head = new haxe_ds_GenericCell(tk,_this6.head);
				if(tk21._hx_index == 14) {
					return this.parseExprNext(this.parseObject(0));
				}
				break;
			case 7:
				return this.parseExprNext(hscript_Expr.EObject([]));
			default:
				var _this7 = this.tokens;
				_this7.head = new haxe_ds_GenericCell(tk,_this7.head);
			}
			var a = [];
			while(true) {
				this.parseFullExpr(a);
				tk = this.token();
				if(tk == hscript_Token.TBrClose) {
					break;
				}
				var _this8 = this.tokens;
				_this8.head = new haxe_ds_GenericCell(tk,_this8.head);
			}
			return hscript_Expr.EBlock(a);
		case 11:
			var a1 = [];
			tk = this.token();
			while(tk != hscript_Token.TBkClose) {
				var _this9 = this.tokens;
				_this9.head = new haxe_ds_GenericCell(tk,_this9.head);
				a1.push(this.parseExpr());
				tk = this.token();
				if(tk == hscript_Token.TComma) {
					tk = this.token();
				}
			}
			if(a1.length == 1) {
				switch(a1[0]._hx_index) {
				case 10:case 11:case 24:
					var tmp = "__a_" + this.uid++;
					var e3 = hscript_Expr.EBlock([hscript_Expr.EVar(tmp,null,hscript_Expr.EArrayDecl([])),this.mapCompr(tmp,a1[0]),hscript_Expr.EIdent(tmp)]);
					return this.parseExprNext(e3);
				default:
				}
			}
			return this.parseExprNext(hscript_Expr.EArrayDecl(a1));
		case 15:
			var id1 = tk.s;
			if(this.allowMetadata) {
				var args = this.parseMetaArgs();
				return hscript_Expr.EMeta(id1,args,this.parseExpr());
			} else {
				return this.unexpected(tk);
			}
			break;
		default:
			return this.unexpected(tk);
		}
	}
	,parseMetaArgs: function() {
		var tk = this.token();
		if(tk != hscript_Token.TPOpen) {
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			return null;
		}
		var args = [];
		tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var _this1 = this.tokens;
			_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
			_hx_loop1: while(true) {
				args.push(this.parseExpr());
				var _g = this.token();
				switch(_g._hx_index) {
				case 5:
					break _hx_loop1;
				case 9:
					break;
				default:
					var tk1 = _g;
					this.unexpected(tk1);
				}
			}
		}
		return args;
	}
	,mapCompr: function(tmp,e) {
		var edef;
		switch(e._hx_index) {
		case 3:
			var e2 = e.e;
			edef = hscript_Expr.EParent(this.mapCompr(tmp,e2));
			break;
		case 4:
			if(e.e.length == 1) {
				var e1 = e.e[0];
				edef = hscript_Expr.EBlock([this.mapCompr(tmp,e1)]);
			} else {
				edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			}
			break;
		case 9:
			var e21 = e.e2;
			var e11 = e.e1;
			var cond = e.cond;
			edef = e21 == null ? hscript_Expr.EIf(cond,this.mapCompr(tmp,e11),null) : hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
			break;
		case 10:
			var e22 = e.e;
			var cond1 = e.cond;
			edef = hscript_Expr.EWhile(cond1,this.mapCompr(tmp,e22));
			break;
		case 11:
			var e23 = e.e;
			var it = e.it;
			var v = e.v;
			edef = hscript_Expr.EFor(v,it,this.mapCompr(tmp,e23));
			break;
		case 24:
			var e24 = e.e;
			var cond2 = e.cond;
			edef = hscript_Expr.EDoWhile(cond2,this.mapCompr(tmp,e24));
			break;
		default:
			edef = hscript_Expr.ECall(hscript_Expr.EField(hscript_Expr.EIdent(tmp),"push"),[e]);
		}
		return edef;
	}
	,makeUnop: function(op,e) {
		switch(e._hx_index) {
		case 6:
			var e2 = e.e2;
			var e1 = e.e1;
			var bop = e.op;
			return hscript_Expr.EBinop(bop,this.makeUnop(op,e1),e2);
		case 22:
			var e3 = e.e2;
			var e21 = e.e1;
			var e11 = e.cond;
			return hscript_Expr.ETernary(this.makeUnop(op,e11),e21,e3);
		default:
			return hscript_Expr.EUnop(op,true,e);
		}
	}
	,makeBinop: function(op,e1,e) {
		switch(e._hx_index) {
		case 6:
			var e3 = e.e2;
			var e2 = e.e1;
			var op2 = e.op;
			var tmp;
			var _this = this.opPriority;
			var tmp1 = __map_reserved[op] != null ? _this.getReserved(op) : _this.h[op];
			var _this1 = this.opPriority;
			if(tmp1 <= (__map_reserved[op2] != null ? _this1.getReserved(op2) : _this1.h[op2])) {
				var _this2 = this.opRightAssoc;
				tmp = !(__map_reserved[op] != null ? _this2.existsReserved(op) : _this2.h.hasOwnProperty(op));
			} else {
				tmp = false;
			}
			if(tmp) {
				return hscript_Expr.EBinop(op2,this.makeBinop(op,e1,e2),e3);
			} else {
				return hscript_Expr.EBinop(op,e1,e);
			}
			break;
		case 22:
			var e4 = e.e2;
			var e31 = e.e1;
			var e21 = e.cond;
			var _this3 = this.opRightAssoc;
			if(__map_reserved[op] != null ? _this3.existsReserved(op) : _this3.h.hasOwnProperty(op)) {
				return hscript_Expr.EBinop(op,e1,e);
			} else {
				return hscript_Expr.ETernary(this.makeBinop(op,e1,e21),e31,e4);
			}
			break;
		default:
			return hscript_Expr.EBinop(op,e1,e);
		}
	}
	,parseStructure: function(id) {
		switch(id) {
		case "break":
			return hscript_Expr.EBreak;
		case "continue":
			return hscript_Expr.EContinue;
		case "do":
			var e = this.parseExpr();
			var tk = this.token();
			if(!(tk._hx_index == 2 && tk.s == "while")) {
				this.unexpected(tk);
			}
			var econd = this.parseExpr();
			return hscript_Expr.EDoWhile(econd,e);
		case "else":
			return this.unexpected(hscript_Token.TId(id));
		case "for":
			var t = this.token();
			if(t != hscript_Token.TPOpen) {
				this.unexpected(t);
			}
			var vname = this.getIdent();
			var t1 = this.token();
			if(!Type.enumEq(t1,hscript_Token.TId("in"))) {
				this.unexpected(t1);
			}
			var eiter = this.parseExpr();
			var t2 = this.token();
			if(t2 != hscript_Token.TPClose) {
				this.unexpected(t2);
			}
			var e1 = this.parseExpr();
			return hscript_Expr.EFor(vname,eiter,e1);
		case "function":
			var tk1 = this.token();
			var name = null;
			if(tk1._hx_index == 2) {
				var id1 = tk1.s;
				name = id1;
			} else {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk1,_this.head);
			}
			var inf = this.parseFunctionDecl();
			return hscript_Expr.EFunction(inf.args,inf.body,name,inf.ret);
		case "if":
			var t3 = this.token();
			if(t3 != hscript_Token.TPOpen) {
				this.unexpected(t3);
			}
			var cond = this.parseExpr();
			var t4 = this.token();
			if(t4 != hscript_Token.TPClose) {
				this.unexpected(t4);
			}
			var e11 = this.parseExpr();
			var e2 = null;
			var semic = false;
			var tk2 = this.token();
			if(tk2 == hscript_Token.TSemicolon) {
				semic = true;
				tk2 = this.token();
			}
			if(Type.enumEq(tk2,hscript_Token.TId("else"))) {
				e2 = this.parseExpr();
			} else {
				var _this1 = this.tokens;
				_this1.head = new haxe_ds_GenericCell(tk2,_this1.head);
				if(semic) {
					var _this2 = this.tokens;
					_this2.head = new haxe_ds_GenericCell(hscript_Token.TSemicolon,_this2.head);
				}
			}
			return hscript_Expr.EIf(cond,e11,e2);
		case "inline":
			if(!this.maybe(hscript_Token.TId("function"))) {
				this.unexpected(hscript_Token.TId("inline"));
			}
			return this.parseStructure("function");
		case "new":
			var a = [];
			a.push(this.getIdent());
			var next = true;
			while(next) {
				var tk3 = this.token();
				switch(tk3._hx_index) {
				case 4:
					next = false;
					break;
				case 8:
					a.push(this.getIdent());
					break;
				default:
					this.unexpected(tk3);
				}
			}
			var args = this.parseExprList(hscript_Token.TPClose);
			return hscript_Expr.ENew(a.join("."),args);
		case "return":
			var tk4 = this.token();
			var _this3 = this.tokens;
			_this3.head = new haxe_ds_GenericCell(tk4,_this3.head);
			var e3 = tk4 == hscript_Token.TSemicolon ? null : this.parseExpr();
			return hscript_Expr.EReturn(e3);
		case "switch":
			var e4 = this.parseExpr();
			var def = null;
			var cases = [];
			var t5 = this.token();
			if(t5 != hscript_Token.TBrOpen) {
				this.unexpected(t5);
			}
			_hx_loop2: while(true) {
				var tk5 = this.token();
				switch(tk5._hx_index) {
				case 2:
					switch(tk5.s) {
					case "case":
						var c = { values : [], expr : null};
						cases.push(c);
						_hx_loop3: while(true) {
							var e5 = this.parseExpr();
							c.values.push(e5);
							tk5 = this.token();
							switch(tk5._hx_index) {
							case 9:
								break;
							case 14:
								break _hx_loop3;
							default:
								this.unexpected(tk5);
							}
						}
						var exprs = [];
						_hx_loop4: while(true) {
							tk5 = this.token();
							var _this4 = this.tokens;
							_this4.head = new haxe_ds_GenericCell(tk5,_this4.head);
							switch(tk5._hx_index) {
							case 2:
								switch(tk5.s) {
								case "case":case "default":
									break _hx_loop4;
								default:
									this.parseFullExpr(exprs);
								}
								break;
							case 7:
								break _hx_loop4;
							default:
								this.parseFullExpr(exprs);
							}
						}
						c.expr = exprs.length == 1 ? exprs[0] : exprs.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs);
						break;
					case "default":
						if(def != null) {
							this.unexpected(tk5);
						}
						var t6 = this.token();
						if(t6 != hscript_Token.TDoubleDot) {
							this.unexpected(t6);
						}
						var exprs1 = [];
						_hx_loop5: while(true) {
							tk5 = this.token();
							var _this5 = this.tokens;
							_this5.head = new haxe_ds_GenericCell(tk5,_this5.head);
							switch(tk5._hx_index) {
							case 2:
								switch(tk5.s) {
								case "case":case "default":
									break _hx_loop5;
								default:
									this.parseFullExpr(exprs1);
								}
								break;
							case 7:
								break _hx_loop5;
							default:
								this.parseFullExpr(exprs1);
							}
						}
						def = exprs1.length == 1 ? exprs1[0] : exprs1.length == 0 ? hscript_Expr.EBlock([]) : hscript_Expr.EBlock(exprs1);
						break;
					default:
						this.unexpected(tk5);
					}
					break;
				case 7:
					break _hx_loop2;
				default:
					this.unexpected(tk5);
				}
			}
			return hscript_Expr.ESwitch(e4,cases,def);
		case "throw":
			var e6 = this.parseExpr();
			return hscript_Expr.EThrow(e6);
		case "try":
			var e7 = this.parseExpr();
			var t7 = this.token();
			if(!Type.enumEq(t7,hscript_Token.TId("catch"))) {
				this.unexpected(t7);
			}
			var t8 = this.token();
			if(t8 != hscript_Token.TPOpen) {
				this.unexpected(t8);
			}
			var vname1 = this.getIdent();
			var t9 = this.token();
			if(t9 != hscript_Token.TDoubleDot) {
				this.unexpected(t9);
			}
			var t10 = null;
			if(this.allowTypes) {
				t10 = this.parseType();
			} else {
				var t11 = this.token();
				if(!Type.enumEq(t11,hscript_Token.TId("Dynamic"))) {
					this.unexpected(t11);
				}
			}
			var t12 = this.token();
			if(t12 != hscript_Token.TPClose) {
				this.unexpected(t12);
			}
			var ec = this.parseExpr();
			return hscript_Expr.ETry(e7,vname1,t10,ec);
		case "var":
			var ident = this.getIdent();
			var tk6 = this.token();
			var t13 = null;
			if(tk6 == hscript_Token.TDoubleDot && this.allowTypes) {
				t13 = this.parseType();
				tk6 = this.token();
			}
			var e8 = null;
			if(Type.enumEq(tk6,hscript_Token.TOp("="))) {
				e8 = this.parseExpr();
			} else {
				var _this6 = this.tokens;
				_this6.head = new haxe_ds_GenericCell(tk6,_this6.head);
			}
			return hscript_Expr.EVar(ident,t13,e8);
		case "while":
			var econd1 = this.parseExpr();
			var e9 = this.parseExpr();
			return hscript_Expr.EWhile(econd1,e9);
		default:
			return null;
		}
	}
	,parseExprNext: function(e1) {
		var tk = this.token();
		switch(tk._hx_index) {
		case 3:
			var op = tk.s;
			var _this = this.unops;
			if(__map_reserved[op] != null ? _this.getReserved(op) : _this.h[op]) {
				if(this.isBlock(e1) || e1._hx_index == 3) {
					var _this1 = this.tokens;
					_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
					return e1;
				}
				return this.parseExprNext(hscript_Expr.EUnop(op,false,e1));
			}
			return this.makeBinop(op,e1,this.parseExpr());
		case 4:
			return this.parseExprNext(hscript_Expr.ECall(e1,this.parseExprList(hscript_Token.TPClose)));
		case 8:
			var field = this.getIdent();
			return this.parseExprNext(hscript_Expr.EField(e1,field));
		case 11:
			var e2 = this.parseExpr();
			var t = this.token();
			if(t != hscript_Token.TBkClose) {
				this.unexpected(t);
			}
			return this.parseExprNext(hscript_Expr.EArray(e1,e2));
		case 13:
			var e21 = this.parseExpr();
			var t1 = this.token();
			if(t1 != hscript_Token.TDoubleDot) {
				this.unexpected(t1);
			}
			var e3 = this.parseExpr();
			return hscript_Expr.ETernary(e1,e21,e3);
		default:
			var _this2 = this.tokens;
			_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
			return e1;
		}
	}
	,parseFunctionDecl: function() {
		var t = this.token();
		if(t != hscript_Token.TPOpen) {
			this.unexpected(t);
		}
		var args = [];
		var tk = this.token();
		if(tk != hscript_Token.TPClose) {
			var done = false;
			while(!done) {
				var name = null;
				var opt = false;
				if(tk._hx_index == 13) {
					opt = true;
					tk = this.token();
				}
				if(tk._hx_index == 2) {
					var id = tk.s;
					name = id;
				} else {
					this.unexpected(tk);
				}
				var arg = { name : name};
				args.push(arg);
				if(opt) {
					arg.opt = true;
				}
				if(this.allowTypes) {
					if(this.maybe(hscript_Token.TDoubleDot)) {
						arg.t = this.parseType();
					}
					if(this.maybe(hscript_Token.TOp("="))) {
						arg.value = this.parseExpr();
					}
				}
				tk = this.token();
				switch(tk._hx_index) {
				case 5:
					done = true;
					break;
				case 9:
					tk = this.token();
					break;
				default:
					this.unexpected(tk);
				}
			}
		}
		var ret = null;
		if(this.allowTypes) {
			tk = this.token();
			if(tk != hscript_Token.TDoubleDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
			} else {
				ret = this.parseType();
			}
		}
		return { args : args, ret : ret, body : this.parseExpr()};
	}
	,parsePath: function() {
		var path = [this.getIdent()];
		while(true) {
			var t = this.token();
			if(t != hscript_Token.TDot) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(t,_this.head);
				break;
			}
			path.push(this.getIdent());
		}
		return path;
	}
	,parseType: function() {
		var t = this.token();
		switch(t._hx_index) {
		case 2:
			var v = t.s;
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(t,_this.head);
			var path = this.parsePath();
			var params = null;
			t = this.token();
			if(t._hx_index == 3) {
				var op = t.s;
				if(op == "<") {
					params = [];
					_hx_loop1: while(true) {
						params.push(this.parseType());
						t = this.token();
						switch(t._hx_index) {
						case 3:
							var op1 = t.s;
							if(op1 == ">") {
								break _hx_loop1;
							}
							if(HxOverrides.cca(op1,0) == 62) {
								var _this1 = this.tokens;
								_this1.head = new haxe_ds_GenericCell(hscript_Token.TOp(HxOverrides.substr(op1,1,null)),_this1.head);
								break _hx_loop1;
							}
							break;
						case 9:
							continue;
						default:
						}
						this.unexpected(t);
					}
				} else {
					var _this2 = this.tokens;
					_this2.head = new haxe_ds_GenericCell(t,_this2.head);
				}
			} else {
				var _this3 = this.tokens;
				_this3.head = new haxe_ds_GenericCell(t,_this3.head);
			}
			return this.parseTypeNext(hscript_CType.CTPath(path,params));
		case 4:
			var t1 = this.parseType();
			var t2 = this.token();
			if(t2 != hscript_Token.TPClose) {
				this.unexpected(t2);
			}
			return this.parseTypeNext(hscript_CType.CTParent(t1));
		case 6:
			var fields = [];
			var meta = null;
			_hx_loop2: while(true) {
				t = this.token();
				switch(t._hx_index) {
				case 2:
					if(t.s == "var") {
						var name = this.getIdent();
						var t3 = this.token();
						if(t3 != hscript_Token.TDoubleDot) {
							this.unexpected(t3);
						}
						fields.push({ name : name, t : this.parseType(), meta : meta});
						meta = null;
						var t4 = this.token();
						if(t4 != hscript_Token.TSemicolon) {
							this.unexpected(t4);
						}
					} else {
						var name1 = t.s;
						var t5 = this.token();
						if(t5 != hscript_Token.TDoubleDot) {
							this.unexpected(t5);
						}
						fields.push({ name : name1, t : this.parseType(), meta : meta});
						t = this.token();
						switch(t._hx_index) {
						case 7:
							break _hx_loop2;
						case 9:
							break;
						default:
							this.unexpected(t);
						}
					}
					break;
				case 7:
					break _hx_loop2;
				case 15:
					var name2 = t.s;
					if(meta == null) {
						meta = [];
					}
					meta.push({ name : name2, params : this.parseMetaArgs()});
					break;
				default:
					this.unexpected(t);
				}
			}
			return this.parseTypeNext(hscript_CType.CTAnon(fields));
		default:
			return this.unexpected(t);
		}
	}
	,parseTypeNext: function(t) {
		var tk = this.token();
		if(tk._hx_index == 3) {
			var op = tk.s;
			if(op != "->") {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				return t;
			}
		} else {
			var _this1 = this.tokens;
			_this1.head = new haxe_ds_GenericCell(tk,_this1.head);
			return t;
		}
		var t2 = this.parseType();
		if(t2._hx_index == 1) {
			var args = t2.args;
			args.unshift(t);
			return t2;
		} else {
			return hscript_CType.CTFun([t],t2);
		}
	}
	,parseExprList: function(etk) {
		var args = [];
		var tk = this.token();
		if(tk == etk) {
			return args;
		}
		var _this = this.tokens;
		_this.head = new haxe_ds_GenericCell(tk,_this.head);
		while(true) {
			args.push(this.parseExpr());
			tk = this.token();
			if(tk._hx_index != 9) {
				if(tk == etk) {
					break;
				}
				this.unexpected(tk);
			}
		}
		return args;
	}
	,parseModule: function(content,origin) {
		if(origin == null) {
			origin = "hscript";
		}
		this.initParser(origin);
		this.input = new haxe_io_StringInput(content);
		this.allowTypes = true;
		this.allowMetadata = true;
		var decls = [];
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				break;
			}
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(tk,_this.head);
			decls.push(this.parseModuleDecl());
		}
		return decls;
	}
	,parseMetadata: function() {
		var meta = [];
		while(true) {
			var tk = this.token();
			if(tk._hx_index == 15) {
				var name = tk.s;
				meta.push({ name : name, params : this.parseMetaArgs()});
			} else {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			}
		}
		return meta;
	}
	,parseParams: function() {
		if(this.maybe(hscript_Token.TOp("<"))) {
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidOp("Unsupported class type parameters"));
		}
		return { };
	}
	,parseModuleDecl: function() {
		var meta = this.parseMetadata();
		var ident = this.getIdent();
		var isPrivate = false;
		var isExtern = false;
		_hx_loop1: while(true) {
			switch(ident) {
			case "extern":
				isExtern = true;
				break;
			case "private":
				isPrivate = true;
				break;
			default:
				break _hx_loop1;
			}
			ident = this.getIdent();
		}
		switch(ident) {
		case "class":
			var name = this.getIdent();
			var params = this.parseParams();
			var extend = null;
			var implement = [];
			_hx_loop2: while(true) {
				var t = this.token();
				if(t._hx_index == 2) {
					switch(t.s) {
					case "extends":
						extend = this.parseType();
						break;
					case "implements":
						implement.push(this.parseType());
						break;
					default:
						var _this = this.tokens;
						_this.head = new haxe_ds_GenericCell(t,_this.head);
						break _hx_loop2;
					}
				} else {
					var _this1 = this.tokens;
					_this1.head = new haxe_ds_GenericCell(t,_this1.head);
					break;
				}
			}
			var fields = [];
			var t1 = this.token();
			if(t1 != hscript_Token.TBrOpen) {
				this.unexpected(t1);
			}
			while(!this.maybe(hscript_Token.TBrClose)) fields.push(this.parseField());
			return hscript_ModuleDecl.DClass({ name : name, meta : meta, params : params, extend : extend, implement : implement, fields : fields, isPrivate : isPrivate, isExtern : isExtern});
		case "import":
			var path = [this.getIdent()];
			var star = false;
			while(true) {
				var t2 = this.token();
				if(t2 != hscript_Token.TDot) {
					var _this2 = this.tokens;
					_this2.head = new haxe_ds_GenericCell(t2,_this2.head);
					break;
				}
				t2 = this.token();
				switch(t2._hx_index) {
				case 2:
					var id = t2.s;
					path.push(id);
					break;
				case 3:
					if(t2.s == "*") {
						star = true;
					} else {
						this.unexpected(t2);
					}
					break;
				default:
					this.unexpected(t2);
				}
			}
			var t3 = this.token();
			if(t3 != hscript_Token.TSemicolon) {
				this.unexpected(t3);
			}
			return hscript_ModuleDecl.DImport(path,star);
		case "package":
			var path1 = this.parsePath();
			var t4 = this.token();
			if(t4 != hscript_Token.TSemicolon) {
				this.unexpected(t4);
			}
			return hscript_ModuleDecl.DPackage(path1);
		case "typedef":
			var name1 = this.getIdent();
			var params1 = this.parseParams();
			var t5 = this.token();
			if(!Type.enumEq(t5,hscript_Token.TOp("="))) {
				this.unexpected(t5);
			}
			var t6 = this.parseType();
			return hscript_ModuleDecl.DTypedef({ name : name1, meta : meta, params : params1, isPrivate : isPrivate, t : t6});
		default:
			this.unexpected(hscript_Token.TId(ident));
		}
		return null;
	}
	,parseField: function() {
		var meta = this.parseMetadata();
		var access = [];
		while(true) {
			var id = this.getIdent();
			switch(id) {
			case "function":
				var name = this.getIdent();
				var inf = this.parseFunctionDecl();
				return { name : name, meta : meta, access : access, kind : hscript_FieldKind.KFunction({ args : inf.args, expr : inf.body, ret : inf.ret})};
			case "inline":
				access.push(hscript_FieldAccess.AInline);
				break;
			case "macro":
				access.push(hscript_FieldAccess.AMacro);
				break;
			case "override":
				access.push(hscript_FieldAccess.AOverride);
				break;
			case "private":
				access.push(hscript_FieldAccess.APrivate);
				break;
			case "public":
				access.push(hscript_FieldAccess.APublic);
				break;
			case "static":
				access.push(hscript_FieldAccess.AStatic);
				break;
			case "var":
				var name1 = this.getIdent();
				var get = null;
				var set = null;
				if(this.maybe(hscript_Token.TPOpen)) {
					get = this.getIdent();
					var t = this.token();
					if(t != hscript_Token.TComma) {
						this.unexpected(t);
					}
					set = this.getIdent();
					var t1 = this.token();
					if(t1 != hscript_Token.TPClose) {
						this.unexpected(t1);
					}
				}
				var type = this.maybe(hscript_Token.TDoubleDot) ? this.parseType() : null;
				var expr = this.maybe(hscript_Token.TOp("=")) ? this.parseExpr() : null;
				if(expr != null) {
					if(this.isBlock(expr)) {
						this.maybe(hscript_Token.TSemicolon);
					} else {
						var t2 = this.token();
						if(t2 != hscript_Token.TSemicolon) {
							this.unexpected(t2);
						}
					}
				} else if(type != null && type._hx_index == 2) {
					this.maybe(hscript_Token.TSemicolon);
				} else {
					var t3 = this.token();
					if(t3 != hscript_Token.TSemicolon) {
						this.unexpected(t3);
					}
				}
				return { name : name1, meta : meta, access : access, kind : hscript_FieldKind.KVar({ get : get, set : set, type : type, expr : expr})};
			default:
				this.unexpected(hscript_Token.TId(id));
			}
		}
	}
	,incPos: function() {
	}
	,readChar: function() {
		try {
			return this.input.readByte();
		} catch( e ) {
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			return 0;
		}
	}
	,readString: function(until) {
		var c = 0;
		var b = new haxe_io_BytesOutput();
		var esc = false;
		var old = this.line;
		var s = this.input;
		while(true) {
			try {
				c = s.readByte();
			} catch( e ) {
				var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
				this.line = old;
				throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedString);
			}
			if(esc) {
				esc = false;
				switch(c) {
				case 34:case 39:case 92:
					b.writeByte(c);
					break;
				case 47:
					if(this.allowJSON) {
						b.writeByte(c);
					} else {
						this.invalidChar(c);
					}
					break;
				case 110:
					b.writeByte(10);
					break;
				case 114:
					b.writeByte(13);
					break;
				case 116:
					b.writeByte(9);
					break;
				case 117:
					if(!this.allowJSON) {
						this.invalidChar(c);
					}
					var code = null;
					try {
						code = s.readString(4);
					} catch( e2 ) {
						var e3 = (e2 instanceof js__$Boot_HaxeError) ? e2.val : e2;
						this.line = old;
						throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedString);
					}
					var k = 0;
					k <<= 4;
					var char = HxOverrides.cca(code,0);
					if(char == null) {
						this.invalidChar(char);
					} else {
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char - 87;
							break;
						default:
							this.invalidChar(char);
						}
					}
					k <<= 4;
					var char1 = HxOverrides.cca(code,1);
					if(char1 == null) {
						this.invalidChar(char1);
					} else {
						switch(char1) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char1 - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char1 - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char1 - 87;
							break;
						default:
							this.invalidChar(char1);
						}
					}
					k <<= 4;
					var char2 = HxOverrides.cca(code,2);
					if(char2 == null) {
						this.invalidChar(char2);
					} else {
						switch(char2) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char2 - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char2 - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char2 - 87;
							break;
						default:
							this.invalidChar(char2);
						}
					}
					k <<= 4;
					var char3 = HxOverrides.cca(code,3);
					if(char3 == null) {
						this.invalidChar(char3);
					} else {
						switch(char3) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							k += char3 - 48;
							break;
						case 65:case 66:case 67:case 68:case 69:case 70:
							k += char3 - 55;
							break;
						case 97:case 98:case 99:case 100:case 101:case 102:
							k += char3 - 87;
							break;
						default:
							this.invalidChar(char3);
						}
					}
					if(k <= 127) {
						b.writeByte(k);
					} else if(k <= 2047) {
						b.writeByte(192 | k >> 6);
						b.writeByte(128 | k & 63);
					} else {
						b.writeByte(224 | k >> 12);
						b.writeByte(128 | k >> 6 & 63);
						b.writeByte(128 | k & 63);
					}
					break;
				default:
					this.invalidChar(c);
				}
			} else if(c == 92) {
				esc = true;
			} else if(c == until) {
				break;
			} else {
				if(c == 10) {
					this.line++;
				}
				b.writeByte(c);
			}
		}
		return b.getBytes().toString();
	}
	,token: function() {
		if(this.tokens.head != null) {
			var _this = this.tokens;
			var k = _this.head;
			if(k == null) {
				return null;
			} else {
				_this.head = k.next;
				return k.elt;
			}
		}
		var char;
		if(this.char < 0) {
			char = this.readChar();
		} else {
			char = this.char;
			this.char = -1;
		}
		while(true) {
			switch(char) {
			case 0:
				return hscript_Token.TEof;
			case 10:
				this.line++;
				break;
			case 9:case 13:case 32:
				break;
			case 35:
				char = this.readChar();
				if(this.idents[char]) {
					var id = String.fromCodePoint(char);
					while(true) {
						char = this.readChar();
						if(!this.idents[char]) {
							this.char = char;
							return this.preprocess(id);
						}
						id += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 34:case 39:
				return hscript_Token.TConst(hscript_Const.CString(this.readString(char)));
			case 40:
				return hscript_Token.TPOpen;
			case 41:
				return hscript_Token.TPClose;
			case 44:
				return hscript_Token.TComma;
			case 46:
				char = this.readChar();
				switch(char) {
				case 46:
					char = this.readChar();
					if(char != 46) {
						this.invalidChar(char);
					}
					return hscript_Token.TOp("...");
				case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
					var n = char - 48;
					var exp = 1;
					while(true) {
						char = this.readChar();
						exp *= 10;
						switch(char) {
						case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
							n = n * 10 + (char - 48);
							break;
						default:
							this.char = char;
							return hscript_Token.TConst(hscript_Const.CFloat(n / exp));
						}
					}
					break;
				default:
					this.char = char;
					return hscript_Token.TDot;
				}
				break;
			case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
				var n1 = (char - 48) * 1.0;
				var exp1 = 0.;
				while(true) {
					char = this.readChar();
					exp1 *= 10;
					switch(char) {
					case 46:
						if(exp1 > 0) {
							if(exp1 == 10 && this.readChar() == 46) {
								var _this1 = this.tokens;
								_this1.head = new haxe_ds_GenericCell(hscript_Token.TOp("..."),_this1.head);
								var i = n1 | 0;
								return hscript_Token.TConst(i == n1 ? hscript_Const.CInt(i) : hscript_Const.CFloat(n1));
							}
							this.invalidChar(char);
						}
						exp1 = 1.;
						break;
					case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
						n1 = n1 * 10 + (char - 48);
						break;
					case 69:case 101:
						var tk = this.token();
						var pow = null;
						switch(tk._hx_index) {
						case 1:
							if(tk.c._hx_index == 0) {
								var e = tk.c.v;
								pow = e;
							} else {
								var _this2 = this.tokens;
								_this2.head = new haxe_ds_GenericCell(tk,_this2.head);
							}
							break;
						case 3:
							if(tk.s == "-") {
								tk = this.token();
								if(tk._hx_index == 1 && tk.c._hx_index == 0) {
									var e1 = tk.c.v;
									pow = -e1;
								} else {
									var _this3 = this.tokens;
									_this3.head = new haxe_ds_GenericCell(tk,_this3.head);
								}
							} else {
								var _this4 = this.tokens;
								_this4.head = new haxe_ds_GenericCell(tk,_this4.head);
							}
							break;
						default:
							var _this5 = this.tokens;
							_this5.head = new haxe_ds_GenericCell(tk,_this5.head);
						}
						if(pow == null) {
							this.invalidChar(char);
						}
						return hscript_Token.TConst(hscript_Const.CFloat(Math.pow(10,pow) / exp1 * n1 * 10));
					case 120:
						if(n1 > 0 || exp1 > 0) {
							this.invalidChar(char);
						}
						var n2 = 0;
						while(true) {
							char = this.readChar();
							switch(char) {
							case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:
								n2 = (n2 << 4) + char - 48;
								break;
							case 65:case 66:case 67:case 68:case 69:case 70:
								n2 = (n2 << 4) + (char - 55);
								break;
							case 97:case 98:case 99:case 100:case 101:case 102:
								n2 = (n2 << 4) + (char - 87);
								break;
							default:
								this.char = char;
								return hscript_Token.TConst(hscript_Const.CInt(n2));
							}
						}
						break;
					default:
						this.char = char;
						var i1 = n1 | 0;
						return hscript_Token.TConst(exp1 > 0 ? hscript_Const.CFloat(n1 * 10 / exp1) : i1 == n1 ? hscript_Const.CInt(i1) : hscript_Const.CFloat(n1));
					}
				}
				break;
			case 58:
				return hscript_Token.TDoubleDot;
			case 59:
				return hscript_Token.TSemicolon;
			case 61:
				char = this.readChar();
				if(char == 61) {
					return hscript_Token.TOp("==");
				} else if(char == 62) {
					return hscript_Token.TOp("=>");
				}
				this.char = char;
				return hscript_Token.TOp("=");
			case 63:
				return hscript_Token.TQuestion;
			case 64:
				char = this.readChar();
				if(this.idents[char] || char == 58) {
					var id1 = String.fromCodePoint(char);
					while(true) {
						char = this.readChar();
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TMeta(id1);
						}
						id1 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
				break;
			case 91:
				return hscript_Token.TBkOpen;
			case 93:
				return hscript_Token.TBkClose;
			case 123:
				return hscript_Token.TBrOpen;
			case 125:
				return hscript_Token.TBrClose;
			default:
				if(this.ops[char]) {
					var op = String.fromCodePoint(char);
					var prev = -1;
					while(true) {
						char = this.readChar();
						if(!this.ops[char] || prev == 61) {
							if(HxOverrides.cca(op,0) == 47) {
								return this.tokenComment(op,char);
							}
							this.char = char;
							return hscript_Token.TOp(op);
						}
						prev = char;
						op += String.fromCodePoint(char);
					}
				}
				if(this.idents[char]) {
					var id2 = String.fromCodePoint(char);
					while(true) {
						char = this.readChar();
						if(!this.idents[char]) {
							this.char = char;
							return hscript_Token.TId(id2);
						}
						id2 += String.fromCodePoint(char);
					}
				}
				this.invalidChar(char);
			}
			char = this.readChar();
		}
	}
	,preprocValue: function(id) {
		var _this = this.preprocesorValues;
		if(__map_reserved[id] != null) {
			return _this.getReserved(id);
		} else {
			return _this.h[id];
		}
	}
	,parsePreproCond: function() {
		var tk = this.token();
		switch(tk._hx_index) {
		case 2:
			var id = tk.s;
			return hscript_Expr.EIdent(id);
		case 3:
			if(tk.s == "!") {
				return hscript_Expr.EUnop("!",true,this.parsePreproCond());
			} else {
				return this.unexpected(tk);
			}
			break;
		case 4:
			var _this = this.tokens;
			_this.head = new haxe_ds_GenericCell(hscript_Token.TPOpen,_this.head);
			return this.parseExpr();
		default:
			return this.unexpected(tk);
		}
	}
	,evalPreproCond: function(e) {
		switch(e._hx_index) {
		case 1:
			var id = e.v;
			return this.preprocValue(id) != null;
		case 3:
			var e1 = e.e;
			return this.evalPreproCond(e1);
		case 6:
			switch(e.op) {
			case "&&":
				var e2 = e.e2;
				var e11 = e.e1;
				if(this.evalPreproCond(e11)) {
					return this.evalPreproCond(e2);
				} else {
					return false;
				}
				break;
			case "||":
				var e21 = e.e2;
				var e12 = e.e1;
				if(!this.evalPreproCond(e12)) {
					return this.evalPreproCond(e21);
				} else {
					return true;
				}
				break;
			default:
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]));
			}
			break;
		case 7:
			if(e.op == "!") {
				var e3 = e.e;
				return !this.evalPreproCond(e3);
			} else {
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]));
			}
			break;
		default:
			throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Can't eval " + $hxEnums[e.__enum__].__constructs__[e._hx_index]));
		}
	}
	,preprocess: function(id) {
		switch(id) {
		case "else":case "elseif":
			if(this.preprocStack.length > 0) {
				if(this.preprocStack[this.preprocStack.length - 1].r) {
					this.preprocStack[this.preprocStack.length - 1].r = false;
					this.skipTokens();
					return this.token();
				} else if(id == "else") {
					this.preprocStack.pop();
					this.preprocStack.push({ r : true});
					return this.token();
				} else {
					this.preprocStack.pop();
					return this.preprocess("if");
				}
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "end":
			if(this.preprocStack.length > 0) {
				this.preprocStack.pop();
				return this.token();
			} else {
				return hscript_Token.TPrepro(id);
			}
			break;
		case "if":
			var e = this.parsePreproCond();
			if(this.evalPreproCond(e)) {
				this.preprocStack.push({ r : true});
				return this.token();
			}
			this.preprocStack.push({ r : false});
			this.skipTokens();
			return this.token();
		default:
			return hscript_Token.TPrepro(id);
		}
	}
	,skipTokens: function() {
		var spos = this.preprocStack.length - 1;
		var obj = this.preprocStack[spos];
		var pos = 0;
		while(true) {
			var tk = this.token();
			if(tk == hscript_Token.TEof) {
				throw new js__$Boot_HaxeError(hscript_Error.EInvalidPreprocessor("Unclosed"));
			}
			if(this.preprocStack[spos] != obj) {
				var _this = this.tokens;
				_this.head = new haxe_ds_GenericCell(tk,_this.head);
				break;
			}
		}
	}
	,tokenComment: function(op,char) {
		var c = HxOverrides.cca(op,1);
		var s = this.input;
		if(c == 47) {
			try {
				while(char != 13 && char != 10) char = s.readByte();
				this.char = char;
			} catch( e ) {
				var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			}
			return this.token();
		}
		if(c == 42) {
			var old = this.line;
			if(op == "/**/") {
				this.char = char;
				return this.token();
			}
			try {
				while(true) {
					while(char != 42) {
						if(char == 10) {
							this.line++;
						}
						char = s.readByte();
					}
					char = s.readByte();
					if(char == 47) {
						break;
					}
				}
			} catch( e2 ) {
				var e3 = (e2 instanceof js__$Boot_HaxeError) ? e2.val : e2;
				this.line = old;
				throw new js__$Boot_HaxeError(hscript_Error.EUnterminatedComment);
			}
			return this.token();
		}
		this.char = char;
		return hscript_Token.TOp(op);
	}
	,constString: function(c) {
		switch(c._hx_index) {
		case 0:
			var v = c.v;
			if(v == null) {
				return "null";
			} else {
				return "" + v;
			}
			break;
		case 1:
			var f = c.f;
			if(f == null) {
				return "null";
			} else {
				return "" + f;
			}
			break;
		case 2:
			var s = c.s;
			return s;
		}
	}
	,tokenString: function(t) {
		switch(t._hx_index) {
		case 0:
			return "<eof>";
		case 1:
			var c = t.c;
			return this.constString(c);
		case 2:
			var s = t.s;
			return s;
		case 3:
			var s1 = t.s;
			return s1;
		case 4:
			return "(";
		case 5:
			return ")";
		case 6:
			return "{";
		case 7:
			return "}";
		case 8:
			return ".";
		case 9:
			return ",";
		case 10:
			return ";";
		case 11:
			return "[";
		case 12:
			return "]";
		case 13:
			return "?";
		case 14:
			return ":";
		case 15:
			var id = t.s;
			return "@" + id;
		case 16:
			var id1 = t.s;
			return "#" + id1;
		}
	}
	,__class__: hscript_Parser
};
var hscript_Printer = function() {
};
hscript_Printer.__name__ = true;
hscript_Printer.toString = function(e) {
	return new hscript_Printer().exprToString(e);
};
hscript_Printer.errorToString = function(e) {
	var message;
	switch(e._hx_index) {
	case 0:
		var c = e.c;
		message = "Invalid character: '" + String.fromCodePoint(c) + "' (" + c + ")";
		break;
	case 1:
		var s = e.s;
		message = "Unexpected token: \"" + s + "\"";
		break;
	case 2:
		message = "Unterminated string";
		break;
	case 3:
		message = "Unterminated comment";
		break;
	case 4:
		var str = e.msg;
		message = "Invalid preprocessor (" + str + ")";
		break;
	case 5:
		var v = e.v;
		message = "Unknown variable: " + v;
		break;
	case 6:
		var v1 = e.v;
		message = "Invalid iterator: " + v1;
		break;
	case 7:
		var op = e.op;
		message = "Invalid operator: " + op;
		break;
	case 8:
		var f = e.f;
		message = "Invalid access to field " + f;
		break;
	case 9:
		var msg = e.msg;
		message = msg;
		break;
	}
	return message;
};
hscript_Printer.prototype = {
	exprToString: function(e) {
		this.buf = new StringBuf();
		this.tabs = "";
		this.expr(e);
		return this.buf.b;
	}
	,typeToString: function(t) {
		this.buf = new StringBuf();
		this.tabs = "";
		this.type(t);
		return this.buf.b;
	}
	,add: function(s) {
		this.buf.b += Std.string(s);
	}
	,type: function(t) {
		switch(t._hx_index) {
		case 0:
			var params = t.params;
			var path = t.path;
			var s = path.join(".");
			this.buf.b += Std.string(s);
			if(params != null) {
				this.buf.b += "<";
				var first = true;
				var _g = 0;
				while(_g < params.length) {
					var p = params[_g];
					++_g;
					if(first) {
						first = false;
					} else {
						this.buf.b += ", ";
					}
					this.type(p);
				}
				this.buf.b += ">";
			}
			break;
		case 1:
			var ret = t.ret;
			var args = t.args;
			if(args.length == 0) {
				this.buf.b += "Void -> ";
			} else {
				var _g1 = 0;
				while(_g1 < args.length) {
					var a = args[_g1];
					++_g1;
					this.type(a);
					this.buf.b += " -> ";
				}
			}
			this.type(ret);
			break;
		case 2:
			var fields = t.fields;
			this.buf.b += "{";
			var first1 = true;
			var _g2 = 0;
			while(_g2 < fields.length) {
				var f = fields[_g2];
				++_g2;
				if(first1) {
					first1 = false;
					this.buf.b += " ";
				} else {
					this.buf.b += ", ";
				}
				this.buf.b += Std.string(f.name + " : ");
				this.type(f.t);
			}
			this.buf.b += first1 ? "}" : " }";
			break;
		case 3:
			var t1 = t.t;
			this.buf.b += "(";
			this.type(t1);
			this.buf.b += ")";
			break;
		}
	}
	,addType: function(t) {
		if(t != null) {
			this.buf.b += " : ";
			this.type(t);
		}
	}
	,expr: function(e) {
		if(e == null) {
			this.buf.b += "??NULL??";
			return;
		}
		switch(e._hx_index) {
		case 0:
			var c = e.c;
			switch(c._hx_index) {
			case 0:
				var i = c.v;
				this.buf.b += i == null ? "null" : "" + i;
				break;
			case 1:
				var f = c.f;
				this.buf.b += f == null ? "null" : "" + f;
				break;
			case 2:
				var s = c.s;
				this.buf.b += "\"";
				var s1 = s.split("\"").join("\\\"").split("\n").join("\\n").split("\r").join("\\r").split("\t").join("\\t");
				this.buf.b += Std.string(s1);
				this.buf.b += "\"";
				break;
			}
			break;
		case 1:
			var v = e.v;
			this.buf.b += v == null ? "null" : "" + v;
			break;
		case 2:
			var e1 = e.e;
			var t = e.t;
			var n = e.n;
			this.buf.b += Std.string("var " + n);
			this.addType(t);
			if(e1 != null) {
				this.buf.b += " = ";
				this.expr(e1);
			}
			break;
		case 3:
			var e2 = e.e;
			this.buf.b += "(";
			this.expr(e2);
			this.buf.b += ")";
			break;
		case 4:
			var el = e.e;
			if(el.length == 0) {
				this.buf.b += "{}";
			} else {
				this.tabs += "\t";
				this.buf.b += "{\n";
				var _g = 0;
				while(_g < el.length) {
					var e3 = el[_g];
					++_g;
					this.buf.b += Std.string(this.tabs);
					this.expr(e3);
					this.buf.b += ";\n";
				}
				this.tabs = HxOverrides.substr(this.tabs,1,null);
				this.buf.b += "}";
			}
			break;
		case 5:
			var f1 = e.f;
			var e4 = e.e;
			this.expr(e4);
			this.buf.b += Std.string("." + f1);
			break;
		case 6:
			var e21 = e.e2;
			var e11 = e.e1;
			var op = e.op;
			this.expr(e11);
			this.buf.b += Std.string(" " + op + " ");
			this.expr(e21);
			break;
		case 7:
			var e5 = e.e;
			var pre = e.prefix;
			var op1 = e.op;
			if(pre) {
				this.buf.b += op1 == null ? "null" : "" + op1;
				this.expr(e5);
			} else {
				this.expr(e5);
				this.buf.b += op1 == null ? "null" : "" + op1;
			}
			break;
		case 8:
			var args = e.params;
			var e6 = e.e;
			if(e6 == null) {
				this.expr(e6);
			} else {
				switch(e6._hx_index) {
				case 0:case 1:case 5:
					this.expr(e6);
					break;
				default:
					this.buf.b += "(";
					this.expr(e6);
					this.buf.b += ")";
				}
			}
			this.buf.b += "(";
			var first = true;
			var _g1 = 0;
			while(_g1 < args.length) {
				var a = args[_g1];
				++_g1;
				if(first) {
					first = false;
				} else {
					this.buf.b += ", ";
				}
				this.expr(a);
			}
			this.buf.b += ")";
			break;
		case 9:
			var e22 = e.e2;
			var e12 = e.e1;
			var cond = e.cond;
			this.buf.b += "if( ";
			this.expr(cond);
			this.buf.b += " ) ";
			this.expr(e12);
			if(e22 != null) {
				this.buf.b += " else ";
				this.expr(e22);
			}
			break;
		case 10:
			var e7 = e.e;
			var cond1 = e.cond;
			this.buf.b += "while( ";
			this.expr(cond1);
			this.buf.b += " ) ";
			this.expr(e7);
			break;
		case 11:
			var e8 = e.e;
			var it = e.it;
			var v1 = e.v;
			this.buf.b += Std.string("for( " + v1 + " in ");
			this.expr(it);
			this.buf.b += " ) ";
			this.expr(e8);
			break;
		case 12:
			this.buf.b += "break";
			break;
		case 13:
			this.buf.b += "continue";
			break;
		case 14:
			var ret = e.ret;
			var name = e.name;
			var e9 = e.e;
			var params = e.args;
			this.buf.b += "function";
			if(name != null) {
				this.buf.b += Std.string(" " + name);
			}
			this.buf.b += "(";
			var first1 = true;
			var _g2 = 0;
			while(_g2 < params.length) {
				var a1 = params[_g2];
				++_g2;
				if(first1) {
					first1 = false;
				} else {
					this.buf.b += ", ";
				}
				if(a1.opt) {
					this.buf.b += "?";
				}
				this.buf.b += Std.string(a1.name);
				this.addType(a1.t);
			}
			this.buf.b += ")";
			this.addType(ret);
			this.buf.b += " ";
			this.expr(e9);
			break;
		case 15:
			var e10 = e.e;
			this.buf.b += "return";
			if(e10 != null) {
				this.buf.b += " ";
				this.expr(e10);
			}
			break;
		case 16:
			var index = e.index;
			var e13 = e.e;
			this.expr(e13);
			this.buf.b += "[";
			this.expr(index);
			this.buf.b += "]";
			break;
		case 17:
			var el1 = e.e;
			this.buf.b += "[";
			var first2 = true;
			var _g3 = 0;
			while(_g3 < el1.length) {
				var e14 = el1[_g3];
				++_g3;
				if(first2) {
					first2 = false;
				} else {
					this.buf.b += ", ";
				}
				this.expr(e14);
			}
			this.buf.b += "]";
			break;
		case 18:
			var args1 = e.params;
			var cl = e.cl;
			this.buf.b += Std.string("new " + cl + "(");
			var first3 = true;
			var _g4 = 0;
			while(_g4 < args1.length) {
				var e15 = args1[_g4];
				++_g4;
				if(first3) {
					first3 = false;
				} else {
					this.buf.b += ", ";
				}
				this.expr(e15);
			}
			this.buf.b += ")";
			break;
		case 19:
			var e16 = e.e;
			this.buf.b += "throw ";
			this.expr(e16);
			break;
		case 20:
			var ecatch = e.ecatch;
			var t1 = e.t;
			var v2 = e.v;
			var e17 = e.e;
			this.buf.b += "try ";
			this.expr(e17);
			this.buf.b += Std.string(" catch( " + v2);
			this.addType(t1);
			this.buf.b += ") ";
			this.expr(ecatch);
			break;
		case 21:
			var fl = e.fl;
			if(fl.length == 0) {
				this.buf.b += "{}";
			} else {
				this.tabs += "\t";
				this.buf.b += "{\n";
				var _g5 = 0;
				while(_g5 < fl.length) {
					var f2 = fl[_g5];
					++_g5;
					this.buf.b += Std.string(this.tabs);
					this.buf.b += Std.string(f2.name + " : ");
					this.expr(f2.e);
					this.buf.b += ",\n";
				}
				this.tabs = HxOverrides.substr(this.tabs,1,null);
				this.buf.b += "}";
			}
			break;
		case 22:
			var e23 = e.e2;
			var e18 = e.e1;
			var c1 = e.cond;
			this.expr(c1);
			this.buf.b += " ? ";
			this.expr(e18);
			this.buf.b += " : ";
			this.expr(e23);
			break;
		case 23:
			var def = e.defaultExpr;
			var cases = e.cases;
			var e19 = e.e;
			this.buf.b += "switch( ";
			this.expr(e19);
			this.buf.b += ") {";
			var _g6 = 0;
			while(_g6 < cases.length) {
				var c2 = cases[_g6];
				++_g6;
				this.buf.b += "case ";
				var first4 = true;
				var _g7 = 0;
				var _g11 = c2.values;
				while(_g7 < _g11.length) {
					var v3 = _g11[_g7];
					++_g7;
					if(first4) {
						first4 = false;
					} else {
						this.buf.b += ", ";
					}
					this.expr(v3);
				}
				this.buf.b += ": ";
				this.expr(c2.expr);
				this.buf.b += ";\n";
			}
			if(def != null) {
				this.buf.b += "default: ";
				this.expr(def);
				this.buf.b += ";\n";
			}
			this.buf.b += "}";
			break;
		case 24:
			var e20 = e.e;
			var cond2 = e.cond;
			this.buf.b += "do ";
			this.expr(e20);
			this.buf.b += " while ( ";
			this.expr(cond2);
			this.buf.b += " )";
			break;
		case 25:
			var e24 = e.e;
			var args2 = e.args;
			var name1 = e.name;
			this.buf.b += "@";
			this.buf.b += name1 == null ? "null" : "" + name1;
			if(args2 != null && args2.length > 0) {
				this.buf.b += "(";
				var first5 = true;
				var _g8 = 0;
				while(_g8 < args2.length) {
					var a2 = args2[_g8];
					++_g8;
					if(first5) {
						first5 = false;
					} else {
						this.buf.b += ", ";
					}
					this.expr(e24);
				}
				this.buf.b += ")";
			}
			this.buf.b += " ";
			this.expr(e24);
			break;
		}
	}
	,__class__: hscript_Printer
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if((o instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = l;
			while(_g3 < _g11) {
				var i1 = _g3++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = (e1 instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g = 0;
		var _g1 = intf.length;
		while(_g < _g1) {
			var i = _g++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return ((o | 0) === o);
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if((o instanceof cl)) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if((o instanceof cl)) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return $hxEnums[o.__enum__] == cl;
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var js_node_ChildProcess = require("child_process");
var js_node_Dns = require("dns");
var js_node_Fs = require("fs");
var js_node_buffer__$Buffer_Helper = function() { };
js_node_buffer__$Buffer_Helper.__name__ = true;
js_node_buffer__$Buffer_Helper.bytesOfBuffer = function(b) {
	var o = Object.create(haxe_io_Bytes.prototype);
	o.length = b.byteLength;
	o.b = b;
	b.bufferValue = b;
	b.hxBytes = o;
	b.bytes = b;
	return o;
};
var js_node_net_Socket = require("net").Socket;
var sys_FileSystem = function() { };
sys_FileSystem.__name__ = true;
sys_FileSystem.exists = function(path) {
	try {
		js_node_Fs.accessSync(path);
		return true;
	} catch( _ ) {
		var _1 = (_ instanceof js__$Boot_HaxeError) ? _.val : _;
		return false;
	}
};
var sys__$NodeSync_Deasync = require("deasync");
var sys_NodeSync = function() { };
sys_NodeSync.__name__ = true;
sys_NodeSync.callMany = function(f) {
	var retArgs = null;
	var wait = Reflect.makeVarArgs(function(args) {
		retArgs = args;
	});
	f(wait);
	sys__$NodeSync_Deasync.loopWhile(function() {
		return retArgs == null;
	});
	return retArgs;
};
sys_NodeSync.callVoid = function(f) {
	var called = false;
	f(function() {
		called = true;
	});
	sys__$NodeSync_Deasync.loopWhile(function() {
		return !called;
	});
};
sys_NodeSync.wait = function(f) {
	sys__$NodeSync_Deasync.loopWhile(function() {
		return !f();
	});
};
var sys_io_FileInput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
sys_io_FileInput.__name__ = true;
sys_io_FileInput.__super__ = haxe_io_Input;
sys_io_FileInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		var buf = new js_node_buffer_Buffer(1);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,0,1,this.pos);
		} catch( e ) {
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			if(e1.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e1));
			}
		}
		if(bytesRead == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.pos++;
		return buf[0];
	}
	,readBytes: function(s,pos,len) {
		var data = s.b;
		var buf = new js_node_buffer_Buffer(data.buffer,data.byteOffset,s.length);
		var bytesRead;
		try {
			bytesRead = js_node_Fs.readSync(this.fd,buf,pos,len,this.pos);
		} catch( e ) {
			var e1 = (e instanceof js__$Boot_HaxeError) ? e.val : e;
			if(e1.code == "EOF") {
				throw new js__$Boot_HaxeError(new haxe_io_Eof());
			} else {
				throw new js__$Boot_HaxeError(haxe_io_Error.Custom(e1));
			}
		}
		if(bytesRead == 0) {
			throw new js__$Boot_HaxeError(new haxe_io_Eof());
		}
		this.pos += bytesRead;
		return bytesRead;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,eof: function() {
		return this.pos >= js_node_Fs.fstatSync(this.fd).size;
	}
	,__class__: sys_io_FileInput
});
var sys_io_FileOutput = function(fd) {
	this.fd = fd;
	this.pos = 0;
};
sys_io_FileOutput.__name__ = true;
sys_io_FileOutput.__super__ = haxe_io_Output;
sys_io_FileOutput.prototype = $extend(haxe_io_Output.prototype,{
	writeByte: function(b) {
		var buf = new js_node_buffer_Buffer(1);
		buf[0] = b;
		js_node_Fs.writeSync(this.fd,buf,0,1,this.pos);
		this.pos++;
	}
	,writeBytes: function(s,pos,len) {
		var data = s.b;
		var buf = new js_node_buffer_Buffer(data.buffer,data.byteOffset,s.length);
		var wrote = js_node_Fs.writeSync(this.fd,buf,pos,len,this.pos);
		this.pos += wrote;
		return wrote;
	}
	,close: function() {
		js_node_Fs.closeSync(this.fd);
	}
	,seek: function(p,pos) {
		switch(pos._hx_index) {
		case 0:
			this.pos = p;
			break;
		case 1:
			this.pos += p;
			break;
		case 2:
			this.pos = js_node_Fs.fstatSync(this.fd).size + p;
			break;
		}
	}
	,tell: function() {
		return this.pos;
	}
	,__class__: sys_io_FileOutput
});
var sys_io_FileSeek = $hxEnums["sys.io.FileSeek"] = { __ename__ : true, __constructs__ : ["SeekBegin","SeekCur","SeekEnd"]
	,SeekBegin: {_hx_index:0,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekCur: {_hx_index:1,__enum__:"sys.io.FileSeek",toString:$estr}
	,SeekEnd: {_hx_index:2,__enum__:"sys.io.FileSeek",toString:$estr}
};
var sys_net_Host = function(name) {
	var ret = sys_NodeSync.callMany(function(callb) {
		js_node_Dns.lookup(name,{ family : 4},callb);
	});
	if(ret[0] != null) {
		throw js__$Boot_HaxeError.wrap(ret[0]);
	}
	this.host = name;
	this.ipStr = ret[1];
	var _g = [];
	var _g1 = 0;
	var _g2 = this.ipStr.split(".");
	while(_g1 < _g2.length) {
		var p = _g2[_g1];
		++_g1;
		_g.push(Std.parseInt(p));
	}
	var parts = _g;
	this.ip = parts[0] << 24 | parts[1] << 16 | parts[2] << 8 | parts[3];
};
sys_net_Host.__name__ = true;
sys_net_Host.localhost = function() {
	throw new js__$Boot_HaxeError("Not implemented");
};
sys_net_Host.prototype = {
	toString: function() {
		return this.ipStr;
	}
	,reverse: function() {
		throw new js__$Boot_HaxeError("Not implemented");
	}
	,__class__: sys_net_Host
};
var sys_net_SocketInput = function(s) {
	this.s = s;
};
sys_net_SocketInput.__name__ = true;
sys_net_SocketInput.__super__ = haxe_io_Input;
sys_net_SocketInput.prototype = $extend(haxe_io_Input.prototype,{
	readByte: function() {
		this.s.waitData();
		var buf = this.s.inputData[0];
		var b = buf[this.s.inputPos++];
		if(this.s.inputPos == buf.length) {
			this.s.inputPos = 0;
			this.s.inputData.shift();
		}
		return b;
	}
	,readBytes: function(buf,pos,len) {
		this.s.waitData();
		var data = buf.b;
		var nbuf = new js_node_buffer_Buffer(data.buffer,data.byteOffset,buf.length);
		var startPos = pos;
		while(len > 0) {
			var buf1 = this.s.inputData[0];
			if(buf1 == null) {
				break;
			}
			var avail = buf1.length - this.s.inputPos;
			if(avail > len) {
				buf1.copy(nbuf,pos,this.s.inputPos,this.s.inputPos + len);
				pos += len;
				this.s.inputPos += len;
				break;
			}
			buf1.copy(nbuf,pos,this.s.inputPos,this.s.inputPos + avail);
			pos += avail;
			len -= avail;
			this.s.inputData.shift();
			this.s.inputPos = 0;
		}
		return pos - startPos;
	}
	,__class__: sys_net_SocketInput
});
var sys_net_Socket = function() {
	this.inputPos = 0;
	this.inputData = [];
	this.input = new sys_net_SocketInput(this);
};
sys_net_Socket.__name__ = true;
sys_net_Socket.prototype = {
	connect: function(host,port) {
		var _gthis = this;
		this.s = new js_node_net_Socket();
		this.s.on("data",function(buf) {
			_gthis.inputData.push(buf);
		});
		sys_NodeSync.callVoid(function(callb) {
			_gthis.s.connect(port,host.host,callb);
		});
	}
	,waitData: function() {
		var _gthis = this;
		if(this.inputData.length == 0) {
			var f = function() {
				return _gthis.inputData.length > 0;
			};
			sys__$NodeSync_Deasync.loopWhile(function() {
				return !f();
			});
		}
	}
	,close: function() {
		if(this.s != null) {
			this.s.destroy();
			this.s = null;
		}
	}
	,__class__: sys_net_Socket
};
if( String.fromCodePoint == null ) String.fromCodePoint = function(c) { return c < 0x10000 ? String.fromCharCode(c) : String.fromCharCode((c>>10)+0xD7C0)+String.fromCharCode((c&0x3FF)+0xDC00); }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
Date.prototype.__class__ = Date;
Date.__name__ = "Date";
var Int = { };
var Dynamic = { };
var Float = Number;
var Bool = Boolean;
var Class = { };
var Enum = { };
var __map_reserved = {};
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
HLAdapter.UID = 0;
HLAdapter.DEBUG = false;
HLAdapter.isWindow = Sys.systemName() == "Windows";
format_hl_Reader.OP_ARGS = [2,2,2,2,2,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,1,1,2,3,4,5,6,-1,-1,-1,-1,2,3,3,2,2,3,3,2,2,3,3,2,2,2,2,3,3,3,3,3,3,3,3,3,3,1,2,2,2,2,2,2,2,0,1,1,1,-1,1,2,1,3,3,3,3,3,3,3,3,1,2,2,2,2,2,2,2,-1,2,2,4,3,0,2,3,0];
haxe_io_FPHelper.helper = new DataView(new ArrayBuffer(8));
hld__$Api_Register_$Impl_$.Esp = 0;
hld__$Api_Register_$Impl_$.Ebp = 1;
hld__$Api_Register_$Impl_$.Eip = 2;
hld__$Api_Register_$Impl_$.EFlags = 3;
hld__$Api_Register_$Impl_$.Dr0 = 4;
hld__$Api_Register_$Impl_$.Dr1 = 5;
hld__$Api_Register_$Impl_$.Dr2 = 6;
hld__$Api_Register_$Impl_$.Dr3 = 7;
hld__$Api_Register_$Impl_$.Dr6 = 8;
hld__$Api_Register_$Impl_$.Dr7 = 9;
hld_Debugger.INT3 = 204;
hld_Debugger.HW_REGS = [4,5,6,7];
hld_Debugger.IGNORED_ROOTS = ["hl","sys","haxe","Date","EReg","Math","Reflect","Std","String","StringBuf","Sys","Type","Xml","ArrayObj"];
hld_Eval.HASH_PREFIX = "$_h$";
hld_NodeDebugApiLinux.REG_ADDR = [19,4,16,18,106,107,108,109,110,111,112,113];
hld__$NodeFFI_CType_$Impl_$.int = "int";
hld__$NodeFFI_CType_$Impl_$.bool = "bool";
hld__$NodeFFI_CType_$Impl_$.string = "string";
hld__$NodeFFI_CType_$Impl_$.pointer = "pointer";
hld__$NodeFFI_CType_$Impl_$.long = "long";
hld__$NodeFFI_CType_$Impl_$.size_t = "size_t";
hscript_Parser.p1 = 0;
hscript_Parser.readPos = 0;
hscript_Parser.tokenMin = 0;
hscript_Parser.tokenMax = 0;
js_Boot.__toStr = ({ }).toString;
HLAdapter.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
